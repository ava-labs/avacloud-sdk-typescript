/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { dataEvmAddressTransactionsList } from "../funcs/dataEvmAddressTransactionsList.js";
import { dataEvmAddressTransactionsListErc1155 } from "../funcs/dataEvmAddressTransactionsListErc1155.js";
import { dataEvmAddressTransactionsListErc20 } from "../funcs/dataEvmAddressTransactionsListErc20.js";
import { dataEvmAddressTransactionsListErc721 } from "../funcs/dataEvmAddressTransactionsListErc721.js";
import { dataEvmAddressTransactionsListInternal } from "../funcs/dataEvmAddressTransactionsListInternal.js";
import { dataEvmAddressTransactionsListNative } from "../funcs/dataEvmAddressTransactionsListNative.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class AvaCloudSDKDataTransactions extends ClientSDK {
  /**
   * List transactions
   *
   * @remarks
   * Returns a list of transactions where the given wallet address had an on-chain interaction for the given chain. The ERC-20 transfers, ERC-721 transfers, ERC-1155, and internal transactions returned are only those where the input address had an interaction. Specifically, those lists only inlcude entries where the input address was the sender (`from` field) or the receiver (`to` field) for the sub-transaction. Therefore the transactions returned from this list may not be complete representations of the on-chain data. For a complete view of a transaction use the `/chains/:chainId/transactions/:txHash` endpoint.
   *
   * Filterable by block ranges.
   */
  async list(
    request: operations.ListTransactionsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListTransactionsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(dataEvmAddressTransactionsList(
      this,
      request,
      options,
    ));
  }

  /**
   * List native transactions
   *
   * @remarks
   * Lists native transactions for an address. Filterable by block range.
   */
  async listNative(
    request: operations.ListNativeTransactionsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListNativeTransactionsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(dataEvmAddressTransactionsListNative(
      this,
      request,
      options,
    ));
  }

  /**
   * List ERC-20 transfers
   *
   * @remarks
   * Lists ERC-20 transfers for an address. Filterable by block range.
   */
  async listErc20(
    request: operations.ListErc20TransactionsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListErc20TransactionsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(dataEvmAddressTransactionsListErc20(
      this,
      request,
      options,
    ));
  }

  /**
   * List ERC-721 transfers
   *
   * @remarks
   * Lists ERC-721 transfers for an address. Filterable by block range.
   */
  async listErc721(
    request: operations.ListErc721TransactionsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListErc721TransactionsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(dataEvmAddressTransactionsListErc721(
      this,
      request,
      options,
    ));
  }

  /**
   * List ERC-1155 transfers
   *
   * @remarks
   * Lists ERC-1155 transfers for an address. Filterable by block range.
   */
  async listErc1155(
    request: operations.ListErc1155TransactionsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListErc1155TransactionsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(dataEvmAddressTransactionsListErc1155(
      this,
      request,
      options,
    ));
  }

  /**
   * List internal transactions
   *
   * @remarks
   * Returns a list of internal transactions for an address and chain. Filterable by block range.
   *
   * Note that the internal transactions list only contains `CALL` or `CALLCODE` transactions with a non-zero value and `CREATE`/`CREATE2`/`CREATE3` transactions. To get a complete list of internal transactions use the `debug_` prefixed RPC methods on an archive node.
   */
  async listInternal(
    request: operations.ListInternalTransactionsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.ListInternalTransactionsResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(dataEvmAddressTransactionsListInternal(
      this,
      request,
      options,
    ));
  }
}
