/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { nfTsGetTokenDetails } from "../funcs/nfTsGetTokenDetails.js";
import { nfTsListTokens } from "../funcs/nfTsListTokens.js";
import { nfTsReindexNft } from "../funcs/nfTsReindexNft.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class NFTs extends ClientSDK {
    /**
     * Reindex NFT metadata
     *
     * @remarks
     * Triggers reindexing of token metadata for an NFT token. Reindexing can only be called once per hour for each NFT token.
     */
    async reindexNft(
        request: operations.ReindexNftRequest,
        options?: RequestOptions
    ): Promise<void> {
        return unwrapAsync(nfTsReindexNft(this, request, options));
    }

    /**
     * List tokens
     *
     * @remarks
     * Lists tokens for an NFT contract.
     */
    async listTokens(
        request: operations.ListTokensRequest,
        options?: RequestOptions
    ): Promise<components.ListNftTokens> {
        return unwrapAsync(nfTsListTokens(this, request, options));
    }

    /**
     * Get token details
     *
     * @remarks
     * Gets token details for a specific token of an NFT contract.
     */
    async getTokenDetails(
        request: operations.GetTokenDetailsRequest,
        options?: RequestOptions
    ): Promise<operations.GetTokenDetailsResponseBody> {
        return unwrapAsync(nfTsGetTokenDetails(this, request, options));
    }
}
