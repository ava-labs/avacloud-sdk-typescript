/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { lookingGlassCompositeQuery } from "../funcs/lookingGlassCompositeQuery.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class LookingGlass extends ClientSDK {
  /**
   * Composite query
   *
   * @remarks
   * Composite query to get list of addresses from multiple subqueries.
   */
  async compositeQuery(
    request: components.CompositeQueryRequestDto,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.CompositeQueryV2Response, { cursor: string }>
  > {
    return unwrapResultIterator(lookingGlassCompositeQuery(
      this,
      request,
      options,
    ));
  }
}
