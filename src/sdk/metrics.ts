/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { metricsHealthCheck } from "../funcs/metricsHealthCheck.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Chains } from "./chains.js";
import { Networks } from "./networks.js";
import { Subnets } from "./subnets.js";

export class Metrics extends ClientSDK {
  private _chains?: Chains;
  get chains(): Chains {
    return (this._chains ??= new Chains(this._options));
  }

  private _networks?: Networks;
  get networks(): Networks {
    return (this._networks ??= new Networks(this._options));
  }

  private _subnets?: Subnets;
  get subnets(): Subnets {
    return (this._subnets ??= new Subnets(this._options));
  }

  /**
   * Get the health of the service
   *
   * @remarks
   * Check the health of the service.
   */
  async healthCheck(
    options?: RequestOptions,
  ): Promise<components.HealthCheckResultDto> {
    return unwrapAsync(metricsHealthCheck(
      this,
      options,
    ));
  }
}
