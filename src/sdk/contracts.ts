/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { dataEvmContractsGetDeploymentTransaction } from "../funcs/dataEvmContractsGetDeploymentTransaction.js";
import { dataEvmContractsGetMetadata } from "../funcs/dataEvmContractsGetMetadata.js";
import { dataEvmContractsListTransfers } from "../funcs/dataEvmContractsListTransfers.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Contracts extends ClientSDK {
  /**
   * Get deployment transaction
   *
   * @remarks
   * If the address is a smart contract, returns the transaction in which it was deployed.
   */
  async getDeploymentTransaction(
    request: operations.GetDeploymentTransactionRequest,
    options?: RequestOptions,
  ): Promise<components.GetTransactionResponse> {
    return unwrapAsync(dataEvmContractsGetDeploymentTransaction(
      this,
      request,
      options,
    ));
  }

  /**
   * Get contract metadata
   *
   * @remarks
   * Gets metadata about the contract at the given address.
   */
  async getMetadata(
    request: operations.GetContractMetadataRequest,
    options?: RequestOptions,
  ): Promise<operations.GetContractMetadataResponseBody> {
    return unwrapAsync(dataEvmContractsGetMetadata(
      this,
      request,
      options,
    ));
  }

  /**
   * List ERC transfers
   *
   * @remarks
   * Lists ERC transfers for an ERC-20, ERC-721, or ERC-1155 contract address.
   */
  async listTransfers(
    request: operations.ListTransfersRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListTransfersResponse, { cursor: string }>
  > {
    return unwrapResultIterator(dataEvmContractsListTransfers(
      this,
      request,
      options,
    ));
  }
}
