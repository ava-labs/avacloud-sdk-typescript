/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { evmBlocksGetBlock } from "../funcs/evmBlocksGetBlock.js";
import { evmBlocksGetLatestBlocks } from "../funcs/evmBlocksGetLatestBlocks.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class EVMBlocks extends ClientSDK {
    /**
     * List latest blocks
     *
     * @remarks
     * Lists the latest indexed blocks on the EVM-compatible chain sorted in descending order by block timestamp.
     */
    async getLatestBlocks(
        request: operations.GetLatestBlocksRequest,
        options?: RequestOptions
    ): Promise<components.ListEvmBlocksResponse> {
        return unwrapAsync(evmBlocksGetLatestBlocks(this, request, options));
    }

    /**
     * Get block
     *
     * @remarks
     * Gets the details of an individual block on the EVM-compatible chain.
     */
    async getBlock(
        request: operations.GetBlockRequest,
        options?: RequestOptions
    ): Promise<components.GetEvmBlockResponse> {
        return unwrapAsync(evmBlocksGetBlock(this, request, options));
    }
}
