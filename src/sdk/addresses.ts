/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { webhooksAddressesAdd } from "../funcs/webhooksAddressesAdd.js";
import { webhooksAddressesList } from "../funcs/webhooksAddressesList.js";
import { webhooksAddressesRemove } from "../funcs/webhooksAddressesRemove.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Addresses extends ClientSDK {
  /**
   * List adresses by EVM activity webhooks
   *
   * @remarks
   * List adresses by webhook. Only valid for EVM activity webhooks.
   */
  async list(
    request: operations.GetAddressesFromWebhookRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.GetAddressesFromWebhookResponse, { cursor: string }>
  > {
    return unwrapResultIterator(webhooksAddressesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove addresses from EVM activity  webhook
   *
   * @remarks
   * Remove addresses from webhook. Only valid for EVM activity webhooks.
   */
  async remove(
    request: operations.RemoveAddressesFromWebhookRequest,
    options?: RequestOptions,
  ): Promise<components.EVMAddressActivityResponse> {
    return unwrapAsync(webhooksAddressesRemove(
      this,
      request,
      options,
    ));
  }

  /**
   * Add addresses to EVM activity webhook
   *
   * @remarks
   * Add addresses to webhook. Only valid for EVM activity webhooks.
   */
  async add(
    request: operations.AddAddressesToWebhookRequest,
    options?: RequestOptions,
  ): Promise<components.EVMAddressActivityResponse> {
    return unwrapAsync(webhooksAddressesAdd(
      this,
      request,
      options,
    ));
  }
}
