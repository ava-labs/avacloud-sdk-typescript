/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { evmBalancesGetNativeBalance } from "../funcs/evmBalancesGetNativeBalance.js";
import { evmBalancesListCollectibleBalances } from "../funcs/evmBalancesListCollectibleBalances.js";
import { evmBalancesListErc1155Balances } from "../funcs/evmBalancesListErc1155Balances.js";
import { evmBalancesListErc20Balances } from "../funcs/evmBalancesListErc20Balances.js";
import { evmBalancesListErc721Balances } from "../funcs/evmBalancesListErc721Balances.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class EVMBalances extends ClientSDK {
    /**
     * Get native token balance
     *
     * @remarks
     * Gets native token balance of a wallet address.
     *
     * Balance at a given block can be retrieved with the `blockNumber` parameter.
     */
    async getNativeBalance(
        request: operations.GetNativeBalanceRequest,
        options?: RequestOptions
    ): Promise<components.GetNativeBalanceResponse> {
        return unwrapAsync(evmBalancesGetNativeBalance(this, request, options));
    }

    /**
     * List ERC-20 balances
     *
     * @remarks
     * Lists ERC-20 token balances of a wallet address.
     *
     * Balance at a given block can be retrieved with the `blockNumber` parameter.
     *
     * Balance for specific contracts can be retrieved with the `contractAddresses` parameter.
     */
    async listErc20Balances(
        request: operations.ListErc20BalancesRequest,
        options?: RequestOptions
    ): Promise<components.ListErc20BalancesResponse> {
        return unwrapAsync(evmBalancesListErc20Balances(this, request, options));
    }

    /**
     * List ERC-721 balances
     *
     * @remarks
     * Lists ERC-721 token balances of a wallet address.
     *
     * Balance for a specific contract can be retrieved with the `contractAddress` parameter.
     */
    async listErc721Balances(
        request: operations.ListErc721BalancesRequest,
        options?: RequestOptions
    ): Promise<components.ListErc721BalancesResponse> {
        return unwrapAsync(evmBalancesListErc721Balances(this, request, options));
    }

    /**
     * List ERC-1155 balances
     *
     * @remarks
     * Lists ERC-1155 token balances of a wallet address.
     *
     * Balance at a given block can be retrieved with the `blockNumber` parameter.
     *
     * Balance for a specific contract can be retrieved with the `contractAddress` parameter.
     */
    async listErc1155Balances(
        request: operations.ListErc1155BalancesRequest,
        options?: RequestOptions
    ): Promise<components.ListErc1155BalancesResponse> {
        return unwrapAsync(evmBalancesListErc1155Balances(this, request, options));
    }

    /**
     * List collectible (ERC-721/ERC-1155) balances
     *
     * @remarks
     * Lists ERC-721 and ERC-1155 token balances of a wallet address.
     *
     * Balance for a specific contract can be retrieved with the `contractAddress` parameter.
     */
    async listCollectibleBalances(
        request: operations.ListCollectibleBalancesRequest,
        options?: RequestOptions
    ): Promise<components.ListCollectibleBalancesResponse> {
        return unwrapAsync(evmBalancesListCollectibleBalances(this, request, options));
    }
}
