/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { teleporterGetTeleporterMessage } from "../funcs/teleporterGetTeleporterMessage.js";
import { teleporterListTeleporterMessages } from "../funcs/teleporterListTeleporterMessages.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Teleporter extends ClientSDK {
    /**
     * Get a teleporter message
     *
     * @remarks
     * Gets a teleporter message by message ID.
     */
    async getTeleporterMessage(
        request: operations.GetTeleporterMessageRequest,
        options?: RequestOptions
    ): Promise<operations.GetTeleporterMessageResponseBody> {
        return unwrapAsync(teleporterGetTeleporterMessage(this, request, options));
    }

    /**
     * List teleporter messages
     *
     * @remarks
     * Lists teleporter messages. Ordered by timestamp in descending order.
     */
    async listTeleporterMessages(
        request: operations.ListTeleporterMessagesRequest,
        options?: RequestOptions
    ): Promise<components.ListTeleporterMessagesResponse> {
        return unwrapAsync(teleporterListTeleporterMessages(this, request, options));
    }
}
