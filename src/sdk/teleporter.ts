/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { dataTeleporterGetTeleporterMessage } from "../funcs/dataTeleporterGetTeleporterMessage.js";
import { dataTeleporterListTeleporterMessages } from "../funcs/dataTeleporterListTeleporterMessages.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Teleporter extends ClientSDK {
    /**
     * Get a teleporter message
     *
     * @remarks
     * Gets a teleporter message by message ID.
     */
    async getTeleporterMessage(
        request: operations.GetTeleporterMessageRequest,
        options?: RequestOptions & { serverURL?: string }
    ): Promise<operations.GetTeleporterMessageResponseBody> {
        return unwrapAsync(dataTeleporterGetTeleporterMessage(this, request, options));
    }

    /**
     * List teleporter messages
     *
     * @remarks
     * Lists teleporter messages. Ordered by timestamp in descending order.
     */
    async listTeleporterMessages(
        request: operations.ListTeleporterMessagesRequest,
        options?: RequestOptions & { serverURL?: string }
    ): Promise<PageIterator<operations.ListTeleporterMessagesResponse>> {
        return unwrapResultIterator(dataTeleporterListTeleporterMessages(this, request, options));
    }
}
