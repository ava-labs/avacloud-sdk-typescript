/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { dataTeleporterGetTeleporterMessage } from "../funcs/dataTeleporterGetTeleporterMessage.js";
import { dataTeleporterListTeleporterMessages } from "../funcs/dataTeleporterListTeleporterMessages.js";
import { dataTeleporterListTeleporterMessagesByAddress } from "../funcs/dataTeleporterListTeleporterMessagesByAddress.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Teleporter extends ClientSDK {
  /**
   * **[Deprecated]** Gets a teleporter message by message ID.
   *
   * ⚠️ **This operation will be removed in a future release.  Please use /v1/icm/messages/:messageId endpoint instead** .
   *
   * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  async getTeleporterMessage(
    request: operations.GetTeleporterMessageRequest,
    options?: RequestOptions,
  ): Promise<operations.GetTeleporterMessageResponseBody> {
    return unwrapAsync(dataTeleporterGetTeleporterMessage(
      this,
      request,
      options,
    ));
  }

  /**
   * **[Deprecated]** Lists teleporter messages. Ordered by timestamp in  descending order.
   *
   * ⚠️ **This operation will be removed in a future release.  Please use /v1/icm/messages endpoint instead** .
   *
   * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  async listTeleporterMessages(
    request: operations.ListTeleporterMessagesRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListTeleporterMessagesResponse, { cursor: string }>
  > {
    return unwrapResultIterator(dataTeleporterListTeleporterMessages(
      this,
      request,
      options,
    ));
  }

  /**
   * **[Deprecated]** Lists teleporter messages by address. Ordered by  timestamp in descending order.
   *
   * ⚠️ **This operation will be removed in a future release.  Please use /v1/icm/addresses/:address/messages endpoint instead** .
   *
   * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  async listTeleporterMessagesByAddress(
    request: operations.ListTeleporterMessagesByAddressRequest,
    options?: RequestOptions,
  ): Promise<components.ListTeleporterMessagesResponse> {
    return unwrapAsync(dataTeleporterListTeleporterMessagesByAddress(
      this,
      request,
      options,
    ));
  }
}
