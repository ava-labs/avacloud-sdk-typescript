/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { glacierPrimaryNetworkVerticesGetVertexByHash } from "../funcs/glacierPrimaryNetworkVerticesGetVertexByHash.js";
import { glacierPrimaryNetworkVerticesGetVertexByHeight } from "../funcs/glacierPrimaryNetworkVerticesGetVertexByHeight.js";
import { glacierPrimaryNetworkVerticesListLatestXChainVertices } from "../funcs/glacierPrimaryNetworkVerticesListLatestXChainVertices.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Vertices extends ClientSDK {
    /**
     * List vertices
     *
     * @remarks
     * Lists latest vertices on the X-Chain.
     */
    async listLatestXChainVertices(
        request: operations.ListLatestXChainVerticesRequest,
        options?: RequestOptions
    ): Promise<PageIterator<operations.ListLatestXChainVerticesResponse>> {
        return unwrapResultIterator(
            glacierPrimaryNetworkVerticesListLatestXChainVertices(this, request, options)
        );
    }

    /**
     * Get vertex
     *
     * @remarks
     * Gets a single vertex on the X-Chain.
     */
    async getVertexByHash(
        request: operations.GetVertexByHashRequest,
        options?: RequestOptions
    ): Promise<components.XChainVertex> {
        return unwrapAsync(glacierPrimaryNetworkVerticesGetVertexByHash(this, request, options));
    }

    /**
     * List vertices by height
     *
     * @remarks
     * Lists vertices at the given vertex height on the X-Chain.
     */
    async getVertexByHeight(
        request: operations.GetVertexByHeightRequest,
        options?: RequestOptions
    ): Promise<PageIterator<operations.GetVertexByHeightResponse>> {
        return unwrapResultIterator(
            glacierPrimaryNetworkVerticesGetVertexByHeight(this, request, options)
        );
    }
}
