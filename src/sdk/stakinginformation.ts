/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { metricsStakingInformationGetDelegatorCount } from "../funcs/metricsStakingInformationGetDelegatorCount.js";
import { metricsStakingInformationGetDelegatorWeight } from "../funcs/metricsStakingInformationGetDelegatorWeight.js";
import { metricsStakingInformationGetValidatorCount } from "../funcs/metricsStakingInformationGetValidatorCount.js";
import { metricsStakingInformationGetValidatorWeight } from "../funcs/metricsStakingInformationGetValidatorWeight.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class StakingInformation extends ClientSDK {
    /**
     * Get validation count by subnet id
     *
     * @remarks
     * Get the validation count for a subnet.
     */
    async getValidatorCount(
        request: operations.GetValidatorCountRequest,
        options?: RequestOptions & { serverURL?: string }
    ): Promise<PageIterator<operations.GetValidatorCountResponse>> {
        return unwrapResultIterator(
            metricsStakingInformationGetValidatorCount(this, request, options)
        );
    }

    /**
     * Get validation weight by subnet id
     *
     * @remarks
     * Get the validation weight for a subnet.
     */
    async getValidatorWeight(
        request: operations.GetValidatorWeightRequest,
        options?: RequestOptions & { serverURL?: string }
    ): Promise<PageIterator<operations.GetValidatorWeightResponse>> {
        return unwrapResultIterator(
            metricsStakingInformationGetValidatorWeight(this, request, options)
        );
    }

    /**
     * Get delegation count by subnet id
     *
     * @remarks
     * Get the delegation count for a subnet.
     */
    async getDelegatorCount(
        request: operations.GetDelegatorCountRequest,
        options?: RequestOptions & { serverURL?: string }
    ): Promise<PageIterator<operations.GetDelegatorCountResponse>> {
        return unwrapResultIterator(
            metricsStakingInformationGetDelegatorCount(this, request, options)
        );
    }

    /**
     * Get delegation weight by subnet id
     *
     * @remarks
     * Get the delegation for a subnet.
     */
    async getDelegatorWeight(
        request: operations.GetDelegatorWeightRequest,
        options?: RequestOptions & { serverURL?: string }
    ): Promise<PageIterator<operations.GetDelegatorWeightResponse>> {
        return unwrapResultIterator(
            metricsStakingInformationGetDelegatorWeight(this, request, options)
        );
    }
}
