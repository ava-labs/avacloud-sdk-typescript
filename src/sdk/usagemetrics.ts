/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { glacierUsageMetricsGetApiLogs } from "../funcs/glacierUsageMetricsGetApiLogs.js";
import { glacierUsageMetricsGetApiUsageMetrics } from "../funcs/glacierUsageMetricsGetApiUsageMetrics.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class UsageMetrics extends ClientSDK {
    /**
     * Get usage metrics for the Glacier API
     *
     * @remarks
     * Gets metrics for Glacier API usage over a specified time interval aggregated at the specified time-duration granularity.
     */
    async getApiUsageMetrics(
        request: operations.GetApiUsageMetricsRequest,
        options?: RequestOptions
    ): Promise<components.UsageMetricsResponseDTO> {
        return unwrapAsync(glacierUsageMetricsGetApiUsageMetrics(this, request, options));
    }

    /**
     * Get logs for requests made by client
     *
     * @remarks
     * Gets logs for requests made by client over a specified time interval for a specific organization.
     */
    async getApiLogs(
        request: operations.GetApiLogsRequest,
        options?: RequestOptions
    ): Promise<PageIterator<operations.GetApiLogsResponse>> {
        return unwrapResultIterator(glacierUsageMetricsGetApiLogs(this, request, options));
    }
}
