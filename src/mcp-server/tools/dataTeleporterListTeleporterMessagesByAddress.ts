/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { dataTeleporterListTeleporterMessagesByAddress } from "../../funcs/dataTeleporterListTeleporterMessagesByAddress.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.ListTeleporterMessagesByAddressRequest$inboundSchema,
};

export const tool$dataTeleporterListTeleporterMessagesByAddress: ToolDefinition<
  typeof args
> = {
  name: "data-teleporter_list-teleporter-messages-by-address",
  description:
    `**[Deprecated]** Lists teleporter messages by address. Ordered by  timestamp in descending order.

⚠️ **This operation will be removed in a future release.  Please use /v1/icm/addresses/:address/messages endpoint instead** .`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] =
      await dataTeleporterListTeleporterMessagesByAddress(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
