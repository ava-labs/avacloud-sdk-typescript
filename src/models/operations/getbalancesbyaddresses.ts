/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export const GetBalancesByAddressesServerList = [
  "https://glacier-api.avax.network",
] as const;

export type GetBalancesByAddressesGlobals = {
  /**
   * A supported network type mainnet or testnet/fuji.
   */
  network?: components.GlobalParamNetwork | undefined;
};

export type GetBalancesByAddressesRequest = {
  /**
   * An epoch timestamp in seconds. Balance will be calculated at this timestamp.
   */
  blockTimestamp?: number | undefined;
  /**
   * A comma separated list of X-Chain or P-Chain wallet addresses, starting with "avax"/"fuji", "P-avax"/"P-fuji" or "X-avax"/"X-fuji".
   */
  addresses?: string | undefined;
  /**
   * A primary network blockchain id or alias.
   */
  blockchainId: components.BlockchainId;
  /**
   * Either mainnet or testnet/fuji.
   */
  network?: components.GlobalParamNetwork | undefined;
};

/**
 * Successful response
 */
export type GetBalancesByAddressesResponseBody =
  | components.ListPChainBalancesResponse
  | components.ListXChainBalancesResponse
  | components.ListCChainAtomicBalancesResponse;

/** @internal */
export const GetBalancesByAddressesGlobals$inboundSchema: z.ZodType<
  GetBalancesByAddressesGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  network: components.GlobalParamNetwork$inboundSchema.optional(),
});

/** @internal */
export type GetBalancesByAddressesGlobals$Outbound = {
  network?: string | undefined;
};

/** @internal */
export const GetBalancesByAddressesGlobals$outboundSchema: z.ZodType<
  GetBalancesByAddressesGlobals$Outbound,
  z.ZodTypeDef,
  GetBalancesByAddressesGlobals
> = z.object({
  network: components.GlobalParamNetwork$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBalancesByAddressesGlobals$ {
  /** @deprecated use `GetBalancesByAddressesGlobals$inboundSchema` instead. */
  export const inboundSchema = GetBalancesByAddressesGlobals$inboundSchema;
  /** @deprecated use `GetBalancesByAddressesGlobals$outboundSchema` instead. */
  export const outboundSchema = GetBalancesByAddressesGlobals$outboundSchema;
  /** @deprecated use `GetBalancesByAddressesGlobals$Outbound` instead. */
  export type Outbound = GetBalancesByAddressesGlobals$Outbound;
}

/** @internal */
export const GetBalancesByAddressesRequest$inboundSchema: z.ZodType<
  GetBalancesByAddressesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  blockTimestamp: z.number().int().optional(),
  addresses: z.string().optional(),
  blockchainId: components.BlockchainId$inboundSchema,
  network: components.GlobalParamNetwork$inboundSchema.optional(),
});

/** @internal */
export type GetBalancesByAddressesRequest$Outbound = {
  blockTimestamp?: number | undefined;
  addresses?: string | undefined;
  blockchainId: string;
  network?: string | undefined;
};

/** @internal */
export const GetBalancesByAddressesRequest$outboundSchema: z.ZodType<
  GetBalancesByAddressesRequest$Outbound,
  z.ZodTypeDef,
  GetBalancesByAddressesRequest
> = z.object({
  blockTimestamp: z.number().int().optional(),
  addresses: z.string().optional(),
  blockchainId: components.BlockchainId$outboundSchema,
  network: components.GlobalParamNetwork$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBalancesByAddressesRequest$ {
  /** @deprecated use `GetBalancesByAddressesRequest$inboundSchema` instead. */
  export const inboundSchema = GetBalancesByAddressesRequest$inboundSchema;
  /** @deprecated use `GetBalancesByAddressesRequest$outboundSchema` instead. */
  export const outboundSchema = GetBalancesByAddressesRequest$outboundSchema;
  /** @deprecated use `GetBalancesByAddressesRequest$Outbound` instead. */
  export type Outbound = GetBalancesByAddressesRequest$Outbound;
}

/** @internal */
export const GetBalancesByAddressesResponseBody$inboundSchema: z.ZodType<
  GetBalancesByAddressesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ListPChainBalancesResponse$inboundSchema,
  components.ListXChainBalancesResponse$inboundSchema,
  components.ListCChainAtomicBalancesResponse$inboundSchema,
]);

/** @internal */
export type GetBalancesByAddressesResponseBody$Outbound =
  | components.ListPChainBalancesResponse$Outbound
  | components.ListXChainBalancesResponse$Outbound
  | components.ListCChainAtomicBalancesResponse$Outbound;

/** @internal */
export const GetBalancesByAddressesResponseBody$outboundSchema: z.ZodType<
  GetBalancesByAddressesResponseBody$Outbound,
  z.ZodTypeDef,
  GetBalancesByAddressesResponseBody
> = z.union([
  components.ListPChainBalancesResponse$outboundSchema,
  components.ListXChainBalancesResponse$outboundSchema,
  components.ListCChainAtomicBalancesResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBalancesByAddressesResponseBody$ {
  /** @deprecated use `GetBalancesByAddressesResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetBalancesByAddressesResponseBody$inboundSchema;
  /** @deprecated use `GetBalancesByAddressesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetBalancesByAddressesResponseBody$outboundSchema;
  /** @deprecated use `GetBalancesByAddressesResponseBody$Outbound` instead. */
  export type Outbound = GetBalancesByAddressesResponseBody$Outbound;
}
