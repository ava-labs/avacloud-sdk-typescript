/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ListAllLatestTransactionsServerList = [
  "https://glacier-api.avax.network",
] as const;

export type ListAllLatestTransactionsRequest = {
  /**
   * A page token, received from a previous list call. Provide this to retrieve the subsequent page.
   */
  pageToken?: string | undefined;
  /**
   * The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.
   */
  pageSize?: number | undefined;
  /**
   * Either mainnet or testnet/fuji.
   */
  network?: components.Network | undefined;
  /**
   * A status filter for listed transactions.
   */
  status?: components.TransactionStatus | undefined;
};

export type ListAllLatestTransactionsResponse = {
  result: components.ListNativeTransactionsResponse;
};

/** @internal */
export const ListAllLatestTransactionsRequest$inboundSchema: z.ZodType<
  ListAllLatestTransactionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  pageToken: z.string().optional(),
  pageSize: z.number().int().default(10),
  network: components.Network$inboundSchema.optional(),
  status: components.TransactionStatus$inboundSchema.optional(),
});

/** @internal */
export type ListAllLatestTransactionsRequest$Outbound = {
  pageToken?: string | undefined;
  pageSize: number;
  network?: string | undefined;
  status?: string | undefined;
};

/** @internal */
export const ListAllLatestTransactionsRequest$outboundSchema: z.ZodType<
  ListAllLatestTransactionsRequest$Outbound,
  z.ZodTypeDef,
  ListAllLatestTransactionsRequest
> = z.object({
  pageToken: z.string().optional(),
  pageSize: z.number().int().default(10),
  network: components.Network$outboundSchema.optional(),
  status: components.TransactionStatus$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllLatestTransactionsRequest$ {
  /** @deprecated use `ListAllLatestTransactionsRequest$inboundSchema` instead. */
  export const inboundSchema = ListAllLatestTransactionsRequest$inboundSchema;
  /** @deprecated use `ListAllLatestTransactionsRequest$outboundSchema` instead. */
  export const outboundSchema = ListAllLatestTransactionsRequest$outboundSchema;
  /** @deprecated use `ListAllLatestTransactionsRequest$Outbound` instead. */
  export type Outbound = ListAllLatestTransactionsRequest$Outbound;
}

export function listAllLatestTransactionsRequestToJSON(
  listAllLatestTransactionsRequest: ListAllLatestTransactionsRequest,
): string {
  return JSON.stringify(
    ListAllLatestTransactionsRequest$outboundSchema.parse(
      listAllLatestTransactionsRequest,
    ),
  );
}

export function listAllLatestTransactionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListAllLatestTransactionsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListAllLatestTransactionsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListAllLatestTransactionsRequest' from JSON`,
  );
}

/** @internal */
export const ListAllLatestTransactionsResponse$inboundSchema: z.ZodType<
  ListAllLatestTransactionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: components.ListNativeTransactionsResponse$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type ListAllLatestTransactionsResponse$Outbound = {
  Result: components.ListNativeTransactionsResponse$Outbound;
};

/** @internal */
export const ListAllLatestTransactionsResponse$outboundSchema: z.ZodType<
  ListAllLatestTransactionsResponse$Outbound,
  z.ZodTypeDef,
  ListAllLatestTransactionsResponse
> = z.object({
  result: components.ListNativeTransactionsResponse$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllLatestTransactionsResponse$ {
  /** @deprecated use `ListAllLatestTransactionsResponse$inboundSchema` instead. */
  export const inboundSchema = ListAllLatestTransactionsResponse$inboundSchema;
  /** @deprecated use `ListAllLatestTransactionsResponse$outboundSchema` instead. */
  export const outboundSchema =
    ListAllLatestTransactionsResponse$outboundSchema;
  /** @deprecated use `ListAllLatestTransactionsResponse$Outbound` instead. */
  export type Outbound = ListAllLatestTransactionsResponse$Outbound;
}

export function listAllLatestTransactionsResponseToJSON(
  listAllLatestTransactionsResponse: ListAllLatestTransactionsResponse,
): string {
  return JSON.stringify(
    ListAllLatestTransactionsResponse$outboundSchema.parse(
      listAllLatestTransactionsResponse,
    ),
  );
}

export function listAllLatestTransactionsResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListAllLatestTransactionsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListAllLatestTransactionsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListAllLatestTransactionsResponse' from JSON`,
  );
}
