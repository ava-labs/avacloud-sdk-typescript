/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export const AddAddressesToWebhookServerList = ["http://localhost:3000"] as const;

export type AddAddressesToWebhookRequest = {
    /**
     * The webhook identifier.
     */
    id: string;
    addressesChangeRequest: components.AddressesChangeRequest;
};

/** @internal */
export const AddAddressesToWebhookRequest$inboundSchema: z.ZodType<
    AddAddressesToWebhookRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        AddressesChangeRequest: components.AddressesChangeRequest$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            AddressesChangeRequest: "addressesChangeRequest",
        });
    });

/** @internal */
export type AddAddressesToWebhookRequest$Outbound = {
    id: string;
    AddressesChangeRequest: components.AddressesChangeRequest$Outbound;
};

/** @internal */
export const AddAddressesToWebhookRequest$outboundSchema: z.ZodType<
    AddAddressesToWebhookRequest$Outbound,
    z.ZodTypeDef,
    AddAddressesToWebhookRequest
> = z
    .object({
        id: z.string(),
        addressesChangeRequest: components.AddressesChangeRequest$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            addressesChangeRequest: "AddressesChangeRequest",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAddressesToWebhookRequest$ {
    /** @deprecated use `AddAddressesToWebhookRequest$inboundSchema` instead. */
    export const inboundSchema = AddAddressesToWebhookRequest$inboundSchema;
    /** @deprecated use `AddAddressesToWebhookRequest$outboundSchema` instead. */
    export const outboundSchema = AddAddressesToWebhookRequest$outboundSchema;
    /** @deprecated use `AddAddressesToWebhookRequest$Outbound` instead. */
    export type Outbound = AddAddressesToWebhookRequest$Outbound;
}
