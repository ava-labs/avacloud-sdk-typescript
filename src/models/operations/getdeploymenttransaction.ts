/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type GetDeploymentTransactionRequest = {
    /**
     * A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.
     */
    chainId: string;
    /**
     * Contract address on the relevant chain.
     */
    address: string;
    /**
     * The currency that return values should use. Defaults to USD.
     */
    currency?: components.CurrencyCode | undefined;
};

/** @internal */
export const GetDeploymentTransactionRequest$inboundSchema: z.ZodType<
    GetDeploymentTransactionRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    chainId: z.string(),
    address: z.string(),
    currency: components.CurrencyCode$inboundSchema.optional(),
});

/** @internal */
export type GetDeploymentTransactionRequest$Outbound = {
    chainId: string;
    address: string;
    currency?: string | undefined;
};

/** @internal */
export const GetDeploymentTransactionRequest$outboundSchema: z.ZodType<
    GetDeploymentTransactionRequest$Outbound,
    z.ZodTypeDef,
    GetDeploymentTransactionRequest
> = z.object({
    chainId: z.string(),
    address: z.string(),
    currency: components.CurrencyCode$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDeploymentTransactionRequest$ {
    /** @deprecated use `GetDeploymentTransactionRequest$inboundSchema` instead. */
    export const inboundSchema = GetDeploymentTransactionRequest$inboundSchema;
    /** @deprecated use `GetDeploymentTransactionRequest$outboundSchema` instead. */
    export const outboundSchema = GetDeploymentTransactionRequest$outboundSchema;
    /** @deprecated use `GetDeploymentTransactionRequest$Outbound` instead. */
    export type Outbound = GetDeploymentTransactionRequest$Outbound;
}
