/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export const GetChainInformationByNetworkServerList = ["http://localhost:3001"] as const;

export type GetChainInformationByNetworkRequest = {
    /**
     * Network type
     */
    network: components.LegacyNetworks;
    /**
     * From date in UNIX Timestamp.
     */
    from?: string | undefined;
    /**
     * To date in UNIX Timestamp.
     */
    to?: string | undefined;
    /**
     * For paginated responses. Value will be provided in the [nextPageStartKey] field in the response if the query has more than one page.
     */
    startKey?: string | undefined;
};

export type GetChainInformationByNetworkResponse = {
    result: components.ChainInformationResponse;
};

/** @internal */
export const GetChainInformationByNetworkRequest$inboundSchema: z.ZodType<
    GetChainInformationByNetworkRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    network: components.LegacyNetworks$inboundSchema,
    from: z.string().optional(),
    to: z.string().optional(),
    startKey: z.string().optional(),
});

/** @internal */
export type GetChainInformationByNetworkRequest$Outbound = {
    network: string;
    from?: string | undefined;
    to?: string | undefined;
    startKey?: string | undefined;
};

/** @internal */
export const GetChainInformationByNetworkRequest$outboundSchema: z.ZodType<
    GetChainInformationByNetworkRequest$Outbound,
    z.ZodTypeDef,
    GetChainInformationByNetworkRequest
> = z.object({
    network: components.LegacyNetworks$outboundSchema,
    from: z.string().optional(),
    to: z.string().optional(),
    startKey: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChainInformationByNetworkRequest$ {
    /** @deprecated use `GetChainInformationByNetworkRequest$inboundSchema` instead. */
    export const inboundSchema = GetChainInformationByNetworkRequest$inboundSchema;
    /** @deprecated use `GetChainInformationByNetworkRequest$outboundSchema` instead. */
    export const outboundSchema = GetChainInformationByNetworkRequest$outboundSchema;
    /** @deprecated use `GetChainInformationByNetworkRequest$Outbound` instead. */
    export type Outbound = GetChainInformationByNetworkRequest$Outbound;
}

/** @internal */
export const GetChainInformationByNetworkResponse$inboundSchema: z.ZodType<
    GetChainInformationByNetworkResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: components.ChainInformationResponse$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type GetChainInformationByNetworkResponse$Outbound = {
    Result: components.ChainInformationResponse$Outbound;
};

/** @internal */
export const GetChainInformationByNetworkResponse$outboundSchema: z.ZodType<
    GetChainInformationByNetworkResponse$Outbound,
    z.ZodTypeDef,
    GetChainInformationByNetworkResponse
> = z
    .object({
        result: components.ChainInformationResponse$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChainInformationByNetworkResponse$ {
    /** @deprecated use `GetChainInformationByNetworkResponse$inboundSchema` instead. */
    export const inboundSchema = GetChainInformationByNetworkResponse$inboundSchema;
    /** @deprecated use `GetChainInformationByNetworkResponse$outboundSchema` instead. */
    export const outboundSchema = GetChainInformationByNetworkResponse$outboundSchema;
    /** @deprecated use `GetChainInformationByNetworkResponse$Outbound` instead. */
    export type Outbound = GetChainInformationByNetworkResponse$Outbound;
}
