/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export const ListTeleporterMessagesByAddressServerList = [
  "https://glacier-api.avax.network",
] as const;

export type ListTeleporterMessagesByAddressRequest = {
  /**
   * A page token, received from a previous list call. Provide this to retrieve the subsequent page.
   */
  pageToken?: string | undefined;
  /**
   * The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.
   */
  pageSize?: number | undefined;
  /**
   * An EVM address.
   */
  address: string;
  /**
   * mainnet or testnet.
   */
  network?: components.NetworkType | undefined;
};

/** @internal */
export const ListTeleporterMessagesByAddressRequest$inboundSchema: z.ZodType<
  ListTeleporterMessagesByAddressRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  pageToken: z.string().optional(),
  pageSize: z.number().int().default(10),
  address: z.string(),
  network: components.NetworkType$inboundSchema.optional(),
});

/** @internal */
export type ListTeleporterMessagesByAddressRequest$Outbound = {
  pageToken?: string | undefined;
  pageSize: number;
  address: string;
  network?: string | undefined;
};

/** @internal */
export const ListTeleporterMessagesByAddressRequest$outboundSchema: z.ZodType<
  ListTeleporterMessagesByAddressRequest$Outbound,
  z.ZodTypeDef,
  ListTeleporterMessagesByAddressRequest
> = z.object({
  pageToken: z.string().optional(),
  pageSize: z.number().int().default(10),
  address: z.string(),
  network: components.NetworkType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListTeleporterMessagesByAddressRequest$ {
  /** @deprecated use `ListTeleporterMessagesByAddressRequest$inboundSchema` instead. */
  export const inboundSchema =
    ListTeleporterMessagesByAddressRequest$inboundSchema;
  /** @deprecated use `ListTeleporterMessagesByAddressRequest$outboundSchema` instead. */
  export const outboundSchema =
    ListTeleporterMessagesByAddressRequest$outboundSchema;
  /** @deprecated use `ListTeleporterMessagesByAddressRequest$Outbound` instead. */
  export type Outbound = ListTeleporterMessagesByAddressRequest$Outbound;
}
