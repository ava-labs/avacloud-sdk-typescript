/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export const ListContractDeploymentsServerList = [
  "https://glacier-api.avax.network",
] as const;

export type ListContractDeploymentsGlobals = {
  /**
   * A supported EVM chain id, chain alias, or blockchain id.
   */
  chainId?: string | undefined;
};

export type ListContractDeploymentsRequest = {
  /**
   * A page token, received from a previous list call. Provide this to retrieve the subsequent page.
   */
  pageToken?: string | undefined;
  /**
   * The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.
   */
  pageSize?: number | undefined;
  /**
   * A supported evm chain id or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.
   */
  chainId?: string | undefined;
  /**
   * A wallet address.
   */
  address: string;
};

export type ListContractDeploymentsResponse = {
  result: components.ListContractsResponse;
};

/** @internal */
export const ListContractDeploymentsGlobals$inboundSchema: z.ZodType<
  ListContractDeploymentsGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  chainId: z.string().optional(),
});

/** @internal */
export type ListContractDeploymentsGlobals$Outbound = {
  chainId?: string | undefined;
};

/** @internal */
export const ListContractDeploymentsGlobals$outboundSchema: z.ZodType<
  ListContractDeploymentsGlobals$Outbound,
  z.ZodTypeDef,
  ListContractDeploymentsGlobals
> = z.object({
  chainId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListContractDeploymentsGlobals$ {
  /** @deprecated use `ListContractDeploymentsGlobals$inboundSchema` instead. */
  export const inboundSchema = ListContractDeploymentsGlobals$inboundSchema;
  /** @deprecated use `ListContractDeploymentsGlobals$outboundSchema` instead. */
  export const outboundSchema = ListContractDeploymentsGlobals$outboundSchema;
  /** @deprecated use `ListContractDeploymentsGlobals$Outbound` instead. */
  export type Outbound = ListContractDeploymentsGlobals$Outbound;
}

/** @internal */
export const ListContractDeploymentsRequest$inboundSchema: z.ZodType<
  ListContractDeploymentsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  pageToken: z.string().optional(),
  pageSize: z.number().int().default(10),
  chainId: z.string().optional(),
  address: z.string(),
});

/** @internal */
export type ListContractDeploymentsRequest$Outbound = {
  pageToken?: string | undefined;
  pageSize: number;
  chainId?: string | undefined;
  address: string;
};

/** @internal */
export const ListContractDeploymentsRequest$outboundSchema: z.ZodType<
  ListContractDeploymentsRequest$Outbound,
  z.ZodTypeDef,
  ListContractDeploymentsRequest
> = z.object({
  pageToken: z.string().optional(),
  pageSize: z.number().int().default(10),
  chainId: z.string().optional(),
  address: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListContractDeploymentsRequest$ {
  /** @deprecated use `ListContractDeploymentsRequest$inboundSchema` instead. */
  export const inboundSchema = ListContractDeploymentsRequest$inboundSchema;
  /** @deprecated use `ListContractDeploymentsRequest$outboundSchema` instead. */
  export const outboundSchema = ListContractDeploymentsRequest$outboundSchema;
  /** @deprecated use `ListContractDeploymentsRequest$Outbound` instead. */
  export type Outbound = ListContractDeploymentsRequest$Outbound;
}

/** @internal */
export const ListContractDeploymentsResponse$inboundSchema: z.ZodType<
  ListContractDeploymentsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: components.ListContractsResponse$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type ListContractDeploymentsResponse$Outbound = {
  Result: components.ListContractsResponse$Outbound;
};

/** @internal */
export const ListContractDeploymentsResponse$outboundSchema: z.ZodType<
  ListContractDeploymentsResponse$Outbound,
  z.ZodTypeDef,
  ListContractDeploymentsResponse
> = z.object({
  result: components.ListContractsResponse$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListContractDeploymentsResponse$ {
  /** @deprecated use `ListContractDeploymentsResponse$inboundSchema` instead. */
  export const inboundSchema = ListContractDeploymentsResponse$inboundSchema;
  /** @deprecated use `ListContractDeploymentsResponse$outboundSchema` instead. */
  export const outboundSchema = ListContractDeploymentsResponse$outboundSchema;
  /** @deprecated use `ListContractDeploymentsResponse$Outbound` instead. */
  export type Outbound = ListContractDeploymentsResponse$Outbound;
}
