/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export const GetAddressesByBtcbBridgedServerList = ["https://popsicle-api.avax.network"] as const;

export type GetAddressesByBtcbBridgedRequest = {
    /**
     * The minimum balance for which addresses should be considered.
     */
    threshold: string;
    /**
     * A page token, received from a previous list call. Provide this to retrieve the subsequent page.
     */
    pageToken?: string | undefined;
    /**
     * The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 5000.
     */
    pageSize?: number | undefined;
};

export type GetAddressesByBtcbBridgedResponse = {
    result: components.LookingGlassResponse;
};

/** @internal */
export const GetAddressesByBtcbBridgedRequest$inboundSchema: z.ZodType<
    GetAddressesByBtcbBridgedRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    threshold: z.string(),
    pageToken: z.string().optional(),
    pageSize: z.number().int().default(1000),
});

/** @internal */
export type GetAddressesByBtcbBridgedRequest$Outbound = {
    threshold: string;
    pageToken?: string | undefined;
    pageSize: number;
};

/** @internal */
export const GetAddressesByBtcbBridgedRequest$outboundSchema: z.ZodType<
    GetAddressesByBtcbBridgedRequest$Outbound,
    z.ZodTypeDef,
    GetAddressesByBtcbBridgedRequest
> = z.object({
    threshold: z.string(),
    pageToken: z.string().optional(),
    pageSize: z.number().int().default(1000),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAddressesByBtcbBridgedRequest$ {
    /** @deprecated use `GetAddressesByBtcbBridgedRequest$inboundSchema` instead. */
    export const inboundSchema = GetAddressesByBtcbBridgedRequest$inboundSchema;
    /** @deprecated use `GetAddressesByBtcbBridgedRequest$outboundSchema` instead. */
    export const outboundSchema = GetAddressesByBtcbBridgedRequest$outboundSchema;
    /** @deprecated use `GetAddressesByBtcbBridgedRequest$Outbound` instead. */
    export type Outbound = GetAddressesByBtcbBridgedRequest$Outbound;
}

/** @internal */
export const GetAddressesByBtcbBridgedResponse$inboundSchema: z.ZodType<
    GetAddressesByBtcbBridgedResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: components.LookingGlassResponse$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type GetAddressesByBtcbBridgedResponse$Outbound = {
    Result: components.LookingGlassResponse$Outbound;
};

/** @internal */
export const GetAddressesByBtcbBridgedResponse$outboundSchema: z.ZodType<
    GetAddressesByBtcbBridgedResponse$Outbound,
    z.ZodTypeDef,
    GetAddressesByBtcbBridgedResponse
> = z
    .object({
        result: components.LookingGlassResponse$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAddressesByBtcbBridgedResponse$ {
    /** @deprecated use `GetAddressesByBtcbBridgedResponse$inboundSchema` instead. */
    export const inboundSchema = GetAddressesByBtcbBridgedResponse$inboundSchema;
    /** @deprecated use `GetAddressesByBtcbBridgedResponse$outboundSchema` instead. */
    export const outboundSchema = GetAddressesByBtcbBridgedResponse$outboundSchema;
    /** @deprecated use `GetAddressesByBtcbBridgedResponse$Outbound` instead. */
    export type Outbound = GetAddressesByBtcbBridgedResponse$Outbound;
}
