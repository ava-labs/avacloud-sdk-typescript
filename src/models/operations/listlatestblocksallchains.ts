/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ListLatestBlocksAllChainsServerList = [
  "https://glacier-api.avax.network",
] as const;

export type ListLatestBlocksAllChainsRequest = {
  /**
   * A page token, received from a previous list call. Provide this to retrieve the subsequent page.
   */
  pageToken?: string | undefined;
  /**
   * The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.
   */
  pageSize?: number | undefined;
  /**
   * Either mainnet or testnet/fuji.
   */
  network?: components.Network | undefined;
};

export type ListLatestBlocksAllChainsResponse = {
  result: components.ListEvmBlocksResponse;
};

/** @internal */
export const ListLatestBlocksAllChainsRequest$inboundSchema: z.ZodType<
  ListLatestBlocksAllChainsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  pageToken: z.string().optional(),
  pageSize: z.number().int().default(10),
  network: components.Network$inboundSchema.optional(),
});

/** @internal */
export type ListLatestBlocksAllChainsRequest$Outbound = {
  pageToken?: string | undefined;
  pageSize: number;
  network?: string | undefined;
};

/** @internal */
export const ListLatestBlocksAllChainsRequest$outboundSchema: z.ZodType<
  ListLatestBlocksAllChainsRequest$Outbound,
  z.ZodTypeDef,
  ListLatestBlocksAllChainsRequest
> = z.object({
  pageToken: z.string().optional(),
  pageSize: z.number().int().default(10),
  network: components.Network$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListLatestBlocksAllChainsRequest$ {
  /** @deprecated use `ListLatestBlocksAllChainsRequest$inboundSchema` instead. */
  export const inboundSchema = ListLatestBlocksAllChainsRequest$inboundSchema;
  /** @deprecated use `ListLatestBlocksAllChainsRequest$outboundSchema` instead. */
  export const outboundSchema = ListLatestBlocksAllChainsRequest$outboundSchema;
  /** @deprecated use `ListLatestBlocksAllChainsRequest$Outbound` instead. */
  export type Outbound = ListLatestBlocksAllChainsRequest$Outbound;
}

export function listLatestBlocksAllChainsRequestToJSON(
  listLatestBlocksAllChainsRequest: ListLatestBlocksAllChainsRequest,
): string {
  return JSON.stringify(
    ListLatestBlocksAllChainsRequest$outboundSchema.parse(
      listLatestBlocksAllChainsRequest,
    ),
  );
}

export function listLatestBlocksAllChainsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListLatestBlocksAllChainsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListLatestBlocksAllChainsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListLatestBlocksAllChainsRequest' from JSON`,
  );
}

/** @internal */
export const ListLatestBlocksAllChainsResponse$inboundSchema: z.ZodType<
  ListLatestBlocksAllChainsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: components.ListEvmBlocksResponse$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type ListLatestBlocksAllChainsResponse$Outbound = {
  Result: components.ListEvmBlocksResponse$Outbound;
};

/** @internal */
export const ListLatestBlocksAllChainsResponse$outboundSchema: z.ZodType<
  ListLatestBlocksAllChainsResponse$Outbound,
  z.ZodTypeDef,
  ListLatestBlocksAllChainsResponse
> = z.object({
  result: components.ListEvmBlocksResponse$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListLatestBlocksAllChainsResponse$ {
  /** @deprecated use `ListLatestBlocksAllChainsResponse$inboundSchema` instead. */
  export const inboundSchema = ListLatestBlocksAllChainsResponse$inboundSchema;
  /** @deprecated use `ListLatestBlocksAllChainsResponse$outboundSchema` instead. */
  export const outboundSchema =
    ListLatestBlocksAllChainsResponse$outboundSchema;
  /** @deprecated use `ListLatestBlocksAllChainsResponse$Outbound` instead. */
  export type Outbound = ListLatestBlocksAllChainsResponse$Outbound;
}

export function listLatestBlocksAllChainsResponseToJSON(
  listLatestBlocksAllChainsResponse: ListLatestBlocksAllChainsResponse,
): string {
  return JSON.stringify(
    ListLatestBlocksAllChainsResponse$outboundSchema.parse(
      listLatestBlocksAllChainsResponse,
    ),
  );
}

export function listLatestBlocksAllChainsResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListLatestBlocksAllChainsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListLatestBlocksAllChainsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListLatestBlocksAllChainsResponse' from JSON`,
  );
}
