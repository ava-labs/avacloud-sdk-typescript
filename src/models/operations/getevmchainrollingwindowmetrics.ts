/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export const GetEvmChainRollingWindowMetricsServerList = [
    "https://popsicle-api.avax.network",
] as const;

export type GetEvmChainRollingWindowMetricsGlobals = {
    /**
     * A supported EVM chain id, chain alias, or blockchain id.
     */
    chainId?: string | undefined;
};

export type GetEvmChainRollingWindowMetricsRequest = {
    /**
     * Which chain level metric to fetch for the rolling window.
     */
    metric: components.ChainRollingWindowMetric;
    /**
     * A supported EVM chain ID or one of "total", "mainnet", or "testnet". Use the `/chains` endpoint to get a list of supported chain IDs.
     */
    chainId?: string | undefined;
};

/** @internal */
export const GetEvmChainRollingWindowMetricsGlobals$inboundSchema: z.ZodType<
    GetEvmChainRollingWindowMetricsGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    chainId: z.string().optional(),
});

/** @internal */
export type GetEvmChainRollingWindowMetricsGlobals$Outbound = {
    chainId?: string | undefined;
};

/** @internal */
export const GetEvmChainRollingWindowMetricsGlobals$outboundSchema: z.ZodType<
    GetEvmChainRollingWindowMetricsGlobals$Outbound,
    z.ZodTypeDef,
    GetEvmChainRollingWindowMetricsGlobals
> = z.object({
    chainId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvmChainRollingWindowMetricsGlobals$ {
    /** @deprecated use `GetEvmChainRollingWindowMetricsGlobals$inboundSchema` instead. */
    export const inboundSchema = GetEvmChainRollingWindowMetricsGlobals$inboundSchema;
    /** @deprecated use `GetEvmChainRollingWindowMetricsGlobals$outboundSchema` instead. */
    export const outboundSchema = GetEvmChainRollingWindowMetricsGlobals$outboundSchema;
    /** @deprecated use `GetEvmChainRollingWindowMetricsGlobals$Outbound` instead. */
    export type Outbound = GetEvmChainRollingWindowMetricsGlobals$Outbound;
}

/** @internal */
export const GetEvmChainRollingWindowMetricsRequest$inboundSchema: z.ZodType<
    GetEvmChainRollingWindowMetricsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    metric: components.ChainRollingWindowMetric$inboundSchema,
    chainId: z.string().optional(),
});

/** @internal */
export type GetEvmChainRollingWindowMetricsRequest$Outbound = {
    metric: string;
    chainId?: string | undefined;
};

/** @internal */
export const GetEvmChainRollingWindowMetricsRequest$outboundSchema: z.ZodType<
    GetEvmChainRollingWindowMetricsRequest$Outbound,
    z.ZodTypeDef,
    GetEvmChainRollingWindowMetricsRequest
> = z.object({
    metric: components.ChainRollingWindowMetric$outboundSchema,
    chainId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvmChainRollingWindowMetricsRequest$ {
    /** @deprecated use `GetEvmChainRollingWindowMetricsRequest$inboundSchema` instead. */
    export const inboundSchema = GetEvmChainRollingWindowMetricsRequest$inboundSchema;
    /** @deprecated use `GetEvmChainRollingWindowMetricsRequest$outboundSchema` instead. */
    export const outboundSchema = GetEvmChainRollingWindowMetricsRequest$outboundSchema;
    /** @deprecated use `GetEvmChainRollingWindowMetricsRequest$Outbound` instead. */
    export type Outbound = GetEvmChainRollingWindowMetricsRequest$Outbound;
}
