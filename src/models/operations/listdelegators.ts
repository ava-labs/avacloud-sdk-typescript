/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type ListDelegatorsRequest = {
    /**
     * A page token, received from a previous list call. Provide this to retrieve the subsequent page.
     */
    pageToken?: string | undefined;
    /**
     * The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.
     */
    pageSize?: number | undefined;
    /**
     * A comma separated list of reward addresses to filter by.
     */
    rewardAddresses?: string | undefined;
    /**
     * Either mainnet or a testnet.
     */
    network: components.Network;
    /**
     * The order by which to sort results. Use "asc" for ascending order, "desc" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.
     */
    sortOrder?: components.SortOrder | undefined;
    /**
     * Delegation status of the node.
     */
    delegationStatus?: components.DelegationStatusType | undefined;
    /**
     * A comma separated list of node ids to filter by.
     */
    nodeIds?: string | undefined;
};

/** @internal */
export const ListDelegatorsRequest$inboundSchema: z.ZodType<
    ListDelegatorsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    pageToken: z.string().optional(),
    pageSize: z.number().int().default(10),
    rewardAddresses: z.string().optional(),
    network: components.Network$inboundSchema,
    sortOrder: components.SortOrder$inboundSchema.optional(),
    delegationStatus: components.DelegationStatusType$inboundSchema.optional(),
    nodeIds: z.string().optional(),
});

/** @internal */
export type ListDelegatorsRequest$Outbound = {
    pageToken?: string | undefined;
    pageSize: number;
    rewardAddresses?: string | undefined;
    network: string;
    sortOrder?: string | undefined;
    delegationStatus?: string | undefined;
    nodeIds?: string | undefined;
};

/** @internal */
export const ListDelegatorsRequest$outboundSchema: z.ZodType<
    ListDelegatorsRequest$Outbound,
    z.ZodTypeDef,
    ListDelegatorsRequest
> = z.object({
    pageToken: z.string().optional(),
    pageSize: z.number().int().default(10),
    rewardAddresses: z.string().optional(),
    network: components.Network$outboundSchema,
    sortOrder: components.SortOrder$outboundSchema.optional(),
    delegationStatus: components.DelegationStatusType$outboundSchema.optional(),
    nodeIds: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListDelegatorsRequest$ {
    /** @deprecated use `ListDelegatorsRequest$inboundSchema` instead. */
    export const inboundSchema = ListDelegatorsRequest$inboundSchema;
    /** @deprecated use `ListDelegatorsRequest$outboundSchema` instead. */
    export const outboundSchema = ListDelegatorsRequest$outboundSchema;
    /** @deprecated use `ListDelegatorsRequest$Outbound` instead. */
    export type Outbound = ListDelegatorsRequest$Outbound;
}
