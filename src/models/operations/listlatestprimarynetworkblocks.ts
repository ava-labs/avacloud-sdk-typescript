/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ListLatestPrimaryNetworkBlocksServerList = [
  "https://glacier-api.avax.network",
] as const;

export type ListLatestPrimaryNetworkBlocksGlobals = {
  /**
   * A supported network type mainnet or testnet/fuji.
   */
  network?: components.GlobalParamNetwork | undefined;
};

export type ListLatestPrimaryNetworkBlocksRequest = {
  /**
   * A page token, received from a previous list call. Provide this to retrieve the subsequent page.
   */
  pageToken?: string | undefined;
  /**
   * The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.
   */
  pageSize?: number | undefined;
  /**
   * A primary network blockchain id or alias.
   */
  blockchainId: components.BlockchainId;
  /**
   * Either mainnet or testnet/fuji.
   */
  network?: components.GlobalParamNetwork | undefined;
};

export type ListLatestPrimaryNetworkBlocksResponse = {
  result: components.ListPrimaryNetworkBlocksResponse;
};

/** @internal */
export const ListLatestPrimaryNetworkBlocksGlobals$inboundSchema: z.ZodType<
  ListLatestPrimaryNetworkBlocksGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  network: components.GlobalParamNetwork$inboundSchema.optional(),
});

/** @internal */
export type ListLatestPrimaryNetworkBlocksGlobals$Outbound = {
  network?: string | undefined;
};

/** @internal */
export const ListLatestPrimaryNetworkBlocksGlobals$outboundSchema: z.ZodType<
  ListLatestPrimaryNetworkBlocksGlobals$Outbound,
  z.ZodTypeDef,
  ListLatestPrimaryNetworkBlocksGlobals
> = z.object({
  network: components.GlobalParamNetwork$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListLatestPrimaryNetworkBlocksGlobals$ {
  /** @deprecated use `ListLatestPrimaryNetworkBlocksGlobals$inboundSchema` instead. */
  export const inboundSchema =
    ListLatestPrimaryNetworkBlocksGlobals$inboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkBlocksGlobals$outboundSchema` instead. */
  export const outboundSchema =
    ListLatestPrimaryNetworkBlocksGlobals$outboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkBlocksGlobals$Outbound` instead. */
  export type Outbound = ListLatestPrimaryNetworkBlocksGlobals$Outbound;
}

export function listLatestPrimaryNetworkBlocksGlobalsToJSON(
  listLatestPrimaryNetworkBlocksGlobals: ListLatestPrimaryNetworkBlocksGlobals,
): string {
  return JSON.stringify(
    ListLatestPrimaryNetworkBlocksGlobals$outboundSchema.parse(
      listLatestPrimaryNetworkBlocksGlobals,
    ),
  );
}

export function listLatestPrimaryNetworkBlocksGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<ListLatestPrimaryNetworkBlocksGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListLatestPrimaryNetworkBlocksGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListLatestPrimaryNetworkBlocksGlobals' from JSON`,
  );
}

/** @internal */
export const ListLatestPrimaryNetworkBlocksRequest$inboundSchema: z.ZodType<
  ListLatestPrimaryNetworkBlocksRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  pageToken: z.string().optional(),
  pageSize: z.number().int().default(10),
  blockchainId: components.BlockchainId$inboundSchema,
  network: components.GlobalParamNetwork$inboundSchema.optional(),
});

/** @internal */
export type ListLatestPrimaryNetworkBlocksRequest$Outbound = {
  pageToken?: string | undefined;
  pageSize: number;
  blockchainId: string;
  network?: string | undefined;
};

/** @internal */
export const ListLatestPrimaryNetworkBlocksRequest$outboundSchema: z.ZodType<
  ListLatestPrimaryNetworkBlocksRequest$Outbound,
  z.ZodTypeDef,
  ListLatestPrimaryNetworkBlocksRequest
> = z.object({
  pageToken: z.string().optional(),
  pageSize: z.number().int().default(10),
  blockchainId: components.BlockchainId$outboundSchema,
  network: components.GlobalParamNetwork$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListLatestPrimaryNetworkBlocksRequest$ {
  /** @deprecated use `ListLatestPrimaryNetworkBlocksRequest$inboundSchema` instead. */
  export const inboundSchema =
    ListLatestPrimaryNetworkBlocksRequest$inboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkBlocksRequest$outboundSchema` instead. */
  export const outboundSchema =
    ListLatestPrimaryNetworkBlocksRequest$outboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkBlocksRequest$Outbound` instead. */
  export type Outbound = ListLatestPrimaryNetworkBlocksRequest$Outbound;
}

export function listLatestPrimaryNetworkBlocksRequestToJSON(
  listLatestPrimaryNetworkBlocksRequest: ListLatestPrimaryNetworkBlocksRequest,
): string {
  return JSON.stringify(
    ListLatestPrimaryNetworkBlocksRequest$outboundSchema.parse(
      listLatestPrimaryNetworkBlocksRequest,
    ),
  );
}

export function listLatestPrimaryNetworkBlocksRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListLatestPrimaryNetworkBlocksRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListLatestPrimaryNetworkBlocksRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListLatestPrimaryNetworkBlocksRequest' from JSON`,
  );
}

/** @internal */
export const ListLatestPrimaryNetworkBlocksResponse$inboundSchema: z.ZodType<
  ListLatestPrimaryNetworkBlocksResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: components.ListPrimaryNetworkBlocksResponse$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type ListLatestPrimaryNetworkBlocksResponse$Outbound = {
  Result: components.ListPrimaryNetworkBlocksResponse$Outbound;
};

/** @internal */
export const ListLatestPrimaryNetworkBlocksResponse$outboundSchema: z.ZodType<
  ListLatestPrimaryNetworkBlocksResponse$Outbound,
  z.ZodTypeDef,
  ListLatestPrimaryNetworkBlocksResponse
> = z.object({
  result: components.ListPrimaryNetworkBlocksResponse$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListLatestPrimaryNetworkBlocksResponse$ {
  /** @deprecated use `ListLatestPrimaryNetworkBlocksResponse$inboundSchema` instead. */
  export const inboundSchema =
    ListLatestPrimaryNetworkBlocksResponse$inboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkBlocksResponse$outboundSchema` instead. */
  export const outboundSchema =
    ListLatestPrimaryNetworkBlocksResponse$outboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkBlocksResponse$Outbound` instead. */
  export type Outbound = ListLatestPrimaryNetworkBlocksResponse$Outbound;
}

export function listLatestPrimaryNetworkBlocksResponseToJSON(
  listLatestPrimaryNetworkBlocksResponse:
    ListLatestPrimaryNetworkBlocksResponse,
): string {
  return JSON.stringify(
    ListLatestPrimaryNetworkBlocksResponse$outboundSchema.parse(
      listLatestPrimaryNetworkBlocksResponse,
    ),
  );
}

export function listLatestPrimaryNetworkBlocksResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListLatestPrimaryNetworkBlocksResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListLatestPrimaryNetworkBlocksResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListLatestPrimaryNetworkBlocksResponse' from JSON`,
  );
}
