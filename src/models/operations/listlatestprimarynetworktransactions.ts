/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ListLatestPrimaryNetworkTransactionsServerList = [
  "https://glacier-api.avax.network",
] as const;

export type ListLatestPrimaryNetworkTransactionsGlobals = {
  /**
   * A supported network type mainnet or testnet/fuji.
   */
  network?: components.GlobalParamNetwork | undefined;
};

export type ListLatestPrimaryNetworkTransactionsRequest = {
  /**
   * A comma separated list of X-Chain or P-Chain wallet addresses, starting with "avax"/"fuji", "P-avax"/"P-fuji" or "X-avax"/"X-fuji". Also accepts EVM formatted addresses starting with "0x" for C-Chain-related atomic transaction lookups.
   */
  addresses?: string | undefined;
  l1ValidationId?: string | undefined;
  /**
   * Query param for filtering items based on transaction types.
   */
  txTypes?: Array<components.PrimaryNetworkTxType> | undefined;
  /**
   * Query param for retrieving items after a specific timestamp.
   */
  startTimestamp?: number | undefined;
  /**
   * Query param for retrieving items before a specific timestamp.
   */
  endTimestamp?: number | undefined;
  /**
   * A page token, received from a previous list call. Provide this to retrieve the subsequent page.
   */
  pageToken?: string | undefined;
  /**
   * The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.
   */
  pageSize?: number | undefined;
  /**
   * A primary network blockchain id or alias.
   */
  blockchainId: components.BlockchainId;
  /**
   * Either mainnet or testnet/fuji.
   */
  network?: components.GlobalParamNetwork | undefined;
  /**
   * The order by which to sort results. Use "asc" for ascending order, "desc" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.
   */
  sortOrder?: components.SortOrder | undefined;
};

/**
 * Successful response
 */
export type ListLatestPrimaryNetworkTransactionsResponseBody =
  | components.ListPChainTransactionsResponse
  | components.ListXChainTransactionsResponse
  | components.ListCChainAtomicTransactionsResponse;

export type ListLatestPrimaryNetworkTransactionsResponse = {
  result:
    | components.ListPChainTransactionsResponse
    | components.ListXChainTransactionsResponse
    | components.ListCChainAtomicTransactionsResponse;
};

/** @internal */
export const ListLatestPrimaryNetworkTransactionsGlobals$inboundSchema:
  z.ZodType<
    ListLatestPrimaryNetworkTransactionsGlobals,
    z.ZodTypeDef,
    unknown
  > = z.object({
    network: components.GlobalParamNetwork$inboundSchema.optional(),
  });

/** @internal */
export type ListLatestPrimaryNetworkTransactionsGlobals$Outbound = {
  network?: string | undefined;
};

/** @internal */
export const ListLatestPrimaryNetworkTransactionsGlobals$outboundSchema:
  z.ZodType<
    ListLatestPrimaryNetworkTransactionsGlobals$Outbound,
    z.ZodTypeDef,
    ListLatestPrimaryNetworkTransactionsGlobals
  > = z.object({
    network: components.GlobalParamNetwork$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListLatestPrimaryNetworkTransactionsGlobals$ {
  /** @deprecated use `ListLatestPrimaryNetworkTransactionsGlobals$inboundSchema` instead. */
  export const inboundSchema =
    ListLatestPrimaryNetworkTransactionsGlobals$inboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkTransactionsGlobals$outboundSchema` instead. */
  export const outboundSchema =
    ListLatestPrimaryNetworkTransactionsGlobals$outboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkTransactionsGlobals$Outbound` instead. */
  export type Outbound = ListLatestPrimaryNetworkTransactionsGlobals$Outbound;
}

export function listLatestPrimaryNetworkTransactionsGlobalsToJSON(
  listLatestPrimaryNetworkTransactionsGlobals:
    ListLatestPrimaryNetworkTransactionsGlobals,
): string {
  return JSON.stringify(
    ListLatestPrimaryNetworkTransactionsGlobals$outboundSchema.parse(
      listLatestPrimaryNetworkTransactionsGlobals,
    ),
  );
}

export function listLatestPrimaryNetworkTransactionsGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<
  ListLatestPrimaryNetworkTransactionsGlobals,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ListLatestPrimaryNetworkTransactionsGlobals$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ListLatestPrimaryNetworkTransactionsGlobals' from JSON`,
  );
}

/** @internal */
export const ListLatestPrimaryNetworkTransactionsRequest$inboundSchema:
  z.ZodType<
    ListLatestPrimaryNetworkTransactionsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    addresses: z.string().optional(),
    l1ValidationId: z.string().optional(),
    txTypes: z.array(components.PrimaryNetworkTxType$inboundSchema).optional(),
    startTimestamp: z.number().int().optional(),
    endTimestamp: z.number().int().optional(),
    pageToken: z.string().optional(),
    pageSize: z.number().int().default(10),
    blockchainId: components.BlockchainId$inboundSchema,
    network: components.GlobalParamNetwork$inboundSchema.optional(),
    sortOrder: components.SortOrder$inboundSchema.optional(),
  });

/** @internal */
export type ListLatestPrimaryNetworkTransactionsRequest$Outbound = {
  addresses?: string | undefined;
  l1ValidationId?: string | undefined;
  txTypes?: Array<string> | undefined;
  startTimestamp?: number | undefined;
  endTimestamp?: number | undefined;
  pageToken?: string | undefined;
  pageSize: number;
  blockchainId: string;
  network?: string | undefined;
  sortOrder?: string | undefined;
};

/** @internal */
export const ListLatestPrimaryNetworkTransactionsRequest$outboundSchema:
  z.ZodType<
    ListLatestPrimaryNetworkTransactionsRequest$Outbound,
    z.ZodTypeDef,
    ListLatestPrimaryNetworkTransactionsRequest
  > = z.object({
    addresses: z.string().optional(),
    l1ValidationId: z.string().optional(),
    txTypes: z.array(components.PrimaryNetworkTxType$outboundSchema).optional(),
    startTimestamp: z.number().int().optional(),
    endTimestamp: z.number().int().optional(),
    pageToken: z.string().optional(),
    pageSize: z.number().int().default(10),
    blockchainId: components.BlockchainId$outboundSchema,
    network: components.GlobalParamNetwork$outboundSchema.optional(),
    sortOrder: components.SortOrder$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListLatestPrimaryNetworkTransactionsRequest$ {
  /** @deprecated use `ListLatestPrimaryNetworkTransactionsRequest$inboundSchema` instead. */
  export const inboundSchema =
    ListLatestPrimaryNetworkTransactionsRequest$inboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkTransactionsRequest$outboundSchema` instead. */
  export const outboundSchema =
    ListLatestPrimaryNetworkTransactionsRequest$outboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkTransactionsRequest$Outbound` instead. */
  export type Outbound = ListLatestPrimaryNetworkTransactionsRequest$Outbound;
}

export function listLatestPrimaryNetworkTransactionsRequestToJSON(
  listLatestPrimaryNetworkTransactionsRequest:
    ListLatestPrimaryNetworkTransactionsRequest,
): string {
  return JSON.stringify(
    ListLatestPrimaryNetworkTransactionsRequest$outboundSchema.parse(
      listLatestPrimaryNetworkTransactionsRequest,
    ),
  );
}

export function listLatestPrimaryNetworkTransactionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ListLatestPrimaryNetworkTransactionsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ListLatestPrimaryNetworkTransactionsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ListLatestPrimaryNetworkTransactionsRequest' from JSON`,
  );
}

/** @internal */
export const ListLatestPrimaryNetworkTransactionsResponseBody$inboundSchema:
  z.ZodType<
    ListLatestPrimaryNetworkTransactionsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.union([
    components.ListPChainTransactionsResponse$inboundSchema,
    components.ListXChainTransactionsResponse$inboundSchema,
    components.ListCChainAtomicTransactionsResponse$inboundSchema,
  ]);

/** @internal */
export type ListLatestPrimaryNetworkTransactionsResponseBody$Outbound =
  | components.ListPChainTransactionsResponse$Outbound
  | components.ListXChainTransactionsResponse$Outbound
  | components.ListCChainAtomicTransactionsResponse$Outbound;

/** @internal */
export const ListLatestPrimaryNetworkTransactionsResponseBody$outboundSchema:
  z.ZodType<
    ListLatestPrimaryNetworkTransactionsResponseBody$Outbound,
    z.ZodTypeDef,
    ListLatestPrimaryNetworkTransactionsResponseBody
  > = z.union([
    components.ListPChainTransactionsResponse$outboundSchema,
    components.ListXChainTransactionsResponse$outboundSchema,
    components.ListCChainAtomicTransactionsResponse$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListLatestPrimaryNetworkTransactionsResponseBody$ {
  /** @deprecated use `ListLatestPrimaryNetworkTransactionsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ListLatestPrimaryNetworkTransactionsResponseBody$inboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkTransactionsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ListLatestPrimaryNetworkTransactionsResponseBody$outboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkTransactionsResponseBody$Outbound` instead. */
  export type Outbound =
    ListLatestPrimaryNetworkTransactionsResponseBody$Outbound;
}

export function listLatestPrimaryNetworkTransactionsResponseBodyToJSON(
  listLatestPrimaryNetworkTransactionsResponseBody:
    ListLatestPrimaryNetworkTransactionsResponseBody,
): string {
  return JSON.stringify(
    ListLatestPrimaryNetworkTransactionsResponseBody$outboundSchema.parse(
      listLatestPrimaryNetworkTransactionsResponseBody,
    ),
  );
}

export function listLatestPrimaryNetworkTransactionsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ListLatestPrimaryNetworkTransactionsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ListLatestPrimaryNetworkTransactionsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ListLatestPrimaryNetworkTransactionsResponseBody' from JSON`,
  );
}

/** @internal */
export const ListLatestPrimaryNetworkTransactionsResponse$inboundSchema:
  z.ZodType<
    ListLatestPrimaryNetworkTransactionsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    Result: z.union([
      components.ListPChainTransactionsResponse$inboundSchema,
      components.ListXChainTransactionsResponse$inboundSchema,
      components.ListCChainAtomicTransactionsResponse$inboundSchema,
    ]),
  }).transform((v) => {
    return remap$(v, {
      "Result": "result",
    });
  });

/** @internal */
export type ListLatestPrimaryNetworkTransactionsResponse$Outbound = {
  Result:
    | components.ListPChainTransactionsResponse$Outbound
    | components.ListXChainTransactionsResponse$Outbound
    | components.ListCChainAtomicTransactionsResponse$Outbound;
};

/** @internal */
export const ListLatestPrimaryNetworkTransactionsResponse$outboundSchema:
  z.ZodType<
    ListLatestPrimaryNetworkTransactionsResponse$Outbound,
    z.ZodTypeDef,
    ListLatestPrimaryNetworkTransactionsResponse
  > = z.object({
    result: z.union([
      components.ListPChainTransactionsResponse$outboundSchema,
      components.ListXChainTransactionsResponse$outboundSchema,
      components.ListCChainAtomicTransactionsResponse$outboundSchema,
    ]),
  }).transform((v) => {
    return remap$(v, {
      result: "Result",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListLatestPrimaryNetworkTransactionsResponse$ {
  /** @deprecated use `ListLatestPrimaryNetworkTransactionsResponse$inboundSchema` instead. */
  export const inboundSchema =
    ListLatestPrimaryNetworkTransactionsResponse$inboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkTransactionsResponse$outboundSchema` instead. */
  export const outboundSchema =
    ListLatestPrimaryNetworkTransactionsResponse$outboundSchema;
  /** @deprecated use `ListLatestPrimaryNetworkTransactionsResponse$Outbound` instead. */
  export type Outbound = ListLatestPrimaryNetworkTransactionsResponse$Outbound;
}

export function listLatestPrimaryNetworkTransactionsResponseToJSON(
  listLatestPrimaryNetworkTransactionsResponse:
    ListLatestPrimaryNetworkTransactionsResponse,
): string {
  return JSON.stringify(
    ListLatestPrimaryNetworkTransactionsResponse$outboundSchema.parse(
      listLatestPrimaryNetworkTransactionsResponse,
    ),
  );
}

export function listLatestPrimaryNetworkTransactionsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  ListLatestPrimaryNetworkTransactionsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ListLatestPrimaryNetworkTransactionsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ListLatestPrimaryNetworkTransactionsResponse' from JSON`,
  );
}
