/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type ListActivePrimaryNetworkStakingTransactionsGlobals = {
    /**
     * A supported network type mainnet or a testnet.
     */
    network?: components.Network | undefined;
};

export type ListActivePrimaryNetworkStakingTransactionsRequest = {
    /**
     * A comma separated list of X-Chain or P-Chain wallet addresses, starting with "avax"/"fuji", "P-avax"/"P-fuji" or "X-avax"/"X-fuji".
     */
    addresses?: string | undefined;
    /**
     * Query param for filtering items based on transaction types.
     */
    txTypes?: Array<components.PrimaryNetworkTxType> | undefined;
    /**
     * Query param for retrieving items after a specific timestamp.
     */
    startTimestamp?: number | undefined;
    /**
     * Query param for retrieving items before a specific timestamp.
     */
    endTimestamp?: number | undefined;
    /**
     * A page token, received from a previous list call. Provide this to retrieve the subsequent page.
     */
    pageToken?: string | undefined;
    /**
     * The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.
     */
    pageSize?: number | undefined;
    /**
     * A primary network blockchain id or alias.
     */
    blockchainId: components.PChainId;
    /**
     * Either mainnet or a testnet.
     */
    network?: components.Network | undefined;
    /**
     * The order by which to sort results. Use "asc" for ascending order, "desc" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.
     */
    sortOrder?: components.SortOrder | undefined;
};

export type ListActivePrimaryNetworkStakingTransactionsResponse = {
    result: components.ListPChainTransactionsResponse;
};

/** @internal */
export const ListActivePrimaryNetworkStakingTransactionsGlobals$inboundSchema: z.ZodType<
    ListActivePrimaryNetworkStakingTransactionsGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    network: components.Network$inboundSchema.optional(),
});

/** @internal */
export type ListActivePrimaryNetworkStakingTransactionsGlobals$Outbound = {
    network?: string | undefined;
};

/** @internal */
export const ListActivePrimaryNetworkStakingTransactionsGlobals$outboundSchema: z.ZodType<
    ListActivePrimaryNetworkStakingTransactionsGlobals$Outbound,
    z.ZodTypeDef,
    ListActivePrimaryNetworkStakingTransactionsGlobals
> = z.object({
    network: components.Network$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListActivePrimaryNetworkStakingTransactionsGlobals$ {
    /** @deprecated use `ListActivePrimaryNetworkStakingTransactionsGlobals$inboundSchema` instead. */
    export const inboundSchema = ListActivePrimaryNetworkStakingTransactionsGlobals$inboundSchema;
    /** @deprecated use `ListActivePrimaryNetworkStakingTransactionsGlobals$outboundSchema` instead. */
    export const outboundSchema = ListActivePrimaryNetworkStakingTransactionsGlobals$outboundSchema;
    /** @deprecated use `ListActivePrimaryNetworkStakingTransactionsGlobals$Outbound` instead. */
    export type Outbound = ListActivePrimaryNetworkStakingTransactionsGlobals$Outbound;
}

/** @internal */
export const ListActivePrimaryNetworkStakingTransactionsRequest$inboundSchema: z.ZodType<
    ListActivePrimaryNetworkStakingTransactionsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    addresses: z.string().optional(),
    txTypes: z.array(components.PrimaryNetworkTxType$inboundSchema).optional(),
    startTimestamp: z.number().int().optional(),
    endTimestamp: z.number().int().optional(),
    pageToken: z.string().optional(),
    pageSize: z.number().int().default(10),
    blockchainId: components.PChainId$inboundSchema,
    network: components.Network$inboundSchema.optional(),
    sortOrder: components.SortOrder$inboundSchema.optional(),
});

/** @internal */
export type ListActivePrimaryNetworkStakingTransactionsRequest$Outbound = {
    addresses?: string | undefined;
    txTypes?: Array<string> | undefined;
    startTimestamp?: number | undefined;
    endTimestamp?: number | undefined;
    pageToken?: string | undefined;
    pageSize: number;
    blockchainId: string;
    network?: string | undefined;
    sortOrder?: string | undefined;
};

/** @internal */
export const ListActivePrimaryNetworkStakingTransactionsRequest$outboundSchema: z.ZodType<
    ListActivePrimaryNetworkStakingTransactionsRequest$Outbound,
    z.ZodTypeDef,
    ListActivePrimaryNetworkStakingTransactionsRequest
> = z.object({
    addresses: z.string().optional(),
    txTypes: z.array(components.PrimaryNetworkTxType$outboundSchema).optional(),
    startTimestamp: z.number().int().optional(),
    endTimestamp: z.number().int().optional(),
    pageToken: z.string().optional(),
    pageSize: z.number().int().default(10),
    blockchainId: components.PChainId$outboundSchema,
    network: components.Network$outboundSchema.optional(),
    sortOrder: components.SortOrder$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListActivePrimaryNetworkStakingTransactionsRequest$ {
    /** @deprecated use `ListActivePrimaryNetworkStakingTransactionsRequest$inboundSchema` instead. */
    export const inboundSchema = ListActivePrimaryNetworkStakingTransactionsRequest$inboundSchema;
    /** @deprecated use `ListActivePrimaryNetworkStakingTransactionsRequest$outboundSchema` instead. */
    export const outboundSchema = ListActivePrimaryNetworkStakingTransactionsRequest$outboundSchema;
    /** @deprecated use `ListActivePrimaryNetworkStakingTransactionsRequest$Outbound` instead. */
    export type Outbound = ListActivePrimaryNetworkStakingTransactionsRequest$Outbound;
}

/** @internal */
export const ListActivePrimaryNetworkStakingTransactionsResponse$inboundSchema: z.ZodType<
    ListActivePrimaryNetworkStakingTransactionsResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: components.ListPChainTransactionsResponse$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type ListActivePrimaryNetworkStakingTransactionsResponse$Outbound = {
    Result: components.ListPChainTransactionsResponse$Outbound;
};

/** @internal */
export const ListActivePrimaryNetworkStakingTransactionsResponse$outboundSchema: z.ZodType<
    ListActivePrimaryNetworkStakingTransactionsResponse$Outbound,
    z.ZodTypeDef,
    ListActivePrimaryNetworkStakingTransactionsResponse
> = z
    .object({
        result: components.ListPChainTransactionsResponse$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListActivePrimaryNetworkStakingTransactionsResponse$ {
    /** @deprecated use `ListActivePrimaryNetworkStakingTransactionsResponse$inboundSchema` instead. */
    export const inboundSchema = ListActivePrimaryNetworkStakingTransactionsResponse$inboundSchema;
    /** @deprecated use `ListActivePrimaryNetworkStakingTransactionsResponse$outboundSchema` instead. */
    export const outboundSchema =
        ListActivePrimaryNetworkStakingTransactionsResponse$outboundSchema;
    /** @deprecated use `ListActivePrimaryNetworkStakingTransactionsResponse$Outbound` instead. */
    export type Outbound = ListActivePrimaryNetworkStakingTransactionsResponse$Outbound;
}
