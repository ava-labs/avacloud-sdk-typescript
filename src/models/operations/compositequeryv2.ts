/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export const CompositeQueryV2ServerList = [
  "https://metrics.avax.network",
] as const;

export type CompositeQueryV2Response = {
  result: components.CompositeQueryResponse;
};

/** @internal */
export const CompositeQueryV2Response$inboundSchema: z.ZodType<
  CompositeQueryV2Response,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: components.CompositeQueryResponse$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type CompositeQueryV2Response$Outbound = {
  Result: components.CompositeQueryResponse$Outbound;
};

/** @internal */
export const CompositeQueryV2Response$outboundSchema: z.ZodType<
  CompositeQueryV2Response$Outbound,
  z.ZodTypeDef,
  CompositeQueryV2Response
> = z.object({
  result: components.CompositeQueryResponse$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompositeQueryV2Response$ {
  /** @deprecated use `CompositeQueryV2Response$inboundSchema` instead. */
  export const inboundSchema = CompositeQueryV2Response$inboundSchema;
  /** @deprecated use `CompositeQueryV2Response$outboundSchema` instead. */
  export const outboundSchema = CompositeQueryV2Response$outboundSchema;
  /** @deprecated use `CompositeQueryV2Response$Outbound` instead. */
  export type Outbound = CompositeQueryV2Response$Outbound;
}
