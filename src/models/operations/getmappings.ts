/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export const GetMappingsServerList = ["http://localhost:3001"] as const;

export type GetMappingsRequest = {
    /**
     * From date in UNIX Timestamp.
     */
    from?: string | undefined;
    /**
     * To date in UNIX Timestamp.
     */
    to?: string | undefined;
    /**
     * For paginated responses. Value will be provided in the [nextPageStartKey] field in the response if the query has more than one page.
     */
    startKey?: string | undefined;
};

export type GetMappingsResponse = {
    result: components.SubnetMappingsResponse;
};

/** @internal */
export const GetMappingsRequest$inboundSchema: z.ZodType<
    GetMappingsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    from: z.string().optional(),
    to: z.string().optional(),
    startKey: z.string().optional(),
});

/** @internal */
export type GetMappingsRequest$Outbound = {
    from?: string | undefined;
    to?: string | undefined;
    startKey?: string | undefined;
};

/** @internal */
export const GetMappingsRequest$outboundSchema: z.ZodType<
    GetMappingsRequest$Outbound,
    z.ZodTypeDef,
    GetMappingsRequest
> = z.object({
    from: z.string().optional(),
    to: z.string().optional(),
    startKey: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMappingsRequest$ {
    /** @deprecated use `GetMappingsRequest$inboundSchema` instead. */
    export const inboundSchema = GetMappingsRequest$inboundSchema;
    /** @deprecated use `GetMappingsRequest$outboundSchema` instead. */
    export const outboundSchema = GetMappingsRequest$outboundSchema;
    /** @deprecated use `GetMappingsRequest$Outbound` instead. */
    export type Outbound = GetMappingsRequest$Outbound;
}

/** @internal */
export const GetMappingsResponse$inboundSchema: z.ZodType<
    GetMappingsResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: components.SubnetMappingsResponse$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type GetMappingsResponse$Outbound = {
    Result: components.SubnetMappingsResponse$Outbound;
};

/** @internal */
export const GetMappingsResponse$outboundSchema: z.ZodType<
    GetMappingsResponse$Outbound,
    z.ZodTypeDef,
    GetMappingsResponse
> = z
    .object({
        result: components.SubnetMappingsResponse$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMappingsResponse$ {
    /** @deprecated use `GetMappingsResponse$inboundSchema` instead. */
    export const inboundSchema = GetMappingsResponse$inboundSchema;
    /** @deprecated use `GetMappingsResponse$outboundSchema` instead. */
    export const outboundSchema = GetMappingsResponse$outboundSchema;
    /** @deprecated use `GetMappingsResponse$Outbound` instead. */
    export type Outbound = GetMappingsResponse$Outbound;
}
