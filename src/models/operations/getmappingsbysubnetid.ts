/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export const GetMappingsBySubnetIdServerList = ["http://localhost:3001"] as const;

export type GetMappingsBySubnetIdRequest = {
    /**
     * alpha-numeric subnetID
     */
    subnetID: string;
    /**
     * From date in UNIX Timestamp.
     */
    from?: string | undefined;
    /**
     * To date in UNIX Timestamp.
     */
    to?: string | undefined;
    /**
     * For paginated responses. Value will be provided in the [nextPageStartKey] field in the response if the query has more than one page.
     */
    startKey?: string | undefined;
};

export type GetMappingsBySubnetIdResponse = {
    result: components.SubnetMappingsResponse;
};

/** @internal */
export const GetMappingsBySubnetIdRequest$inboundSchema: z.ZodType<
    GetMappingsBySubnetIdRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    subnetID: z.string(),
    from: z.string().optional(),
    to: z.string().optional(),
    startKey: z.string().optional(),
});

/** @internal */
export type GetMappingsBySubnetIdRequest$Outbound = {
    subnetID: string;
    from?: string | undefined;
    to?: string | undefined;
    startKey?: string | undefined;
};

/** @internal */
export const GetMappingsBySubnetIdRequest$outboundSchema: z.ZodType<
    GetMappingsBySubnetIdRequest$Outbound,
    z.ZodTypeDef,
    GetMappingsBySubnetIdRequest
> = z.object({
    subnetID: z.string(),
    from: z.string().optional(),
    to: z.string().optional(),
    startKey: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMappingsBySubnetIdRequest$ {
    /** @deprecated use `GetMappingsBySubnetIdRequest$inboundSchema` instead. */
    export const inboundSchema = GetMappingsBySubnetIdRequest$inboundSchema;
    /** @deprecated use `GetMappingsBySubnetIdRequest$outboundSchema` instead. */
    export const outboundSchema = GetMappingsBySubnetIdRequest$outboundSchema;
    /** @deprecated use `GetMappingsBySubnetIdRequest$Outbound` instead. */
    export type Outbound = GetMappingsBySubnetIdRequest$Outbound;
}

/** @internal */
export const GetMappingsBySubnetIdResponse$inboundSchema: z.ZodType<
    GetMappingsBySubnetIdResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: components.SubnetMappingsResponse$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type GetMappingsBySubnetIdResponse$Outbound = {
    Result: components.SubnetMappingsResponse$Outbound;
};

/** @internal */
export const GetMappingsBySubnetIdResponse$outboundSchema: z.ZodType<
    GetMappingsBySubnetIdResponse$Outbound,
    z.ZodTypeDef,
    GetMappingsBySubnetIdResponse
> = z
    .object({
        result: components.SubnetMappingsResponse$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMappingsBySubnetIdResponse$ {
    /** @deprecated use `GetMappingsBySubnetIdResponse$inboundSchema` instead. */
    export const inboundSchema = GetMappingsBySubnetIdResponse$inboundSchema;
    /** @deprecated use `GetMappingsBySubnetIdResponse$outboundSchema` instead. */
    export const outboundSchema = GetMappingsBySubnetIdResponse$outboundSchema;
    /** @deprecated use `GetMappingsBySubnetIdResponse$Outbound` instead. */
    export type Outbound = GetMappingsBySubnetIdResponse$Outbound;
}
