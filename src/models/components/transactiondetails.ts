/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  Erc1155TransferDetails,
  Erc1155TransferDetails$inboundSchema,
  Erc1155TransferDetails$Outbound,
  Erc1155TransferDetails$outboundSchema,
} from "./erc1155transferdetails.js";
import {
  Erc20TransferDetails,
  Erc20TransferDetails$inboundSchema,
  Erc20TransferDetails$Outbound,
  Erc20TransferDetails$outboundSchema,
} from "./erc20transferdetails.js";
import {
  Erc721TransferDetails,
  Erc721TransferDetails$inboundSchema,
  Erc721TransferDetails$Outbound,
  Erc721TransferDetails$outboundSchema,
} from "./erc721transferdetails.js";
import {
  InternalTransactionDetails,
  InternalTransactionDetails$inboundSchema,
  InternalTransactionDetails$Outbound,
  InternalTransactionDetails$outboundSchema,
} from "./internaltransactiondetails.js";
import {
  NativeTransaction,
  NativeTransaction$inboundSchema,
  NativeTransaction$Outbound,
  NativeTransaction$outboundSchema,
} from "./nativetransaction.js";

export type TransactionDetails = {
  /**
   * The native (top-level) transaction details.
   */
  nativeTransaction: NativeTransaction;
  /**
   * The list of ERC-20 transfers.
   */
  erc20Transfers?: Array<Erc20TransferDetails> | undefined;
  /**
   * The list of ERC-721 transfers.
   */
  erc721Transfers?: Array<Erc721TransferDetails> | undefined;
  /**
   * The list of ERC-1155 transfers.
   */
  erc1155Transfers?: Array<Erc1155TransferDetails> | undefined;
  /**
   * The list of internal transactions. Note that this list only includes CALL and CALLCODE internal transactions that had a non-zero value and CREATE/CREATE2 calls. Use a client provider to recieve a full debug trace of the transaction.
   */
  internalTransactions?: Array<InternalTransactionDetails> | undefined;
};

/** @internal */
export const TransactionDetails$inboundSchema: z.ZodType<
  TransactionDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  nativeTransaction: NativeTransaction$inboundSchema,
  erc20Transfers: z.array(Erc20TransferDetails$inboundSchema).optional(),
  erc721Transfers: z.array(Erc721TransferDetails$inboundSchema).optional(),
  erc1155Transfers: z.array(Erc1155TransferDetails$inboundSchema).optional(),
  internalTransactions: z.array(InternalTransactionDetails$inboundSchema)
    .optional(),
});

/** @internal */
export type TransactionDetails$Outbound = {
  nativeTransaction: NativeTransaction$Outbound;
  erc20Transfers?: Array<Erc20TransferDetails$Outbound> | undefined;
  erc721Transfers?: Array<Erc721TransferDetails$Outbound> | undefined;
  erc1155Transfers?: Array<Erc1155TransferDetails$Outbound> | undefined;
  internalTransactions?: Array<InternalTransactionDetails$Outbound> | undefined;
};

/** @internal */
export const TransactionDetails$outboundSchema: z.ZodType<
  TransactionDetails$Outbound,
  z.ZodTypeDef,
  TransactionDetails
> = z.object({
  nativeTransaction: NativeTransaction$outboundSchema,
  erc20Transfers: z.array(Erc20TransferDetails$outboundSchema).optional(),
  erc721Transfers: z.array(Erc721TransferDetails$outboundSchema).optional(),
  erc1155Transfers: z.array(Erc1155TransferDetails$outboundSchema).optional(),
  internalTransactions: z.array(InternalTransactionDetails$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransactionDetails$ {
  /** @deprecated use `TransactionDetails$inboundSchema` instead. */
  export const inboundSchema = TransactionDetails$inboundSchema;
  /** @deprecated use `TransactionDetails$outboundSchema` instead. */
  export const outboundSchema = TransactionDetails$outboundSchema;
  /** @deprecated use `TransactionDetails$Outbound` instead. */
  export type Outbound = TransactionDetails$Outbound;
}
