/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PChainTransaction,
  PChainTransaction$inboundSchema,
  PChainTransaction$Outbound,
  PChainTransaction$outboundSchema,
} from "./pchaintransaction.js";
import {
  PrimaryNetworkChainInfo,
  PrimaryNetworkChainInfo$inboundSchema,
  PrimaryNetworkChainInfo$Outbound,
  PrimaryNetworkChainInfo$outboundSchema,
} from "./primarynetworkchaininfo.js";

export type ListPChainTransactionsResponse = {
  /**
   * A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages.
   */
  nextPageToken?: string | undefined;
  transactions: Array<PChainTransaction>;
  chainInfo: PrimaryNetworkChainInfo;
};

/** @internal */
export const ListPChainTransactionsResponse$inboundSchema: z.ZodType<
  ListPChainTransactionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  nextPageToken: z.string().optional(),
  transactions: z.array(PChainTransaction$inboundSchema),
  chainInfo: PrimaryNetworkChainInfo$inboundSchema,
});

/** @internal */
export type ListPChainTransactionsResponse$Outbound = {
  nextPageToken?: string | undefined;
  transactions: Array<PChainTransaction$Outbound>;
  chainInfo: PrimaryNetworkChainInfo$Outbound;
};

/** @internal */
export const ListPChainTransactionsResponse$outboundSchema: z.ZodType<
  ListPChainTransactionsResponse$Outbound,
  z.ZodTypeDef,
  ListPChainTransactionsResponse
> = z.object({
  nextPageToken: z.string().optional(),
  transactions: z.array(PChainTransaction$outboundSchema),
  chainInfo: PrimaryNetworkChainInfo$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPChainTransactionsResponse$ {
  /** @deprecated use `ListPChainTransactionsResponse$inboundSchema` instead. */
  export const inboundSchema = ListPChainTransactionsResponse$inboundSchema;
  /** @deprecated use `ListPChainTransactionsResponse$outboundSchema` instead. */
  export const outboundSchema = ListPChainTransactionsResponse$outboundSchema;
  /** @deprecated use `ListPChainTransactionsResponse$Outbound` instead. */
  export type Outbound = ListPChainTransactionsResponse$Outbound;
}

export function listPChainTransactionsResponseToJSON(
  listPChainTransactionsResponse: ListPChainTransactionsResponse,
): string {
  return JSON.stringify(
    ListPChainTransactionsResponse$outboundSchema.parse(
      listPChainTransactionsResponse,
    ),
  );
}

export function listPChainTransactionsResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListPChainTransactionsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListPChainTransactionsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListPChainTransactionsResponse' from JSON`,
  );
}
