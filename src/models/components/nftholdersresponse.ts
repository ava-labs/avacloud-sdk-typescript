/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  AddressDetails,
  AddressDetails$inboundSchema,
  AddressDetails$Outbound,
  AddressDetails$outboundSchema,
} from "./addressdetails.js";

export type NftHoldersResponse = {
  /**
   * A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages.
   */
  nextPageToken?: string | undefined;
  /**
   * List of addresses that match provided criteria.
   */
  addresses: AddressDetails;
  /**
   * NFT project name.
   */
  nftCollectionName: string;
  /**
   * NFT symbol.
   */
  nftSymbol: string;
  /**
   * Total number of holders of a given NFT project.
   */
  totalHolders: number;
  /**
   * Total number of tokens of a given NFT project.
   */
  totalTokens: number;
};

/** @internal */
export const NftHoldersResponse$inboundSchema: z.ZodType<
  NftHoldersResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  nextPageToken: z.string().optional(),
  addresses: AddressDetails$inboundSchema,
  nftCollectionName: z.string(),
  nftSymbol: z.string(),
  totalHolders: z.number(),
  totalTokens: z.number(),
});

/** @internal */
export type NftHoldersResponse$Outbound = {
  nextPageToken?: string | undefined;
  addresses: AddressDetails$Outbound;
  nftCollectionName: string;
  nftSymbol: string;
  totalHolders: number;
  totalTokens: number;
};

/** @internal */
export const NftHoldersResponse$outboundSchema: z.ZodType<
  NftHoldersResponse$Outbound,
  z.ZodTypeDef,
  NftHoldersResponse
> = z.object({
  nextPageToken: z.string().optional(),
  addresses: AddressDetails$outboundSchema,
  nftCollectionName: z.string(),
  nftSymbol: z.string(),
  totalHolders: z.number(),
  totalTokens: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NftHoldersResponse$ {
  /** @deprecated use `NftHoldersResponse$inboundSchema` instead. */
  export const inboundSchema = NftHoldersResponse$inboundSchema;
  /** @deprecated use `NftHoldersResponse$outboundSchema` instead. */
  export const outboundSchema = NftHoldersResponse$outboundSchema;
  /** @deprecated use `NftHoldersResponse$Outbound` instead. */
  export type Outbound = NftHoldersResponse$Outbound;
}
