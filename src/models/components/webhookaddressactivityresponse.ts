/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  TransactionEvent,
  TransactionEvent$inboundSchema,
  TransactionEvent$Outbound,
  TransactionEvent$outboundSchema,
} from "./transactionevent.js";

/**
 * Event type
 */
export const WebhookAddressActivityResponseEventType = {
  AddressActivity: "address_activity",
} as const;
/**
 * Event type
 */
export type WebhookAddressActivityResponseEventType = ClosedEnum<
  typeof WebhookAddressActivityResponseEventType
>;

export type WebhookAddressActivityResponse = {
  /**
   * Webhook ID
   */
  webhookId: string;
  /**
   * Event type
   */
  eventType: WebhookAddressActivityResponseEventType;
  /**
   * Message ID
   */
  messageId: string;
  /**
   * Event details
   */
  event: TransactionEvent;
};

/** @internal */
export const WebhookAddressActivityResponseEventType$inboundSchema:
  z.ZodNativeEnum<typeof WebhookAddressActivityResponseEventType> = z
    .nativeEnum(WebhookAddressActivityResponseEventType);

/** @internal */
export const WebhookAddressActivityResponseEventType$outboundSchema:
  z.ZodNativeEnum<typeof WebhookAddressActivityResponseEventType> =
    WebhookAddressActivityResponseEventType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookAddressActivityResponseEventType$ {
  /** @deprecated use `WebhookAddressActivityResponseEventType$inboundSchema` instead. */
  export const inboundSchema =
    WebhookAddressActivityResponseEventType$inboundSchema;
  /** @deprecated use `WebhookAddressActivityResponseEventType$outboundSchema` instead. */
  export const outboundSchema =
    WebhookAddressActivityResponseEventType$outboundSchema;
}

/** @internal */
export const WebhookAddressActivityResponse$inboundSchema: z.ZodType<
  WebhookAddressActivityResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  webhookId: z.string(),
  eventType: WebhookAddressActivityResponseEventType$inboundSchema,
  messageId: z.string(),
  event: TransactionEvent$inboundSchema,
});

/** @internal */
export type WebhookAddressActivityResponse$Outbound = {
  webhookId: string;
  eventType: string;
  messageId: string;
  event: TransactionEvent$Outbound;
};

/** @internal */
export const WebhookAddressActivityResponse$outboundSchema: z.ZodType<
  WebhookAddressActivityResponse$Outbound,
  z.ZodTypeDef,
  WebhookAddressActivityResponse
> = z.object({
  webhookId: z.string(),
  eventType: WebhookAddressActivityResponseEventType$outboundSchema,
  messageId: z.string(),
  event: TransactionEvent$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookAddressActivityResponse$ {
  /** @deprecated use `WebhookAddressActivityResponse$inboundSchema` instead. */
  export const inboundSchema = WebhookAddressActivityResponse$inboundSchema;
  /** @deprecated use `WebhookAddressActivityResponse$outboundSchema` instead. */
  export const outboundSchema = WebhookAddressActivityResponse$outboundSchema;
  /** @deprecated use `WebhookAddressActivityResponse$Outbound` instead. */
  export type Outbound = WebhookAddressActivityResponse$Outbound;
}

export function webhookAddressActivityResponseToJSON(
  webhookAddressActivityResponse: WebhookAddressActivityResponse,
): string {
  return JSON.stringify(
    WebhookAddressActivityResponse$outboundSchema.parse(
      webhookAddressActivityResponse,
    ),
  );
}

export function webhookAddressActivityResponseFromJSON(
  jsonString: string,
): SafeParseResult<WebhookAddressActivityResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WebhookAddressActivityResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhookAddressActivityResponse' from JSON`,
  );
}
