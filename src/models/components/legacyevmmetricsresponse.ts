/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    LegacyEvmMetric,
    LegacyEvmMetric$inboundSchema,
    LegacyEvmMetric$Outbound,
    LegacyEvmMetric$outboundSchema,
} from "./legacyevmmetric.js";
import * as z from "zod";

export type LegacyEvmMetricsResponse = {
    nextPageStartKey?: string | undefined;
    lastRun?: number | undefined;
    status: number;
    results: Array<LegacyEvmMetric>;
};

/** @internal */
export const LegacyEvmMetricsResponse$inboundSchema: z.ZodType<
    LegacyEvmMetricsResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    nextPageStartKey: z.string().optional(),
    lastRun: z.number().optional(),
    status: z.number(),
    results: z.array(LegacyEvmMetric$inboundSchema),
});

/** @internal */
export type LegacyEvmMetricsResponse$Outbound = {
    nextPageStartKey?: string | undefined;
    lastRun?: number | undefined;
    status: number;
    results: Array<LegacyEvmMetric$Outbound>;
};

/** @internal */
export const LegacyEvmMetricsResponse$outboundSchema: z.ZodType<
    LegacyEvmMetricsResponse$Outbound,
    z.ZodTypeDef,
    LegacyEvmMetricsResponse
> = z.object({
    nextPageStartKey: z.string().optional(),
    lastRun: z.number().optional(),
    status: z.number(),
    results: z.array(LegacyEvmMetric$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LegacyEvmMetricsResponse$ {
    /** @deprecated use `LegacyEvmMetricsResponse$inboundSchema` instead. */
    export const inboundSchema = LegacyEvmMetricsResponse$inboundSchema;
    /** @deprecated use `LegacyEvmMetricsResponse$outboundSchema` instead. */
    export const outboundSchema = LegacyEvmMetricsResponse$outboundSchema;
    /** @deprecated use `LegacyEvmMetricsResponse$Outbound` instead. */
    export type Outbound = LegacyEvmMetricsResponse$Outbound;
}
