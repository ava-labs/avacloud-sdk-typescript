/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  WebhookStatusType,
  WebhookStatusType$inboundSchema,
  WebhookStatusType$outboundSchema,
} from "./webhookstatustype.js";

export type UpdateWebhookRequest = {
  name?: string | undefined;
  description?: string | undefined;
  url?: string | undefined;
  status?: WebhookStatusType | undefined;
  includeInternalTxs?: boolean | undefined;
  includeLogs?: boolean | undefined;
};

/** @internal */
export const UpdateWebhookRequest$inboundSchema: z.ZodType<
  UpdateWebhookRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  url: z.string().optional(),
  status: WebhookStatusType$inboundSchema.optional(),
  includeInternalTxs: z.boolean().optional(),
  includeLogs: z.boolean().optional(),
});

/** @internal */
export type UpdateWebhookRequest$Outbound = {
  name?: string | undefined;
  description?: string | undefined;
  url?: string | undefined;
  status?: string | undefined;
  includeInternalTxs?: boolean | undefined;
  includeLogs?: boolean | undefined;
};

/** @internal */
export const UpdateWebhookRequest$outboundSchema: z.ZodType<
  UpdateWebhookRequest$Outbound,
  z.ZodTypeDef,
  UpdateWebhookRequest
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  url: z.string().optional(),
  status: WebhookStatusType$outboundSchema.optional(),
  includeInternalTxs: z.boolean().optional(),
  includeLogs: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateWebhookRequest$ {
  /** @deprecated use `UpdateWebhookRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateWebhookRequest$inboundSchema;
  /** @deprecated use `UpdateWebhookRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateWebhookRequest$outboundSchema;
  /** @deprecated use `UpdateWebhookRequest$Outbound` instead. */
  export type Outbound = UpdateWebhookRequest$Outbound;
}
