/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PrimaryNetworkAddressActivitySubEventType,
  PrimaryNetworkAddressActivitySubEventType$inboundSchema,
  PrimaryNetworkAddressActivitySubEventType$outboundSchema,
} from "./primarynetworkaddressactivitysubeventtype.js";

export type PrimaryNetworkAddressActivitySubEvents = {
  addressActivitySubEvents: Array<PrimaryNetworkAddressActivitySubEventType>;
};

/** @internal */
export const PrimaryNetworkAddressActivitySubEvents$inboundSchema: z.ZodType<
  PrimaryNetworkAddressActivitySubEvents,
  z.ZodTypeDef,
  unknown
> = z.object({
  addressActivitySubEvents: z.array(
    PrimaryNetworkAddressActivitySubEventType$inboundSchema,
  ),
});

/** @internal */
export type PrimaryNetworkAddressActivitySubEvents$Outbound = {
  addressActivitySubEvents: Array<string>;
};

/** @internal */
export const PrimaryNetworkAddressActivitySubEvents$outboundSchema: z.ZodType<
  PrimaryNetworkAddressActivitySubEvents$Outbound,
  z.ZodTypeDef,
  PrimaryNetworkAddressActivitySubEvents
> = z.object({
  addressActivitySubEvents: z.array(
    PrimaryNetworkAddressActivitySubEventType$outboundSchema,
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PrimaryNetworkAddressActivitySubEvents$ {
  /** @deprecated use `PrimaryNetworkAddressActivitySubEvents$inboundSchema` instead. */
  export const inboundSchema =
    PrimaryNetworkAddressActivitySubEvents$inboundSchema;
  /** @deprecated use `PrimaryNetworkAddressActivitySubEvents$outboundSchema` instead. */
  export const outboundSchema =
    PrimaryNetworkAddressActivitySubEvents$outboundSchema;
  /** @deprecated use `PrimaryNetworkAddressActivitySubEvents$Outbound` instead. */
  export type Outbound = PrimaryNetworkAddressActivitySubEvents$Outbound;
}

export function primaryNetworkAddressActivitySubEventsToJSON(
  primaryNetworkAddressActivitySubEvents:
    PrimaryNetworkAddressActivitySubEvents,
): string {
  return JSON.stringify(
    PrimaryNetworkAddressActivitySubEvents$outboundSchema.parse(
      primaryNetworkAddressActivitySubEvents,
    ),
  );
}

export function primaryNetworkAddressActivitySubEventsFromJSON(
  jsonString: string,
): SafeParseResult<PrimaryNetworkAddressActivitySubEvents, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PrimaryNetworkAddressActivitySubEvents$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PrimaryNetworkAddressActivitySubEvents' from JSON`,
  );
}
