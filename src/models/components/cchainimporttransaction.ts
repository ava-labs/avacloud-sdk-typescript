/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  AssetAmount,
  AssetAmount$inboundSchema,
  AssetAmount$Outbound,
  AssetAmount$outboundSchema,
} from "./assetamount.js";
import {
  EVMOutput,
  EVMOutput$inboundSchema,
  EVMOutput$Outbound,
  EVMOutput$outboundSchema,
} from "./evmoutput.js";
import {
  Utxo,
  Utxo$inboundSchema,
  Utxo$Outbound,
  Utxo$outboundSchema,
} from "./utxo.js";

/**
 * Type of transaction.
 */
export const CChainImportTransactionTxType = {
  ImportTx: "ImportTx",
} as const;
/**
 * Type of transaction.
 */
export type CChainImportTransactionTxType = ClosedEnum<
  typeof CChainImportTransactionTxType
>;

export type CChainImportTransaction = {
  /**
   * Unique ID for this transaction.
   */
  txHash: string;
  /**
   * Height of the block this transaction belongs to.
   */
  blockHeight: number;
  /**
   * Hash of the block this transaction belongs to.
   */
  blockHash: string;
  /**
   * Latest timestamp in seconds this transaction was accepted.
   */
  timestamp: number;
  /**
   * Hex encoded memo bytes for this transaction.
   */
  memo: string;
  /**
   * Assets unlocked by inputs of this transaction.
   */
  amountUnlocked: Array<AssetAmount>;
  /**
   * Assets created by outputs of this transaction.
   */
  amountCreated: Array<AssetAmount>;
  /**
   * Source chain for an atomic transaction.
   */
  sourceChain: string;
  /**
   * Destination chain for an atomic transaction.
   */
  destinationChain: string;
  /**
   * Type of transaction.
   */
  txType: CChainImportTransactionTxType;
  evmOutputs: Array<EVMOutput>;
  consumedUtxos: Array<Utxo>;
};

/** @internal */
export const CChainImportTransactionTxType$inboundSchema: z.ZodNativeEnum<
  typeof CChainImportTransactionTxType
> = z.nativeEnum(CChainImportTransactionTxType);

/** @internal */
export const CChainImportTransactionTxType$outboundSchema: z.ZodNativeEnum<
  typeof CChainImportTransactionTxType
> = CChainImportTransactionTxType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CChainImportTransactionTxType$ {
  /** @deprecated use `CChainImportTransactionTxType$inboundSchema` instead. */
  export const inboundSchema = CChainImportTransactionTxType$inboundSchema;
  /** @deprecated use `CChainImportTransactionTxType$outboundSchema` instead. */
  export const outboundSchema = CChainImportTransactionTxType$outboundSchema;
}

/** @internal */
export const CChainImportTransaction$inboundSchema: z.ZodType<
  CChainImportTransaction,
  z.ZodTypeDef,
  unknown
> = z.object({
  txHash: z.string(),
  blockHeight: z.number(),
  blockHash: z.string(),
  timestamp: z.number(),
  memo: z.string(),
  amountUnlocked: z.array(AssetAmount$inboundSchema),
  amountCreated: z.array(AssetAmount$inboundSchema),
  sourceChain: z.string(),
  destinationChain: z.string(),
  txType: CChainImportTransactionTxType$inboundSchema,
  evmOutputs: z.array(EVMOutput$inboundSchema),
  consumedUtxos: z.array(Utxo$inboundSchema),
});

/** @internal */
export type CChainImportTransaction$Outbound = {
  txHash: string;
  blockHeight: number;
  blockHash: string;
  timestamp: number;
  memo: string;
  amountUnlocked: Array<AssetAmount$Outbound>;
  amountCreated: Array<AssetAmount$Outbound>;
  sourceChain: string;
  destinationChain: string;
  txType: string;
  evmOutputs: Array<EVMOutput$Outbound>;
  consumedUtxos: Array<Utxo$Outbound>;
};

/** @internal */
export const CChainImportTransaction$outboundSchema: z.ZodType<
  CChainImportTransaction$Outbound,
  z.ZodTypeDef,
  CChainImportTransaction
> = z.object({
  txHash: z.string(),
  blockHeight: z.number(),
  blockHash: z.string(),
  timestamp: z.number(),
  memo: z.string(),
  amountUnlocked: z.array(AssetAmount$outboundSchema),
  amountCreated: z.array(AssetAmount$outboundSchema),
  sourceChain: z.string(),
  destinationChain: z.string(),
  txType: CChainImportTransactionTxType$outboundSchema,
  evmOutputs: z.array(EVMOutput$outboundSchema),
  consumedUtxos: z.array(Utxo$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CChainImportTransaction$ {
  /** @deprecated use `CChainImportTransaction$inboundSchema` instead. */
  export const inboundSchema = CChainImportTransaction$inboundSchema;
  /** @deprecated use `CChainImportTransaction$outboundSchema` instead. */
  export const outboundSchema = CChainImportTransaction$outboundSchema;
  /** @deprecated use `CChainImportTransaction$Outbound` instead. */
  export type Outbound = CChainImportTransaction$Outbound;
}
