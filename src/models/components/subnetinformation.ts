/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type SubnetInformation = {
    controlKeys: Array<string>;
    threshold: number;
    subnetID: string;
    timestamp: number;
    validatorCount: number;
};

/** @internal */
export const SubnetInformation$inboundSchema: z.ZodType<SubnetInformation, z.ZodTypeDef, unknown> =
    z.object({
        controlKeys: z.array(z.string()),
        threshold: z.number(),
        subnetID: z.string(),
        timestamp: z.number(),
        validatorCount: z.number(),
    });

/** @internal */
export type SubnetInformation$Outbound = {
    controlKeys: Array<string>;
    threshold: number;
    subnetID: string;
    timestamp: number;
    validatorCount: number;
};

/** @internal */
export const SubnetInformation$outboundSchema: z.ZodType<
    SubnetInformation$Outbound,
    z.ZodTypeDef,
    SubnetInformation
> = z.object({
    controlKeys: z.array(z.string()),
    threshold: z.number(),
    subnetID: z.string(),
    timestamp: z.number(),
    validatorCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SubnetInformation$ {
    /** @deprecated use `SubnetInformation$inboundSchema` instead. */
    export const inboundSchema = SubnetInformation$inboundSchema;
    /** @deprecated use `SubnetInformation$outboundSchema` instead. */
    export const outboundSchema = SubnetInformation$outboundSchema;
    /** @deprecated use `SubnetInformation$Outbound` instead. */
    export type Outbound = SubnetInformation$Outbound;
}
