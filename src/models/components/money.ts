/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  CurrencyCode,
  CurrencyCode$inboundSchema,
  CurrencyCode$outboundSchema,
} from "./currencycode.js";

export type Money = {
  /**
   * ISO 4217 currency code.
   */
  currencyCode: CurrencyCode;
  /**
   * Monetary value in base 10 decimals.
   */
  value: number;
};

/** @internal */
export const Money$inboundSchema: z.ZodType<Money, z.ZodTypeDef, unknown> = z
  .object({
    currencyCode: CurrencyCode$inboundSchema,
    value: z.number(),
  });

/** @internal */
export type Money$Outbound = {
  currencyCode: string;
  value: number;
};

/** @internal */
export const Money$outboundSchema: z.ZodType<
  Money$Outbound,
  z.ZodTypeDef,
  Money
> = z.object({
  currencyCode: CurrencyCode$outboundSchema,
  value: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Money$ {
  /** @deprecated use `Money$inboundSchema` instead. */
  export const inboundSchema = Money$inboundSchema;
  /** @deprecated use `Money$outboundSchema` instead. */
  export const outboundSchema = Money$outboundSchema;
  /** @deprecated use `Money$Outbound` instead. */
  export type Outbound = Money$Outbound;
}
