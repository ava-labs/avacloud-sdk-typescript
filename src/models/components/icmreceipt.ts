/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type IcmReceipt = {
  receivedMessageNonce: string;
  relayerRewardAddress: string;
};

/** @internal */
export const IcmReceipt$inboundSchema: z.ZodType<
  IcmReceipt,
  z.ZodTypeDef,
  unknown
> = z.object({
  receivedMessageNonce: z.string(),
  relayerRewardAddress: z.string(),
});

/** @internal */
export type IcmReceipt$Outbound = {
  receivedMessageNonce: string;
  relayerRewardAddress: string;
};

/** @internal */
export const IcmReceipt$outboundSchema: z.ZodType<
  IcmReceipt$Outbound,
  z.ZodTypeDef,
  IcmReceipt
> = z.object({
  receivedMessageNonce: z.string(),
  relayerRewardAddress: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IcmReceipt$ {
  /** @deprecated use `IcmReceipt$inboundSchema` instead. */
  export const inboundSchema = IcmReceipt$inboundSchema;
  /** @deprecated use `IcmReceipt$outboundSchema` instead. */
  export const outboundSchema = IcmReceipt$outboundSchema;
  /** @deprecated use `IcmReceipt$Outbound` instead. */
  export type Outbound = IcmReceipt$Outbound;
}

export function icmReceiptToJSON(icmReceipt: IcmReceipt): string {
  return JSON.stringify(IcmReceipt$outboundSchema.parse(icmReceipt));
}

export function icmReceiptFromJSON(
  jsonString: string,
): SafeParseResult<IcmReceipt, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IcmReceipt$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IcmReceipt' from JSON`,
  );
}
