/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PrimaryNetworkAssetType,
  PrimaryNetworkAssetType$inboundSchema,
  PrimaryNetworkAssetType$outboundSchema,
} from "./primarynetworkassettype.js";

export type CChainSharedAssetBalance = {
  /**
   * Unique ID for an asset.
   */
  assetId: string;
  /**
   * Name of this asset.
   */
  name: string;
  /**
   * Symbol for this asset (max 4 characters).
   */
  symbol: string;
  /**
   * Denomination of this asset to represent fungibility.
   */
  denomination: number;
  /**
   * Type of asset like SECP256K1 or NFT.
   */
  type: PrimaryNetworkAssetType;
  /**
   * Amount of the asset.
   */
  amount: string;
  utxoCount: number;
  sharedWithChainId: string;
};

/** @internal */
export const CChainSharedAssetBalance$inboundSchema: z.ZodType<
  CChainSharedAssetBalance,
  z.ZodTypeDef,
  unknown
> = z.object({
  assetId: z.string(),
  name: z.string(),
  symbol: z.string(),
  denomination: z.number(),
  type: PrimaryNetworkAssetType$inboundSchema,
  amount: z.string(),
  utxoCount: z.number(),
  sharedWithChainId: z.string(),
});

/** @internal */
export type CChainSharedAssetBalance$Outbound = {
  assetId: string;
  name: string;
  symbol: string;
  denomination: number;
  type: string;
  amount: string;
  utxoCount: number;
  sharedWithChainId: string;
};

/** @internal */
export const CChainSharedAssetBalance$outboundSchema: z.ZodType<
  CChainSharedAssetBalance$Outbound,
  z.ZodTypeDef,
  CChainSharedAssetBalance
> = z.object({
  assetId: z.string(),
  name: z.string(),
  symbol: z.string(),
  denomination: z.number(),
  type: PrimaryNetworkAssetType$outboundSchema,
  amount: z.string(),
  utxoCount: z.number(),
  sharedWithChainId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CChainSharedAssetBalance$ {
  /** @deprecated use `CChainSharedAssetBalance$inboundSchema` instead. */
  export const inboundSchema = CChainSharedAssetBalance$inboundSchema;
  /** @deprecated use `CChainSharedAssetBalance$outboundSchema` instead. */
  export const outboundSchema = CChainSharedAssetBalance$outboundSchema;
  /** @deprecated use `CChainSharedAssetBalance$Outbound` instead. */
  export type Outbound = CChainSharedAssetBalance$Outbound;
}

export function cChainSharedAssetBalanceToJSON(
  cChainSharedAssetBalance: CChainSharedAssetBalance,
): string {
  return JSON.stringify(
    CChainSharedAssetBalance$outboundSchema.parse(cChainSharedAssetBalance),
  );
}

export function cChainSharedAssetBalanceFromJSON(
  jsonString: string,
): SafeParseResult<CChainSharedAssetBalance, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CChainSharedAssetBalance$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CChainSharedAssetBalance' from JSON`,
  );
}
