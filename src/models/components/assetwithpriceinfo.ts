/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { Money, Money$inboundSchema, Money$Outbound, Money$outboundSchema } from "./money.js";
import {
    PrimaryNetworkAssetType,
    PrimaryNetworkAssetType$inboundSchema,
    PrimaryNetworkAssetType$outboundSchema,
} from "./primarynetworkassettype.js";
import * as z from "zod";

export type AssetWithPriceInfo = {
    /**
     * Unique ID for an asset.
     */
    assetId: string;
    /**
     * Name of this asset.
     */
    name: string;
    /**
     * Symbol for this asset (max 4 characters).
     */
    symbol: string;
    /**
     * Denomination of this asset to represent fungibility.
     */
    denomination: number;
    /**
     * Type of asset like SECP256K1 or NFT.
     */
    type: PrimaryNetworkAssetType;
    /**
     * Amount of the asset.
     */
    amount: string;
    /**
     * The historical asset price at the time the reward was granted, if available. Note, this is only provided if the reward occured more than 24 hours ago.
     */
    historicalPrice?: Money | undefined;
};

/** @internal */
export const AssetWithPriceInfo$inboundSchema: z.ZodType<
    AssetWithPriceInfo,
    z.ZodTypeDef,
    unknown
> = z.object({
    assetId: z.string(),
    name: z.string(),
    symbol: z.string(),
    denomination: z.number(),
    type: PrimaryNetworkAssetType$inboundSchema,
    amount: z.string(),
    historicalPrice: Money$inboundSchema.optional(),
});

/** @internal */
export type AssetWithPriceInfo$Outbound = {
    assetId: string;
    name: string;
    symbol: string;
    denomination: number;
    type: string;
    amount: string;
    historicalPrice?: Money$Outbound | undefined;
};

/** @internal */
export const AssetWithPriceInfo$outboundSchema: z.ZodType<
    AssetWithPriceInfo$Outbound,
    z.ZodTypeDef,
    AssetWithPriceInfo
> = z.object({
    assetId: z.string(),
    name: z.string(),
    symbol: z.string(),
    denomination: z.number(),
    type: PrimaryNetworkAssetType$outboundSchema,
    amount: z.string(),
    historicalPrice: Money$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssetWithPriceInfo$ {
    /** @deprecated use `AssetWithPriceInfo$inboundSchema` instead. */
    export const inboundSchema = AssetWithPriceInfo$inboundSchema;
    /** @deprecated use `AssetWithPriceInfo$outboundSchema` instead. */
    export const outboundSchema = AssetWithPriceInfo$outboundSchema;
    /** @deprecated use `AssetWithPriceInfo$Outbound` instead. */
    export type Outbound = AssetWithPriceInfo$Outbound;
}
