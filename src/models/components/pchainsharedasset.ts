/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  PrimaryNetworkAssetType,
  PrimaryNetworkAssetType$inboundSchema,
  PrimaryNetworkAssetType$outboundSchema,
} from "./primarynetworkassettype.js";

export type PChainSharedAsset = {
  /**
   * Unique ID for an asset.
   */
  assetId: string;
  /**
   * Name of this asset.
   */
  name: string;
  /**
   * Symbol for this asset (max 4 characters).
   */
  symbol: string;
  /**
   * Denomination of this asset to represent fungibility.
   */
  denomination: number;
  /**
   * Type of asset like SECP256K1 or NFT.
   */
  type: PrimaryNetworkAssetType;
  /**
   * Amount of the asset.
   */
  amount: string;
  utxoCount: number;
  sharedWithChainId: string;
  status: string;
};

/** @internal */
export const PChainSharedAsset$inboundSchema: z.ZodType<
  PChainSharedAsset,
  z.ZodTypeDef,
  unknown
> = z.object({
  assetId: z.string(),
  name: z.string(),
  symbol: z.string(),
  denomination: z.number(),
  type: PrimaryNetworkAssetType$inboundSchema,
  amount: z.string(),
  utxoCount: z.number(),
  sharedWithChainId: z.string(),
  status: z.string(),
});

/** @internal */
export type PChainSharedAsset$Outbound = {
  assetId: string;
  name: string;
  symbol: string;
  denomination: number;
  type: string;
  amount: string;
  utxoCount: number;
  sharedWithChainId: string;
  status: string;
};

/** @internal */
export const PChainSharedAsset$outboundSchema: z.ZodType<
  PChainSharedAsset$Outbound,
  z.ZodTypeDef,
  PChainSharedAsset
> = z.object({
  assetId: z.string(),
  name: z.string(),
  symbol: z.string(),
  denomination: z.number(),
  type: PrimaryNetworkAssetType$outboundSchema,
  amount: z.string(),
  utxoCount: z.number(),
  sharedWithChainId: z.string(),
  status: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PChainSharedAsset$ {
  /** @deprecated use `PChainSharedAsset$inboundSchema` instead. */
  export const inboundSchema = PChainSharedAsset$inboundSchema;
  /** @deprecated use `PChainSharedAsset$outboundSchema` instead. */
  export const outboundSchema = PChainSharedAsset$outboundSchema;
  /** @deprecated use `PChainSharedAsset$Outbound` instead. */
  export type Outbound = PChainSharedAsset$Outbound;
}
