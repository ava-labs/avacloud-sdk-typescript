/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ChainInformation = {
    subnetID: string;
    timestamp: number;
    blockchainID: string;
    vmID: string;
    chainName: string;
};

/** @internal */
export const ChainInformation$inboundSchema: z.ZodType<ChainInformation, z.ZodTypeDef, unknown> =
    z.object({
        subnetID: z.string(),
        timestamp: z.number(),
        blockchainID: z.string(),
        vmID: z.string(),
        chainName: z.string(),
    });

/** @internal */
export type ChainInformation$Outbound = {
    subnetID: string;
    timestamp: number;
    blockchainID: string;
    vmID: string;
    chainName: string;
};

/** @internal */
export const ChainInformation$outboundSchema: z.ZodType<
    ChainInformation$Outbound,
    z.ZodTypeDef,
    ChainInformation
> = z.object({
    subnetID: z.string(),
    timestamp: z.number(),
    blockchainID: z.string(),
    vmID: z.string(),
    chainName: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChainInformation$ {
    /** @deprecated use `ChainInformation$inboundSchema` instead. */
    export const inboundSchema = ChainInformation$inboundSchema;
    /** @deprecated use `ChainInformation$outboundSchema` instead. */
    export const outboundSchema = ChainInformation$outboundSchema;
    /** @deprecated use `ChainInformation$Outbound` instead. */
    export type Outbound = ChainInformation$Outbound;
}
