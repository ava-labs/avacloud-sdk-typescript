/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type SoVDetailsTransactionBlsCredentials = {};

export type SoVDetailsTransaction = {
  /**
   * Unique SoV ID used network-wide to identify subnet-only validation until its weight is reduced to 0 i.e. removed.
   */
  validationId: string;
  nodeId: string;
  subnetId: string;
  /**
   * Weight of the SoV used while sampling validators within the L1. A zero-weight SoV means it has been removed from the L1, and the validationID is no longer valid
   */
  weight: number;
  /**
   * Remaining SoV balance in nAVAX until inactive. It can rejoin subnet sampling by increasing balance with IncreaseBalanceTx
   */
  remainingBalance: number;
  /**
   * The increase in SoV balance in the current transaction. When the balance is returned after the SoV is disabled or removed, this value is negative
   */
  balanceChange?: number | undefined;
  blsCredentials?: SoVDetailsTransactionBlsCredentials | undefined;
};

/** @internal */
export const SoVDetailsTransactionBlsCredentials$inboundSchema: z.ZodType<
  SoVDetailsTransactionBlsCredentials,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type SoVDetailsTransactionBlsCredentials$Outbound = {};

/** @internal */
export const SoVDetailsTransactionBlsCredentials$outboundSchema: z.ZodType<
  SoVDetailsTransactionBlsCredentials$Outbound,
  z.ZodTypeDef,
  SoVDetailsTransactionBlsCredentials
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SoVDetailsTransactionBlsCredentials$ {
  /** @deprecated use `SoVDetailsTransactionBlsCredentials$inboundSchema` instead. */
  export const inboundSchema =
    SoVDetailsTransactionBlsCredentials$inboundSchema;
  /** @deprecated use `SoVDetailsTransactionBlsCredentials$outboundSchema` instead. */
  export const outboundSchema =
    SoVDetailsTransactionBlsCredentials$outboundSchema;
  /** @deprecated use `SoVDetailsTransactionBlsCredentials$Outbound` instead. */
  export type Outbound = SoVDetailsTransactionBlsCredentials$Outbound;
}

/** @internal */
export const SoVDetailsTransaction$inboundSchema: z.ZodType<
  SoVDetailsTransaction,
  z.ZodTypeDef,
  unknown
> = z.object({
  validationId: z.string(),
  nodeId: z.string(),
  subnetId: z.string(),
  weight: z.number(),
  remainingBalance: z.number(),
  balanceChange: z.number().optional(),
  blsCredentials: z.lazy(() =>
    SoVDetailsTransactionBlsCredentials$inboundSchema
  ).optional(),
});

/** @internal */
export type SoVDetailsTransaction$Outbound = {
  validationId: string;
  nodeId: string;
  subnetId: string;
  weight: number;
  remainingBalance: number;
  balanceChange?: number | undefined;
  blsCredentials?: SoVDetailsTransactionBlsCredentials$Outbound | undefined;
};

/** @internal */
export const SoVDetailsTransaction$outboundSchema: z.ZodType<
  SoVDetailsTransaction$Outbound,
  z.ZodTypeDef,
  SoVDetailsTransaction
> = z.object({
  validationId: z.string(),
  nodeId: z.string(),
  subnetId: z.string(),
  weight: z.number(),
  remainingBalance: z.number(),
  balanceChange: z.number().optional(),
  blsCredentials: z.lazy(() =>
    SoVDetailsTransactionBlsCredentials$outboundSchema
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SoVDetailsTransaction$ {
  /** @deprecated use `SoVDetailsTransaction$inboundSchema` instead. */
  export const inboundSchema = SoVDetailsTransaction$inboundSchema;
  /** @deprecated use `SoVDetailsTransaction$outboundSchema` instead. */
  export const outboundSchema = SoVDetailsTransaction$outboundSchema;
  /** @deprecated use `SoVDetailsTransaction$Outbound` instead. */
  export type Outbound = SoVDetailsTransaction$Outbound;
}
