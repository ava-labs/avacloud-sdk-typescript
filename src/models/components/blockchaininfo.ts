/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type BlockchainInfo = {
    blockchainId: string;
};

/** @internal */
export const BlockchainInfo$inboundSchema: z.ZodType<BlockchainInfo, z.ZodTypeDef, unknown> =
    z.object({
        blockchainId: z.string(),
    });

/** @internal */
export type BlockchainInfo$Outbound = {
    blockchainId: string;
};

/** @internal */
export const BlockchainInfo$outboundSchema: z.ZodType<
    BlockchainInfo$Outbound,
    z.ZodTypeDef,
    BlockchainInfo
> = z.object({
    blockchainId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BlockchainInfo$ {
    /** @deprecated use `BlockchainInfo$inboundSchema` instead. */
    export const inboundSchema = BlockchainInfo$inboundSchema;
    /** @deprecated use `BlockchainInfo$outboundSchema` instead. */
    export const outboundSchema = BlockchainInfo$outboundSchema;
    /** @deprecated use `BlockchainInfo$Outbound` instead. */
    export type Outbound = BlockchainInfo$Outbound;
}
