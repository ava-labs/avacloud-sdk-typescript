/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ValidatorActivityEventType,
  ValidatorActivityEventType$inboundSchema,
  ValidatorActivityEventType$outboundSchema,
} from "./validatoractivityeventtype.js";
import {
  ValidatorActivityMetadata,
  ValidatorActivityMetadata$inboundSchema,
  ValidatorActivityMetadata$Outbound,
  ValidatorActivityMetadata$outboundSchema,
} from "./validatoractivitymetadata.js";
import {
  WebhookStatusType,
  WebhookStatusType$inboundSchema,
  WebhookStatusType$outboundSchema,
} from "./webhookstatustype.js";

export type ValidatorActivityResponse = {
  id: string;
  url: string;
  chainId: string;
  status: WebhookStatusType;
  createdAt: number;
  name: string;
  description: string;
  eventType: ValidatorActivityEventType;
  metadata: ValidatorActivityMetadata;
};

/** @internal */
export const ValidatorActivityResponse$inboundSchema: z.ZodType<
  ValidatorActivityResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  url: z.string(),
  chainId: z.string(),
  status: WebhookStatusType$inboundSchema,
  createdAt: z.number(),
  name: z.string(),
  description: z.string(),
  eventType: ValidatorActivityEventType$inboundSchema,
  metadata: ValidatorActivityMetadata$inboundSchema,
});

/** @internal */
export type ValidatorActivityResponse$Outbound = {
  id: string;
  url: string;
  chainId: string;
  status: string;
  createdAt: number;
  name: string;
  description: string;
  eventType: string;
  metadata: ValidatorActivityMetadata$Outbound;
};

/** @internal */
export const ValidatorActivityResponse$outboundSchema: z.ZodType<
  ValidatorActivityResponse$Outbound,
  z.ZodTypeDef,
  ValidatorActivityResponse
> = z.object({
  id: z.string(),
  url: z.string(),
  chainId: z.string(),
  status: WebhookStatusType$outboundSchema,
  createdAt: z.number(),
  name: z.string(),
  description: z.string(),
  eventType: ValidatorActivityEventType$outboundSchema,
  metadata: ValidatorActivityMetadata$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ValidatorActivityResponse$ {
  /** @deprecated use `ValidatorActivityResponse$inboundSchema` instead. */
  export const inboundSchema = ValidatorActivityResponse$inboundSchema;
  /** @deprecated use `ValidatorActivityResponse$outboundSchema` instead. */
  export const outboundSchema = ValidatorActivityResponse$outboundSchema;
  /** @deprecated use `ValidatorActivityResponse$Outbound` instead. */
  export type Outbound = ValidatorActivityResponse$Outbound;
}

export function validatorActivityResponseToJSON(
  validatorActivityResponse: ValidatorActivityResponse,
): string {
  return JSON.stringify(
    ValidatorActivityResponse$outboundSchema.parse(validatorActivityResponse),
  );
}

export function validatorActivityResponseFromJSON(
  jsonString: string,
): SafeParseResult<ValidatorActivityResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ValidatorActivityResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ValidatorActivityResponse' from JSON`,
  );
}
