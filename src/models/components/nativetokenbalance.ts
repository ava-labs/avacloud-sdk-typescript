/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  Money,
  Money$inboundSchema,
  Money$Outbound,
  Money$outboundSchema,
} from "./money.js";

export type NativeTokenBalance = {
  /**
   * The contract name.
   */
  name: string;
  /**
   * The contract symbol.
   */
  symbol: string;
  /**
   * The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.
   */
  decimals: number;
  /**
   * The logo uri for the address.
   */
  logoUri?: string | undefined;
  /**
   * The evm chain id.
   */
  chainId: string;
  /**
   * The token price, if available.
   */
  price?: Money | undefined;
  /**
   * The address balance for the token, in units specified by the `decimals` value for the contract.
   */
  balance: string;
  /**
   * The monetary value of the balance, if a price is available for the token.
   */
  balanceValue?: Money | undefined;
};

/** @internal */
export const NativeTokenBalance$inboundSchema: z.ZodType<
  NativeTokenBalance,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  symbol: z.string(),
  decimals: z.number(),
  logoUri: z.string().optional(),
  chainId: z.string(),
  price: Money$inboundSchema.optional(),
  balance: z.string(),
  balanceValue: Money$inboundSchema.optional(),
});

/** @internal */
export type NativeTokenBalance$Outbound = {
  name: string;
  symbol: string;
  decimals: number;
  logoUri?: string | undefined;
  chainId: string;
  price?: Money$Outbound | undefined;
  balance: string;
  balanceValue?: Money$Outbound | undefined;
};

/** @internal */
export const NativeTokenBalance$outboundSchema: z.ZodType<
  NativeTokenBalance$Outbound,
  z.ZodTypeDef,
  NativeTokenBalance
> = z.object({
  name: z.string(),
  symbol: z.string(),
  decimals: z.number(),
  logoUri: z.string().optional(),
  chainId: z.string(),
  price: Money$outboundSchema.optional(),
  balance: z.string(),
  balanceValue: Money$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NativeTokenBalance$ {
  /** @deprecated use `NativeTokenBalance$inboundSchema` instead. */
  export const inboundSchema = NativeTokenBalance$inboundSchema;
  /** @deprecated use `NativeTokenBalance$outboundSchema` instead. */
  export const outboundSchema = NativeTokenBalance$outboundSchema;
  /** @deprecated use `NativeTokenBalance$Outbound` instead. */
  export type Outbound = NativeTokenBalance$Outbound;
}
