/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type TeleporterMetricsValue = {
  /**
   * Aggregated value for the current metrics.
   */
  value: number;
};

/** @internal */
export const TeleporterMetricsValue$inboundSchema: z.ZodType<
  TeleporterMetricsValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.number(),
});

/** @internal */
export type TeleporterMetricsValue$Outbound = {
  value: number;
};

/** @internal */
export const TeleporterMetricsValue$outboundSchema: z.ZodType<
  TeleporterMetricsValue$Outbound,
  z.ZodTypeDef,
  TeleporterMetricsValue
> = z.object({
  value: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TeleporterMetricsValue$ {
  /** @deprecated use `TeleporterMetricsValue$inboundSchema` instead. */
  export const inboundSchema = TeleporterMetricsValue$inboundSchema;
  /** @deprecated use `TeleporterMetricsValue$outboundSchema` instead. */
  export const outboundSchema = TeleporterMetricsValue$outboundSchema;
  /** @deprecated use `TeleporterMetricsValue$Outbound` instead. */
  export type Outbound = TeleporterMetricsValue$Outbound;
}

export function teleporterMetricsValueToJSON(
  teleporterMetricsValue: TeleporterMetricsValue,
): string {
  return JSON.stringify(
    TeleporterMetricsValue$outboundSchema.parse(teleporterMetricsValue),
  );
}

export function teleporterMetricsValueFromJSON(
  jsonString: string,
): SafeParseResult<TeleporterMetricsValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TeleporterMetricsValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TeleporterMetricsValue' from JSON`,
  );
}
