/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ImageAsset = {
  assetId?: string | undefined;
  /**
   * OUTPUT ONLY
   */
  imageUri?: string | undefined;
};

/** @internal */
export const ImageAsset$inboundSchema: z.ZodType<
  ImageAsset,
  z.ZodTypeDef,
  unknown
> = z.object({
  assetId: z.string().optional(),
  imageUri: z.string().optional(),
});

/** @internal */
export type ImageAsset$Outbound = {
  assetId?: string | undefined;
  imageUri?: string | undefined;
};

/** @internal */
export const ImageAsset$outboundSchema: z.ZodType<
  ImageAsset$Outbound,
  z.ZodTypeDef,
  ImageAsset
> = z.object({
  assetId: z.string().optional(),
  imageUri: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageAsset$ {
  /** @deprecated use `ImageAsset$inboundSchema` instead. */
  export const inboundSchema = ImageAsset$inboundSchema;
  /** @deprecated use `ImageAsset$outboundSchema` instead. */
  export const outboundSchema = ImageAsset$outboundSchema;
  /** @deprecated use `ImageAsset$Outbound` instead. */
  export type Outbound = ImageAsset$Outbound;
}

export function imageAssetToJSON(imageAsset: ImageAsset): string {
  return JSON.stringify(ImageAsset$outboundSchema.parse(imageAsset));
}

export function imageAssetFromJSON(
  jsonString: string,
): SafeParseResult<ImageAsset, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ImageAsset$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ImageAsset' from JSON`,
  );
}
