/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type BalanceOwner = {
  addresses: Array<string>;
  threshold: number;
};

/** @internal */
export const BalanceOwner$inboundSchema: z.ZodType<
  BalanceOwner,
  z.ZodTypeDef,
  unknown
> = z.object({
  addresses: z.array(z.string()),
  threshold: z.number(),
});

/** @internal */
export type BalanceOwner$Outbound = {
  addresses: Array<string>;
  threshold: number;
};

/** @internal */
export const BalanceOwner$outboundSchema: z.ZodType<
  BalanceOwner$Outbound,
  z.ZodTypeDef,
  BalanceOwner
> = z.object({
  addresses: z.array(z.string()),
  threshold: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BalanceOwner$ {
  /** @deprecated use `BalanceOwner$inboundSchema` instead. */
  export const inboundSchema = BalanceOwner$inboundSchema;
  /** @deprecated use `BalanceOwner$outboundSchema` instead. */
  export const outboundSchema = BalanceOwner$outboundSchema;
  /** @deprecated use `BalanceOwner$Outbound` instead. */
  export type Outbound = BalanceOwner$Outbound;
}
