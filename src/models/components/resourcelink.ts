/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ResourceLinkType,
  ResourceLinkType$inboundSchema,
  ResourceLinkType$outboundSchema,
} from "./resourcelinktype.js";

export type ResourceLink = {
  type: ResourceLinkType;
  url: string;
};

/** @internal */
export const ResourceLink$inboundSchema: z.ZodType<
  ResourceLink,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ResourceLinkType$inboundSchema,
  url: z.string(),
});

/** @internal */
export type ResourceLink$Outbound = {
  type: string;
  url: string;
};

/** @internal */
export const ResourceLink$outboundSchema: z.ZodType<
  ResourceLink$Outbound,
  z.ZodTypeDef,
  ResourceLink
> = z.object({
  type: ResourceLinkType$outboundSchema,
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResourceLink$ {
  /** @deprecated use `ResourceLink$inboundSchema` instead. */
  export const inboundSchema = ResourceLink$inboundSchema;
  /** @deprecated use `ResourceLink$outboundSchema` instead. */
  export const outboundSchema = ResourceLink$outboundSchema;
  /** @deprecated use `ResourceLink$Outbound` instead. */
  export type Outbound = ResourceLink$Outbound;
}

export function resourceLinkToJSON(resourceLink: ResourceLink): string {
  return JSON.stringify(ResourceLink$outboundSchema.parse(resourceLink));
}

export function resourceLinkFromJSON(
  jsonString: string,
): SafeParseResult<ResourceLink, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResourceLink$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResourceLink' from JSON`,
  );
}
