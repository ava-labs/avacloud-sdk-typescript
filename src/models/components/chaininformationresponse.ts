/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    ChainInformation,
    ChainInformation$inboundSchema,
    ChainInformation$Outbound,
    ChainInformation$outboundSchema,
} from "./chaininformation.js";
import * as z from "zod";

export type ChainInformationResponse = {
    nextPageStartKey?: string | undefined;
    lastRun?: number | undefined;
    status: number;
    results: Array<ChainInformation>;
};

/** @internal */
export const ChainInformationResponse$inboundSchema: z.ZodType<
    ChainInformationResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    nextPageStartKey: z.string().optional(),
    lastRun: z.number().optional(),
    status: z.number(),
    results: z.array(ChainInformation$inboundSchema),
});

/** @internal */
export type ChainInformationResponse$Outbound = {
    nextPageStartKey?: string | undefined;
    lastRun?: number | undefined;
    status: number;
    results: Array<ChainInformation$Outbound>;
};

/** @internal */
export const ChainInformationResponse$outboundSchema: z.ZodType<
    ChainInformationResponse$Outbound,
    z.ZodTypeDef,
    ChainInformationResponse
> = z.object({
    nextPageStartKey: z.string().optional(),
    lastRun: z.number().optional(),
    status: z.number(),
    results: z.array(ChainInformation$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChainInformationResponse$ {
    /** @deprecated use `ChainInformationResponse$inboundSchema` instead. */
    export const inboundSchema = ChainInformationResponse$inboundSchema;
    /** @deprecated use `ChainInformationResponse$outboundSchema` instead. */
    export const outboundSchema = ChainInformationResponse$outboundSchema;
    /** @deprecated use `ChainInformationResponse$Outbound` instead. */
    export type Outbound = ChainInformationResponse$Outbound;
}
