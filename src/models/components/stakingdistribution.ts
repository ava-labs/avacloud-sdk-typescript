/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type StakingDistribution = {
    version: string;
    amountStaked: string;
    validatorCount: number;
};

/** @internal */
export const StakingDistribution$inboundSchema: z.ZodType<
    StakingDistribution,
    z.ZodTypeDef,
    unknown
> = z.object({
    version: z.string(),
    amountStaked: z.string(),
    validatorCount: z.number(),
});

/** @internal */
export type StakingDistribution$Outbound = {
    version: string;
    amountStaked: string;
    validatorCount: number;
};

/** @internal */
export const StakingDistribution$outboundSchema: z.ZodType<
    StakingDistribution$Outbound,
    z.ZodTypeDef,
    StakingDistribution
> = z.object({
    version: z.string(),
    amountStaked: z.string(),
    validatorCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StakingDistribution$ {
    /** @deprecated use `StakingDistribution$inboundSchema` instead. */
    export const inboundSchema = StakingDistribution$inboundSchema;
    /** @deprecated use `StakingDistribution$outboundSchema` instead. */
    export const outboundSchema = StakingDistribution$outboundSchema;
    /** @deprecated use `StakingDistribution$Outbound` instead. */
    export type Outbound = StakingDistribution$Outbound;
}
