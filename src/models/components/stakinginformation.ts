/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type StakingInformation = {
    value: number;
    timestamp: number;
    subnetID: string;
};

/** @internal */
export const StakingInformation$inboundSchema: z.ZodType<
    StakingInformation,
    z.ZodTypeDef,
    unknown
> = z.object({
    value: z.number(),
    timestamp: z.number(),
    subnetID: z.string(),
});

/** @internal */
export type StakingInformation$Outbound = {
    value: number;
    timestamp: number;
    subnetID: string;
};

/** @internal */
export const StakingInformation$outboundSchema: z.ZodType<
    StakingInformation$Outbound,
    z.ZodTypeDef,
    StakingInformation
> = z.object({
    value: z.number(),
    timestamp: z.number(),
    subnetID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StakingInformation$ {
    /** @deprecated use `StakingInformation$inboundSchema` instead. */
    export const inboundSchema = StakingInformation$inboundSchema;
    /** @deprecated use `StakingInformation$outboundSchema` instead. */
    export const outboundSchema = StakingInformation$outboundSchema;
    /** @deprecated use `StakingInformation$Outbound` instead. */
    export type Outbound = StakingInformation$Outbound;
}
