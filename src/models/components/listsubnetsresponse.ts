/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { Subnet, Subnet$inboundSchema, Subnet$Outbound, Subnet$outboundSchema } from "./subnet.js";
import * as z from "zod";

export type ListSubnetsResponse = {
    /**
     * A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages.
     */
    nextPageToken?: string | undefined;
    subnets: Array<Subnet>;
};

/** @internal */
export const ListSubnetsResponse$inboundSchema: z.ZodType<
    ListSubnetsResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    nextPageToken: z.string().optional(),
    subnets: z.array(Subnet$inboundSchema),
});

/** @internal */
export type ListSubnetsResponse$Outbound = {
    nextPageToken?: string | undefined;
    subnets: Array<Subnet$Outbound>;
};

/** @internal */
export const ListSubnetsResponse$outboundSchema: z.ZodType<
    ListSubnetsResponse$Outbound,
    z.ZodTypeDef,
    ListSubnetsResponse
> = z.object({
    nextPageToken: z.string().optional(),
    subnets: z.array(Subnet$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListSubnetsResponse$ {
    /** @deprecated use `ListSubnetsResponse$inboundSchema` instead. */
    export const inboundSchema = ListSubnetsResponse$inboundSchema;
    /** @deprecated use `ListSubnetsResponse$outboundSchema` instead. */
    export const outboundSchema = ListSubnetsResponse$outboundSchema;
    /** @deprecated use `ListSubnetsResponse$Outbound` instead. */
    export type Outbound = ListSubnetsResponse$Outbound;
}
