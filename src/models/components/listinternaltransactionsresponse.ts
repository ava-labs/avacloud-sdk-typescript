/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  InternalTransaction,
  InternalTransaction$inboundSchema,
  InternalTransaction$Outbound,
  InternalTransaction$outboundSchema,
} from "./internaltransaction.js";

export type ListInternalTransactionsResponse = {
  /**
   * A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages.
   */
  nextPageToken?: string | undefined;
  transactions: Array<InternalTransaction>;
};

/** @internal */
export const ListInternalTransactionsResponse$inboundSchema: z.ZodType<
  ListInternalTransactionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  nextPageToken: z.string().optional(),
  transactions: z.array(InternalTransaction$inboundSchema),
});

/** @internal */
export type ListInternalTransactionsResponse$Outbound = {
  nextPageToken?: string | undefined;
  transactions: Array<InternalTransaction$Outbound>;
};

/** @internal */
export const ListInternalTransactionsResponse$outboundSchema: z.ZodType<
  ListInternalTransactionsResponse$Outbound,
  z.ZodTypeDef,
  ListInternalTransactionsResponse
> = z.object({
  nextPageToken: z.string().optional(),
  transactions: z.array(InternalTransaction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListInternalTransactionsResponse$ {
  /** @deprecated use `ListInternalTransactionsResponse$inboundSchema` instead. */
  export const inboundSchema = ListInternalTransactionsResponse$inboundSchema;
  /** @deprecated use `ListInternalTransactionsResponse$outboundSchema` instead. */
  export const outboundSchema = ListInternalTransactionsResponse$outboundSchema;
  /** @deprecated use `ListInternalTransactionsResponse$Outbound` instead. */
  export type Outbound = ListInternalTransactionsResponse$Outbound;
}
