/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DateRangeStarsArenaMinBalanceParam = {
  firstDate: string;
  lastDate: string;
  minBalance: string;
  subjectAddress: string;
};

/** @internal */
export const DateRangeStarsArenaMinBalanceParam$inboundSchema: z.ZodType<
  DateRangeStarsArenaMinBalanceParam,
  z.ZodTypeDef,
  unknown
> = z.object({
  firstDate: z.string(),
  lastDate: z.string(),
  minBalance: z.string(),
  subjectAddress: z.string(),
});

/** @internal */
export type DateRangeStarsArenaMinBalanceParam$Outbound = {
  firstDate: string;
  lastDate: string;
  minBalance: string;
  subjectAddress: string;
};

/** @internal */
export const DateRangeStarsArenaMinBalanceParam$outboundSchema: z.ZodType<
  DateRangeStarsArenaMinBalanceParam$Outbound,
  z.ZodTypeDef,
  DateRangeStarsArenaMinBalanceParam
> = z.object({
  firstDate: z.string(),
  lastDate: z.string(),
  minBalance: z.string(),
  subjectAddress: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DateRangeStarsArenaMinBalanceParam$ {
  /** @deprecated use `DateRangeStarsArenaMinBalanceParam$inboundSchema` instead. */
  export const inboundSchema = DateRangeStarsArenaMinBalanceParam$inboundSchema;
  /** @deprecated use `DateRangeStarsArenaMinBalanceParam$outboundSchema` instead. */
  export const outboundSchema =
    DateRangeStarsArenaMinBalanceParam$outboundSchema;
  /** @deprecated use `DateRangeStarsArenaMinBalanceParam$Outbound` instead. */
  export type Outbound = DateRangeStarsArenaMinBalanceParam$Outbound;
}

export function dateRangeStarsArenaMinBalanceParamToJSON(
  dateRangeStarsArenaMinBalanceParam: DateRangeStarsArenaMinBalanceParam,
): string {
  return JSON.stringify(
    DateRangeStarsArenaMinBalanceParam$outboundSchema.parse(
      dateRangeStarsArenaMinBalanceParam,
    ),
  );
}

export function dateRangeStarsArenaMinBalanceParamFromJSON(
  jsonString: string,
): SafeParseResult<DateRangeStarsArenaMinBalanceParam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DateRangeStarsArenaMinBalanceParam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DateRangeStarsArenaMinBalanceParam' from JSON`,
  );
}
