/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    Erc721Transfer,
    Erc721Transfer$inboundSchema,
    Erc721Transfer$Outbound,
    Erc721Transfer$outboundSchema,
} from "./erc721transfer.js";
import * as z from "zod";

export type ListErc721TransactionsResponse = {
    /**
     * A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages.
     */
    nextPageToken?: string | undefined;
    transactions: Array<Erc721Transfer>;
};

/** @internal */
export const ListErc721TransactionsResponse$inboundSchema: z.ZodType<
    ListErc721TransactionsResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    nextPageToken: z.string().optional(),
    transactions: z.array(Erc721Transfer$inboundSchema),
});

/** @internal */
export type ListErc721TransactionsResponse$Outbound = {
    nextPageToken?: string | undefined;
    transactions: Array<Erc721Transfer$Outbound>;
};

/** @internal */
export const ListErc721TransactionsResponse$outboundSchema: z.ZodType<
    ListErc721TransactionsResponse$Outbound,
    z.ZodTypeDef,
    ListErc721TransactionsResponse
> = z.object({
    nextPageToken: z.string().optional(),
    transactions: z.array(Erc721Transfer$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListErc721TransactionsResponse$ {
    /** @deprecated use `ListErc721TransactionsResponse$inboundSchema` instead. */
    export const inboundSchema = ListErc721TransactionsResponse$inboundSchema;
    /** @deprecated use `ListErc721TransactionsResponse$outboundSchema` instead. */
    export const outboundSchema = ListErc721TransactionsResponse$outboundSchema;
    /** @deprecated use `ListErc721TransactionsResponse$Outbound` instead. */
    export type Outbound = ListErc721TransactionsResponse$Outbound;
}
