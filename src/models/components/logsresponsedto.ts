/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    LogsFormat,
    LogsFormat$inboundSchema,
    LogsFormat$Outbound,
    LogsFormat$outboundSchema,
} from "./logsformat.js";
import * as z from "zod";

export type LogsResponseDTO = {
    /**
     * A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages.
     */
    nextPageToken?: string | undefined;
    /**
     * The organization id of the request.
     */
    orgId: string;
    /**
     * An array of logs representing the requests made by clients.
     */
    logs: Array<LogsFormat>;
};

/** @internal */
export const LogsResponseDTO$inboundSchema: z.ZodType<LogsResponseDTO, z.ZodTypeDef, unknown> =
    z.object({
        nextPageToken: z.string().optional(),
        orgId: z.string(),
        logs: z.array(LogsFormat$inboundSchema),
    });

/** @internal */
export type LogsResponseDTO$Outbound = {
    nextPageToken?: string | undefined;
    orgId: string;
    logs: Array<LogsFormat$Outbound>;
};

/** @internal */
export const LogsResponseDTO$outboundSchema: z.ZodType<
    LogsResponseDTO$Outbound,
    z.ZodTypeDef,
    LogsResponseDTO
> = z.object({
    nextPageToken: z.string().optional(),
    orgId: z.string(),
    logs: z.array(LogsFormat$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LogsResponseDTO$ {
    /** @deprecated use `LogsResponseDTO$inboundSchema` instead. */
    export const inboundSchema = LogsResponseDTO$inboundSchema;
    /** @deprecated use `LogsResponseDTO$outboundSchema` instead. */
    export const outboundSchema = LogsResponseDTO$outboundSchema;
    /** @deprecated use `LogsResponseDTO$Outbound` instead. */
    export type Outbound = LogsResponseDTO$Outbound;
}
