/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Status of the health indicator.
 */
export const HealthIndicatorResultDtoStatus = {
  Up: "up",
  Down: "down",
} as const;
/**
 * Status of the health indicator.
 */
export type HealthIndicatorResultDtoStatus = ClosedEnum<
  typeof HealthIndicatorResultDtoStatus
>;

export type HealthIndicatorResultDto = {
  /**
   * Status of the health indicator.
   */
  status?: HealthIndicatorResultDtoStatus | undefined;
};

/** @internal */
export const HealthIndicatorResultDtoStatus$inboundSchema: z.ZodNativeEnum<
  typeof HealthIndicatorResultDtoStatus
> = z.nativeEnum(HealthIndicatorResultDtoStatus);

/** @internal */
export const HealthIndicatorResultDtoStatus$outboundSchema: z.ZodNativeEnum<
  typeof HealthIndicatorResultDtoStatus
> = HealthIndicatorResultDtoStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HealthIndicatorResultDtoStatus$ {
  /** @deprecated use `HealthIndicatorResultDtoStatus$inboundSchema` instead. */
  export const inboundSchema = HealthIndicatorResultDtoStatus$inboundSchema;
  /** @deprecated use `HealthIndicatorResultDtoStatus$outboundSchema` instead. */
  export const outboundSchema = HealthIndicatorResultDtoStatus$outboundSchema;
}

/** @internal */
export const HealthIndicatorResultDto$inboundSchema: z.ZodType<
  HealthIndicatorResultDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: HealthIndicatorResultDtoStatus$inboundSchema.optional(),
});

/** @internal */
export type HealthIndicatorResultDto$Outbound = {
  status?: string | undefined;
};

/** @internal */
export const HealthIndicatorResultDto$outboundSchema: z.ZodType<
  HealthIndicatorResultDto$Outbound,
  z.ZodTypeDef,
  HealthIndicatorResultDto
> = z.object({
  status: HealthIndicatorResultDtoStatus$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HealthIndicatorResultDto$ {
  /** @deprecated use `HealthIndicatorResultDto$inboundSchema` instead. */
  export const inboundSchema = HealthIndicatorResultDto$inboundSchema;
  /** @deprecated use `HealthIndicatorResultDto$outboundSchema` instead. */
  export const outboundSchema = HealthIndicatorResultDto$outboundSchema;
  /** @deprecated use `HealthIndicatorResultDto$Outbound` instead. */
  export type Outbound = HealthIndicatorResultDto$Outbound;
}

export function healthIndicatorResultDtoToJSON(
  healthIndicatorResultDto: HealthIndicatorResultDto,
): string {
  return JSON.stringify(
    HealthIndicatorResultDto$outboundSchema.parse(healthIndicatorResultDto),
  );
}

export function healthIndicatorResultDtoFromJSON(
  jsonString: string,
): SafeParseResult<HealthIndicatorResultDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HealthIndicatorResultDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HealthIndicatorResultDto' from JSON`,
  );
}
