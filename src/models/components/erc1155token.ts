/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  Erc1155TokenMetadata,
  Erc1155TokenMetadata$inboundSchema,
  Erc1155TokenMetadata$Outbound,
  Erc1155TokenMetadata$outboundSchema,
} from "./erc1155tokenmetadata.js";

export const Erc1155TokenErcType = {
  Erc1155: "ERC-1155",
} as const;
export type Erc1155TokenErcType = ClosedEnum<typeof Erc1155TokenErcType>;

export type Erc1155Token = {
  /**
   * A wallet or contract address in mixed-case checksum encoding.
   */
  address: string;
  ercType: Erc1155TokenErcType;
  tokenId: string;
  tokenUri: string;
  metadata: Erc1155TokenMetadata;
};

/** @internal */
export const Erc1155TokenErcType$inboundSchema: z.ZodNativeEnum<
  typeof Erc1155TokenErcType
> = z.nativeEnum(Erc1155TokenErcType);

/** @internal */
export const Erc1155TokenErcType$outboundSchema: z.ZodNativeEnum<
  typeof Erc1155TokenErcType
> = Erc1155TokenErcType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Erc1155TokenErcType$ {
  /** @deprecated use `Erc1155TokenErcType$inboundSchema` instead. */
  export const inboundSchema = Erc1155TokenErcType$inboundSchema;
  /** @deprecated use `Erc1155TokenErcType$outboundSchema` instead. */
  export const outboundSchema = Erc1155TokenErcType$outboundSchema;
}

/** @internal */
export const Erc1155Token$inboundSchema: z.ZodType<
  Erc1155Token,
  z.ZodTypeDef,
  unknown
> = z.object({
  address: z.string(),
  ercType: Erc1155TokenErcType$inboundSchema,
  tokenId: z.string(),
  tokenUri: z.string(),
  metadata: Erc1155TokenMetadata$inboundSchema,
});

/** @internal */
export type Erc1155Token$Outbound = {
  address: string;
  ercType: string;
  tokenId: string;
  tokenUri: string;
  metadata: Erc1155TokenMetadata$Outbound;
};

/** @internal */
export const Erc1155Token$outboundSchema: z.ZodType<
  Erc1155Token$Outbound,
  z.ZodTypeDef,
  Erc1155Token
> = z.object({
  address: z.string(),
  ercType: Erc1155TokenErcType$outboundSchema,
  tokenId: z.string(),
  tokenUri: z.string(),
  metadata: Erc1155TokenMetadata$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Erc1155Token$ {
  /** @deprecated use `Erc1155Token$inboundSchema` instead. */
  export const inboundSchema = Erc1155Token$inboundSchema;
  /** @deprecated use `Erc1155Token$outboundSchema` instead. */
  export const outboundSchema = Erc1155Token$outboundSchema;
  /** @deprecated use `Erc1155Token$Outbound` instead. */
  export type Outbound = Erc1155Token$Outbound;
}
