/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    MetricsValue,
    MetricsValue$inboundSchema,
    MetricsValue$Outbound,
    MetricsValue$outboundSchema,
} from "./metricsvalue.js";
import * as z from "zod";

export type MetricsApiResponse = {
    /**
     * A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages.
     */
    nextPageToken?: string | undefined;
    /**
     * Array of current metrics values at different timestamps.
     */
    results: Array<MetricsValue>;
};

/** @internal */
export const MetricsApiResponse$inboundSchema: z.ZodType<
    MetricsApiResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    nextPageToken: z.string().optional(),
    results: z.array(MetricsValue$inboundSchema),
});

/** @internal */
export type MetricsApiResponse$Outbound = {
    nextPageToken?: string | undefined;
    results: Array<MetricsValue$Outbound>;
};

/** @internal */
export const MetricsApiResponse$outboundSchema: z.ZodType<
    MetricsApiResponse$Outbound,
    z.ZodTypeDef,
    MetricsApiResponse
> = z.object({
    nextPageToken: z.string().optional(),
    results: z.array(MetricsValue$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MetricsApiResponse$ {
    /** @deprecated use `MetricsApiResponse$inboundSchema` instead. */
    export const inboundSchema = MetricsApiResponse$inboundSchema;
    /** @deprecated use `MetricsApiResponse$outboundSchema` instead. */
    export const outboundSchema = MetricsApiResponse$outboundSchema;
    /** @deprecated use `MetricsApiResponse$Outbound` instead. */
    export type Outbound = MetricsApiResponse$Outbound;
}
