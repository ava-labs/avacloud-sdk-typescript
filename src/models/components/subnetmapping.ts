/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type SubnetMapping = {
    chainID: number;
    subnetID: string;
    timestamp: number;
    network: string;
};

/** @internal */
export const SubnetMapping$inboundSchema: z.ZodType<SubnetMapping, z.ZodTypeDef, unknown> =
    z.object({
        chainID: z.number(),
        subnetID: z.string(),
        timestamp: z.number(),
        network: z.string(),
    });

/** @internal */
export type SubnetMapping$Outbound = {
    chainID: number;
    subnetID: string;
    timestamp: number;
    network: string;
};

/** @internal */
export const SubnetMapping$outboundSchema: z.ZodType<
    SubnetMapping$Outbound,
    z.ZodTypeDef,
    SubnetMapping
> = z.object({
    chainID: z.number(),
    subnetID: z.string(),
    timestamp: z.number(),
    network: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SubnetMapping$ {
    /** @deprecated use `SubnetMapping$inboundSchema` instead. */
    export const inboundSchema = SubnetMapping$inboundSchema;
    /** @deprecated use `SubnetMapping$outboundSchema` instead. */
    export const outboundSchema = SubnetMapping$outboundSchema;
    /** @deprecated use `SubnetMapping$Outbound` instead. */
    export type Outbound = SubnetMapping$Outbound;
}
