/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  SovDetailsFull,
  SovDetailsFull$inboundSchema,
  SovDetailsFull$Outbound,
  SovDetailsFull$outboundSchema,
} from "./sovdetailsfull.js";

export type ListSubnetOnlyValidatorsResponse = {
  /**
   * A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages.
   */
  nextPageToken?: string | undefined;
  /**
   * The list of L1 validations for the given Subnet ID, NodeId or validationId
   */
  validators: Array<SovDetailsFull>;
};

/** @internal */
export const ListSubnetOnlyValidatorsResponse$inboundSchema: z.ZodType<
  ListSubnetOnlyValidatorsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  nextPageToken: z.string().optional(),
  validators: z.array(SovDetailsFull$inboundSchema),
});

/** @internal */
export type ListSubnetOnlyValidatorsResponse$Outbound = {
  nextPageToken?: string | undefined;
  validators: Array<SovDetailsFull$Outbound>;
};

/** @internal */
export const ListSubnetOnlyValidatorsResponse$outboundSchema: z.ZodType<
  ListSubnetOnlyValidatorsResponse$Outbound,
  z.ZodTypeDef,
  ListSubnetOnlyValidatorsResponse
> = z.object({
  nextPageToken: z.string().optional(),
  validators: z.array(SovDetailsFull$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListSubnetOnlyValidatorsResponse$ {
  /** @deprecated use `ListSubnetOnlyValidatorsResponse$inboundSchema` instead. */
  export const inboundSchema = ListSubnetOnlyValidatorsResponse$inboundSchema;
  /** @deprecated use `ListSubnetOnlyValidatorsResponse$outboundSchema` instead. */
  export const outboundSchema = ListSubnetOnlyValidatorsResponse$outboundSchema;
  /** @deprecated use `ListSubnetOnlyValidatorsResponse$Outbound` instead. */
  export type Outbound = ListSubnetOnlyValidatorsResponse$Outbound;
}
