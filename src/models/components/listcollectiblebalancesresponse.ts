/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    Erc1155TokenBalance,
    Erc1155TokenBalance$inboundSchema,
    Erc1155TokenBalance$Outbound,
    Erc1155TokenBalance$outboundSchema,
} from "./erc1155tokenbalance.js";
import {
    Erc721TokenBalance,
    Erc721TokenBalance$inboundSchema,
    Erc721TokenBalance$Outbound,
    Erc721TokenBalance$outboundSchema,
} from "./erc721tokenbalance.js";
import * as z from "zod";

export type CollectibleBalances = Erc1155TokenBalance | Erc721TokenBalance;

export type ListCollectibleBalancesResponse = {
    /**
     * A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages.
     */
    nextPageToken?: string | undefined;
    /**
     * The list of ERC-721 and ERC-1155 token balances for the address.
     */
    collectibleBalances: Array<Erc1155TokenBalance | Erc721TokenBalance>;
};

/** @internal */
export const CollectibleBalances$inboundSchema: z.ZodType<
    CollectibleBalances,
    z.ZodTypeDef,
    unknown
> = z.union([Erc1155TokenBalance$inboundSchema, Erc721TokenBalance$inboundSchema]);

/** @internal */
export type CollectibleBalances$Outbound =
    | Erc1155TokenBalance$Outbound
    | Erc721TokenBalance$Outbound;

/** @internal */
export const CollectibleBalances$outboundSchema: z.ZodType<
    CollectibleBalances$Outbound,
    z.ZodTypeDef,
    CollectibleBalances
> = z.union([Erc1155TokenBalance$outboundSchema, Erc721TokenBalance$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CollectibleBalances$ {
    /** @deprecated use `CollectibleBalances$inboundSchema` instead. */
    export const inboundSchema = CollectibleBalances$inboundSchema;
    /** @deprecated use `CollectibleBalances$outboundSchema` instead. */
    export const outboundSchema = CollectibleBalances$outboundSchema;
    /** @deprecated use `CollectibleBalances$Outbound` instead. */
    export type Outbound = CollectibleBalances$Outbound;
}

/** @internal */
export const ListCollectibleBalancesResponse$inboundSchema: z.ZodType<
    ListCollectibleBalancesResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    nextPageToken: z.string().optional(),
    collectibleBalances: z.array(
        z.union([Erc1155TokenBalance$inboundSchema, Erc721TokenBalance$inboundSchema])
    ),
});

/** @internal */
export type ListCollectibleBalancesResponse$Outbound = {
    nextPageToken?: string | undefined;
    collectibleBalances: Array<Erc1155TokenBalance$Outbound | Erc721TokenBalance$Outbound>;
};

/** @internal */
export const ListCollectibleBalancesResponse$outboundSchema: z.ZodType<
    ListCollectibleBalancesResponse$Outbound,
    z.ZodTypeDef,
    ListCollectibleBalancesResponse
> = z.object({
    nextPageToken: z.string().optional(),
    collectibleBalances: z.array(
        z.union([Erc1155TokenBalance$outboundSchema, Erc721TokenBalance$outboundSchema])
    ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCollectibleBalancesResponse$ {
    /** @deprecated use `ListCollectibleBalancesResponse$inboundSchema` instead. */
    export const inboundSchema = ListCollectibleBalancesResponse$inboundSchema;
    /** @deprecated use `ListCollectibleBalancesResponse$outboundSchema` instead. */
    export const outboundSchema = ListCollectibleBalancesResponse$outboundSchema;
    /** @deprecated use `ListCollectibleBalancesResponse$Outbound` instead. */
    export type Outbound = ListCollectibleBalancesResponse$Outbound;
}
