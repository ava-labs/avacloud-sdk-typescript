/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type UtilityAddresses = {
  multicall?: string | undefined;
};

/** @internal */
export const UtilityAddresses$inboundSchema: z.ZodType<
  UtilityAddresses,
  z.ZodTypeDef,
  unknown
> = z.object({
  multicall: z.string().optional(),
});

/** @internal */
export type UtilityAddresses$Outbound = {
  multicall?: string | undefined;
};

/** @internal */
export const UtilityAddresses$outboundSchema: z.ZodType<
  UtilityAddresses$Outbound,
  z.ZodTypeDef,
  UtilityAddresses
> = z.object({
  multicall: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UtilityAddresses$ {
  /** @deprecated use `UtilityAddresses$inboundSchema` instead. */
  export const inboundSchema = UtilityAddresses$inboundSchema;
  /** @deprecated use `UtilityAddresses$outboundSchema` instead. */
  export const outboundSchema = UtilityAddresses$outboundSchema;
  /** @deprecated use `UtilityAddresses$Outbound` instead. */
  export type Outbound = UtilityAddresses$Outbound;
}
