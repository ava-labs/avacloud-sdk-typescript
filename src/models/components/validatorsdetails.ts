/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    StakingDistribution,
    StakingDistribution$inboundSchema,
    StakingDistribution$Outbound,
    StakingDistribution$outboundSchema,
} from "./stakingdistribution.js";
import * as z from "zod";

export type ValidatorsDetails = {
    validatorCount: number;
    totalAmountStaked: string;
    estimatedAnnualStakingReward: string;
    stakingDistributionByVersion: Array<StakingDistribution>;
    stakingRatio: string;
};

/** @internal */
export const ValidatorsDetails$inboundSchema: z.ZodType<ValidatorsDetails, z.ZodTypeDef, unknown> =
    z.object({
        validatorCount: z.number(),
        totalAmountStaked: z.string(),
        estimatedAnnualStakingReward: z.string(),
        stakingDistributionByVersion: z.array(StakingDistribution$inboundSchema),
        stakingRatio: z.string(),
    });

/** @internal */
export type ValidatorsDetails$Outbound = {
    validatorCount: number;
    totalAmountStaked: string;
    estimatedAnnualStakingReward: string;
    stakingDistributionByVersion: Array<StakingDistribution$Outbound>;
    stakingRatio: string;
};

/** @internal */
export const ValidatorsDetails$outboundSchema: z.ZodType<
    ValidatorsDetails$Outbound,
    z.ZodTypeDef,
    ValidatorsDetails
> = z.object({
    validatorCount: z.number(),
    totalAmountStaked: z.string(),
    estimatedAnnualStakingReward: z.string(),
    stakingDistributionByVersion: z.array(StakingDistribution$outboundSchema),
    stakingRatio: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ValidatorsDetails$ {
    /** @deprecated use `ValidatorsDetails$inboundSchema` instead. */
    export const inboundSchema = ValidatorsDetails$inboundSchema;
    /** @deprecated use `ValidatorsDetails$outboundSchema` instead. */
    export const outboundSchema = ValidatorsDetails$outboundSchema;
    /** @deprecated use `ValidatorsDetails$Outbound` instead. */
    export type Outbound = ValidatorsDetails$Outbound;
}
