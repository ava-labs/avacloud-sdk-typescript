/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PChainBalance,
  PChainBalance$inboundSchema,
  PChainBalance$Outbound,
  PChainBalance$outboundSchema,
} from "./pchainbalance.js";
import {
  PrimaryNetworkChainInfo,
  PrimaryNetworkChainInfo$inboundSchema,
  PrimaryNetworkChainInfo$Outbound,
  PrimaryNetworkChainInfo$outboundSchema,
} from "./primarynetworkchaininfo.js";

export type ListPChainBalancesResponse = {
  balances: PChainBalance;
  chainInfo: PrimaryNetworkChainInfo;
};

/** @internal */
export const ListPChainBalancesResponse$inboundSchema: z.ZodType<
  ListPChainBalancesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  balances: PChainBalance$inboundSchema,
  chainInfo: PrimaryNetworkChainInfo$inboundSchema,
});

/** @internal */
export type ListPChainBalancesResponse$Outbound = {
  balances: PChainBalance$Outbound;
  chainInfo: PrimaryNetworkChainInfo$Outbound;
};

/** @internal */
export const ListPChainBalancesResponse$outboundSchema: z.ZodType<
  ListPChainBalancesResponse$Outbound,
  z.ZodTypeDef,
  ListPChainBalancesResponse
> = z.object({
  balances: PChainBalance$outboundSchema,
  chainInfo: PrimaryNetworkChainInfo$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPChainBalancesResponse$ {
  /** @deprecated use `ListPChainBalancesResponse$inboundSchema` instead. */
  export const inboundSchema = ListPChainBalancesResponse$inboundSchema;
  /** @deprecated use `ListPChainBalancesResponse$outboundSchema` instead. */
  export const outboundSchema = ListPChainBalancesResponse$outboundSchema;
  /** @deprecated use `ListPChainBalancesResponse$Outbound` instead. */
  export type Outbound = ListPChainBalancesResponse$Outbound;
}

export function listPChainBalancesResponseToJSON(
  listPChainBalancesResponse: ListPChainBalancesResponse,
): string {
  return JSON.stringify(
    ListPChainBalancesResponse$outboundSchema.parse(listPChainBalancesResponse),
  );
}

export function listPChainBalancesResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListPChainBalancesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListPChainBalancesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListPChainBalancesResponse' from JSON`,
  );
}
