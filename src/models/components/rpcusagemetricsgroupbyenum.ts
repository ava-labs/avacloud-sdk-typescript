/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const RpcUsageMetricsGroupByEnum = {
  RpcMethod: "rpcMethod",
  ResponseCode: "responseCode",
  RlBypassToken: "rlBypassToken",
} as const;
export type RpcUsageMetricsGroupByEnum = ClosedEnum<
  typeof RpcUsageMetricsGroupByEnum
>;

/** @internal */
export const RpcUsageMetricsGroupByEnum$inboundSchema: z.ZodNativeEnum<
  typeof RpcUsageMetricsGroupByEnum
> = z.nativeEnum(RpcUsageMetricsGroupByEnum);

/** @internal */
export const RpcUsageMetricsGroupByEnum$outboundSchema: z.ZodNativeEnum<
  typeof RpcUsageMetricsGroupByEnum
> = RpcUsageMetricsGroupByEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RpcUsageMetricsGroupByEnum$ {
  /** @deprecated use `RpcUsageMetricsGroupByEnum$inboundSchema` instead. */
  export const inboundSchema = RpcUsageMetricsGroupByEnum$inboundSchema;
  /** @deprecated use `RpcUsageMetricsGroupByEnum$outboundSchema` instead. */
  export const outboundSchema = RpcUsageMetricsGroupByEnum$outboundSchema;
}
