/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PChainUtxo,
  PChainUtxo$inboundSchema,
  PChainUtxo$Outbound,
  PChainUtxo$outboundSchema,
} from "./pchainutxo.js";
import {
  PrimaryNetworkChainInfo,
  PrimaryNetworkChainInfo$inboundSchema,
  PrimaryNetworkChainInfo$Outbound,
  PrimaryNetworkChainInfo$outboundSchema,
} from "./primarynetworkchaininfo.js";

export type ListPChainUtxosResponse = {
  /**
   * A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages.
   */
  nextPageToken?: string | undefined;
  utxos: Array<PChainUtxo>;
  chainInfo: PrimaryNetworkChainInfo;
};

/** @internal */
export const ListPChainUtxosResponse$inboundSchema: z.ZodType<
  ListPChainUtxosResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  nextPageToken: z.string().optional(),
  utxos: z.array(PChainUtxo$inboundSchema),
  chainInfo: PrimaryNetworkChainInfo$inboundSchema,
});

/** @internal */
export type ListPChainUtxosResponse$Outbound = {
  nextPageToken?: string | undefined;
  utxos: Array<PChainUtxo$Outbound>;
  chainInfo: PrimaryNetworkChainInfo$Outbound;
};

/** @internal */
export const ListPChainUtxosResponse$outboundSchema: z.ZodType<
  ListPChainUtxosResponse$Outbound,
  z.ZodTypeDef,
  ListPChainUtxosResponse
> = z.object({
  nextPageToken: z.string().optional(),
  utxos: z.array(PChainUtxo$outboundSchema),
  chainInfo: PrimaryNetworkChainInfo$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPChainUtxosResponse$ {
  /** @deprecated use `ListPChainUtxosResponse$inboundSchema` instead. */
  export const inboundSchema = ListPChainUtxosResponse$inboundSchema;
  /** @deprecated use `ListPChainUtxosResponse$outboundSchema` instead. */
  export const outboundSchema = ListPChainUtxosResponse$outboundSchema;
  /** @deprecated use `ListPChainUtxosResponse$Outbound` instead. */
  export type Outbound = ListPChainUtxosResponse$Outbound;
}

export function listPChainUtxosResponseToJSON(
  listPChainUtxosResponse: ListPChainUtxosResponse,
): string {
  return JSON.stringify(
    ListPChainUtxosResponse$outboundSchema.parse(listPChainUtxosResponse),
  );
}

export function listPChainUtxosResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListPChainUtxosResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListPChainUtxosResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListPChainUtxosResponse' from JSON`,
  );
}
