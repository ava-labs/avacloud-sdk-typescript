/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  EvmNetworkOptions,
  EvmNetworkOptions$inboundSchema,
  EvmNetworkOptions$Outbound,
  EvmNetworkOptions$outboundSchema,
} from "./evmnetworkoptions.js";
import {
  EVMOperationType,
  EVMOperationType$inboundSchema,
  EVMOperationType$outboundSchema,
} from "./evmoperationtype.js";

export type CreateEvmTransactionExportRequest = {
  type: EVMOperationType;
  firstDate?: string | undefined;
  lastDate?: string | undefined;
  /**
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  startDate?: string | undefined;
  /**
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  endDate?: string | undefined;
  options: EvmNetworkOptions;
};

/** @internal */
export const CreateEvmTransactionExportRequest$inboundSchema: z.ZodType<
  CreateEvmTransactionExportRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: EVMOperationType$inboundSchema,
  firstDate: z.string().optional(),
  lastDate: z.string().optional(),
  startDate: z.string().optional(),
  endDate: z.string().optional(),
  options: EvmNetworkOptions$inboundSchema,
});

/** @internal */
export type CreateEvmTransactionExportRequest$Outbound = {
  type: string;
  firstDate?: string | undefined;
  lastDate?: string | undefined;
  startDate?: string | undefined;
  endDate?: string | undefined;
  options: EvmNetworkOptions$Outbound;
};

/** @internal */
export const CreateEvmTransactionExportRequest$outboundSchema: z.ZodType<
  CreateEvmTransactionExportRequest$Outbound,
  z.ZodTypeDef,
  CreateEvmTransactionExportRequest
> = z.object({
  type: EVMOperationType$outboundSchema,
  firstDate: z.string().optional(),
  lastDate: z.string().optional(),
  startDate: z.string().optional(),
  endDate: z.string().optional(),
  options: EvmNetworkOptions$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvmTransactionExportRequest$ {
  /** @deprecated use `CreateEvmTransactionExportRequest$inboundSchema` instead. */
  export const inboundSchema = CreateEvmTransactionExportRequest$inboundSchema;
  /** @deprecated use `CreateEvmTransactionExportRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvmTransactionExportRequest$outboundSchema;
  /** @deprecated use `CreateEvmTransactionExportRequest$Outbound` instead. */
  export type Outbound = CreateEvmTransactionExportRequest$Outbound;
}

export function createEvmTransactionExportRequestToJSON(
  createEvmTransactionExportRequest: CreateEvmTransactionExportRequest,
): string {
  return JSON.stringify(
    CreateEvmTransactionExportRequest$outboundSchema.parse(
      createEvmTransactionExportRequest,
    ),
  );
}

export function createEvmTransactionExportRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateEvmTransactionExportRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvmTransactionExportRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvmTransactionExportRequest' from JSON`,
  );
}
