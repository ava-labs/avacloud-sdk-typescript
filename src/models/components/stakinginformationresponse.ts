/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    StakingInformation,
    StakingInformation$inboundSchema,
    StakingInformation$Outbound,
    StakingInformation$outboundSchema,
} from "./stakinginformation.js";
import * as z from "zod";

export type StakingInformationResponse = {
    nextPageStartKey?: string | undefined;
    lastRun?: number | undefined;
    status: number;
    results: Array<StakingInformation>;
};

/** @internal */
export const StakingInformationResponse$inboundSchema: z.ZodType<
    StakingInformationResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    nextPageStartKey: z.string().optional(),
    lastRun: z.number().optional(),
    status: z.number(),
    results: z.array(StakingInformation$inboundSchema),
});

/** @internal */
export type StakingInformationResponse$Outbound = {
    nextPageStartKey?: string | undefined;
    lastRun?: number | undefined;
    status: number;
    results: Array<StakingInformation$Outbound>;
};

/** @internal */
export const StakingInformationResponse$outboundSchema: z.ZodType<
    StakingInformationResponse$Outbound,
    z.ZodTypeDef,
    StakingInformationResponse
> = z.object({
    nextPageStartKey: z.string().optional(),
    lastRun: z.number().optional(),
    status: z.number(),
    results: z.array(StakingInformation$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StakingInformationResponse$ {
    /** @deprecated use `StakingInformationResponse$inboundSchema` instead. */
    export const inboundSchema = StakingInformationResponse$inboundSchema;
    /** @deprecated use `StakingInformationResponse$outboundSchema` instead. */
    export const outboundSchema = StakingInformationResponse$outboundSchema;
    /** @deprecated use `StakingInformationResponse$Outbound` instead. */
    export type Outbound = StakingInformationResponse$Outbound;
}
