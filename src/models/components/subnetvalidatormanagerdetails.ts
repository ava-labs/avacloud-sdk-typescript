/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type SubnetValidatorManagerDetails = {
  blockchainId: string;
  evmContractAddress: string;
};

/** @internal */
export const SubnetValidatorManagerDetails$inboundSchema: z.ZodType<
  SubnetValidatorManagerDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  blockchainId: z.string(),
  evmContractAddress: z.string(),
});

/** @internal */
export type SubnetValidatorManagerDetails$Outbound = {
  blockchainId: string;
  evmContractAddress: string;
};

/** @internal */
export const SubnetValidatorManagerDetails$outboundSchema: z.ZodType<
  SubnetValidatorManagerDetails$Outbound,
  z.ZodTypeDef,
  SubnetValidatorManagerDetails
> = z.object({
  blockchainId: z.string(),
  evmContractAddress: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SubnetValidatorManagerDetails$ {
  /** @deprecated use `SubnetValidatorManagerDetails$inboundSchema` instead. */
  export const inboundSchema = SubnetValidatorManagerDetails$inboundSchema;
  /** @deprecated use `SubnetValidatorManagerDetails$outboundSchema` instead. */
  export const outboundSchema = SubnetValidatorManagerDetails$outboundSchema;
  /** @deprecated use `SubnetValidatorManagerDetails$Outbound` instead. */
  export type Outbound = SubnetValidatorManagerDetails$Outbound;
}
