/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    AssetAmount,
    AssetAmount$inboundSchema,
    AssetAmount$Outbound,
    AssetAmount$outboundSchema,
} from "./assetamount.js";
import { RewardType, RewardType$inboundSchema, RewardType$outboundSchema } from "./rewardtype.js";
import * as z from "zod";

export type PendingReward = {
    /**
     * An array of P-Chain wallet addresses.
     */
    addresses: Array<string>;
    txHash: string;
    amountStaked: string;
    nodeId: string;
    startTimestamp: number;
    endTimestamp: number;
    rewardType: RewardType;
    progress: number;
    /**
     * An object containing P-chain Asset basic info and the amount of that Asset ID.
     */
    estimatedReward: AssetAmount;
};

/** @internal */
export const PendingReward$inboundSchema: z.ZodType<PendingReward, z.ZodTypeDef, unknown> =
    z.object({
        addresses: z.array(z.string()),
        txHash: z.string(),
        amountStaked: z.string(),
        nodeId: z.string(),
        startTimestamp: z.number(),
        endTimestamp: z.number(),
        rewardType: RewardType$inboundSchema,
        progress: z.number(),
        estimatedReward: AssetAmount$inboundSchema,
    });

/** @internal */
export type PendingReward$Outbound = {
    addresses: Array<string>;
    txHash: string;
    amountStaked: string;
    nodeId: string;
    startTimestamp: number;
    endTimestamp: number;
    rewardType: string;
    progress: number;
    estimatedReward: AssetAmount$Outbound;
};

/** @internal */
export const PendingReward$outboundSchema: z.ZodType<
    PendingReward$Outbound,
    z.ZodTypeDef,
    PendingReward
> = z.object({
    addresses: z.array(z.string()),
    txHash: z.string(),
    amountStaked: z.string(),
    nodeId: z.string(),
    startTimestamp: z.number(),
    endTimestamp: z.number(),
    rewardType: RewardType$outboundSchema,
    progress: z.number(),
    estimatedReward: AssetAmount$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PendingReward$ {
    /** @deprecated use `PendingReward$inboundSchema` instead. */
    export const inboundSchema = PendingReward$inboundSchema;
    /** @deprecated use `PendingReward$outboundSchema` instead. */
    export const outboundSchema = PendingReward$outboundSchema;
    /** @deprecated use `PendingReward$Outbound` instead. */
    export type Outbound = PendingReward$Outbound;
}
