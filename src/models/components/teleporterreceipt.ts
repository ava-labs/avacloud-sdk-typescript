/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type TeleporterReceipt = {
  receivedMessageNonce: string;
  relayerRewardAddress: string;
};

/** @internal */
export const TeleporterReceipt$inboundSchema: z.ZodType<
  TeleporterReceipt,
  z.ZodTypeDef,
  unknown
> = z.object({
  receivedMessageNonce: z.string(),
  relayerRewardAddress: z.string(),
});

/** @internal */
export type TeleporterReceipt$Outbound = {
  receivedMessageNonce: string;
  relayerRewardAddress: string;
};

/** @internal */
export const TeleporterReceipt$outboundSchema: z.ZodType<
  TeleporterReceipt$Outbound,
  z.ZodTypeDef,
  TeleporterReceipt
> = z.object({
  receivedMessageNonce: z.string(),
  relayerRewardAddress: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TeleporterReceipt$ {
  /** @deprecated use `TeleporterReceipt$inboundSchema` instead. */
  export const inboundSchema = TeleporterReceipt$inboundSchema;
  /** @deprecated use `TeleporterReceipt$outboundSchema` instead. */
  export const outboundSchema = TeleporterReceipt$outboundSchema;
  /** @deprecated use `TeleporterReceipt$Outbound` instead. */
  export type Outbound = TeleporterReceipt$Outbound;
}
