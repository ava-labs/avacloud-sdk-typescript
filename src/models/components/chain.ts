/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    NetworkType,
    NetworkType$inboundSchema,
    NetworkType$outboundSchema,
} from "./networktype.js";
import * as z from "zod";

export type Chain = {
    /**
     * EVM ChainID for the blockchain.
     */
    chainId: number;
    /**
     * Blockchain alias for easy identification of blockchains.
     */
    chainName: string;
    /**
     * Unique blockchain ID for this blockchain.
     */
    blockchainId: string;
    /**
     * Subnet ID this blockchain belongs to.
     */
    subnetId: string;
    network: NetworkType;
};

/** @internal */
export const Chain$inboundSchema: z.ZodType<Chain, z.ZodTypeDef, unknown> = z.object({
    chainId: z.number(),
    chainName: z.string(),
    blockchainId: z.string(),
    subnetId: z.string(),
    network: NetworkType$inboundSchema,
});

/** @internal */
export type Chain$Outbound = {
    chainId: number;
    chainName: string;
    blockchainId: string;
    subnetId: string;
    network: string;
};

/** @internal */
export const Chain$outboundSchema: z.ZodType<Chain$Outbound, z.ZodTypeDef, Chain> = z.object({
    chainId: z.number(),
    chainName: z.string(),
    blockchainId: z.string(),
    subnetId: z.string(),
    network: NetworkType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Chain$ {
    /** @deprecated use `Chain$inboundSchema` instead. */
    export const inboundSchema = Chain$inboundSchema;
    /** @deprecated use `Chain$outboundSchema` instead. */
    export const outboundSchema = Chain$outboundSchema;
    /** @deprecated use `Chain$Outbound` instead. */
    export type Outbound = Chain$Outbound;
}
