/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    AssetAmount,
    AssetAmount$inboundSchema,
    AssetAmount$Outbound,
    AssetAmount$outboundSchema,
} from "./assetamount.js";
import * as z from "zod";

export type EVMOutput = {
    /**
     * EVM address to which the asset is imported in ImportTx
     */
    toAddress: string;
    /**
     * AssetAmount details for the asset being transferred.
     */
    asset: AssetAmount;
};

/** @internal */
export const EVMOutput$inboundSchema: z.ZodType<EVMOutput, z.ZodTypeDef, unknown> = z.object({
    toAddress: z.string(),
    asset: AssetAmount$inboundSchema,
});

/** @internal */
export type EVMOutput$Outbound = {
    toAddress: string;
    asset: AssetAmount$Outbound;
};

/** @internal */
export const EVMOutput$outboundSchema: z.ZodType<EVMOutput$Outbound, z.ZodTypeDef, EVMOutput> =
    z.object({
        toAddress: z.string(),
        asset: AssetAmount$outboundSchema,
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EVMOutput$ {
    /** @deprecated use `EVMOutput$inboundSchema` instead. */
    export const inboundSchema = EVMOutput$inboundSchema;
    /** @deprecated use `EVMOutput$outboundSchema` instead. */
    export const outboundSchema = EVMOutput$outboundSchema;
    /** @deprecated use `EVMOutput$Outbound` instead. */
    export type Outbound = EVMOutput$Outbound;
}
