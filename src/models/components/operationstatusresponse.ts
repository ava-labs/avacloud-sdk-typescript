/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    OperationStatus,
    OperationStatus$inboundSchema,
    OperationStatus$outboundSchema,
} from "./operationstatus.js";
import {
    OperationType,
    OperationType$inboundSchema,
    OperationType$outboundSchema,
} from "./operationtype.js";
import {
    TransactionExportMetadata,
    TransactionExportMetadata$inboundSchema,
    TransactionExportMetadata$Outbound,
    TransactionExportMetadata$outboundSchema,
} from "./transactionexportmetadata.js";
import * as z from "zod";

export type Metadata = TransactionExportMetadata;

export type OperationStatusResponse = {
    operationId: string;
    operationType: OperationType;
    operationStatus: OperationStatus;
    message?: string | undefined;
    metadata: TransactionExportMetadata;
    createdAtTimestamp: number;
    updatedAtTimestamp: number;
};

/** @internal */
export const Metadata$inboundSchema: z.ZodType<Metadata, z.ZodTypeDef, unknown> =
    TransactionExportMetadata$inboundSchema;

/** @internal */
export type Metadata$Outbound = TransactionExportMetadata$Outbound;

/** @internal */
export const Metadata$outboundSchema: z.ZodType<Metadata$Outbound, z.ZodTypeDef, Metadata> =
    TransactionExportMetadata$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Metadata$ {
    /** @deprecated use `Metadata$inboundSchema` instead. */
    export const inboundSchema = Metadata$inboundSchema;
    /** @deprecated use `Metadata$outboundSchema` instead. */
    export const outboundSchema = Metadata$outboundSchema;
    /** @deprecated use `Metadata$Outbound` instead. */
    export type Outbound = Metadata$Outbound;
}

/** @internal */
export const OperationStatusResponse$inboundSchema: z.ZodType<
    OperationStatusResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    operationId: z.string(),
    operationType: OperationType$inboundSchema,
    operationStatus: OperationStatus$inboundSchema,
    message: z.string().optional(),
    metadata: TransactionExportMetadata$inboundSchema,
    createdAtTimestamp: z.number(),
    updatedAtTimestamp: z.number(),
});

/** @internal */
export type OperationStatusResponse$Outbound = {
    operationId: string;
    operationType: string;
    operationStatus: string;
    message?: string | undefined;
    metadata: TransactionExportMetadata$Outbound;
    createdAtTimestamp: number;
    updatedAtTimestamp: number;
};

/** @internal */
export const OperationStatusResponse$outboundSchema: z.ZodType<
    OperationStatusResponse$Outbound,
    z.ZodTypeDef,
    OperationStatusResponse
> = z.object({
    operationId: z.string(),
    operationType: OperationType$outboundSchema,
    operationStatus: OperationStatus$outboundSchema,
    message: z.string().optional(),
    metadata: TransactionExportMetadata$outboundSchema,
    createdAtTimestamp: z.number(),
    updatedAtTimestamp: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OperationStatusResponse$ {
    /** @deprecated use `OperationStatusResponse$inboundSchema` instead. */
    export const inboundSchema = OperationStatusResponse$inboundSchema;
    /** @deprecated use `OperationStatusResponse$outboundSchema` instead. */
    export const outboundSchema = OperationStatusResponse$outboundSchema;
    /** @deprecated use `OperationStatusResponse$Outbound` instead. */
    export type Outbound = OperationStatusResponse$Outbound;
}
