/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ProposerDetails = {
    proposerId?: string | undefined;
    proposerParentId?: string | undefined;
    proposerNodeId?: string | undefined;
    proposerPChainHeight?: number | undefined;
    proposerTimestamp?: number | undefined;
};

/** @internal */
export const ProposerDetails$inboundSchema: z.ZodType<ProposerDetails, z.ZodTypeDef, unknown> =
    z.object({
        proposerId: z.string().optional(),
        proposerParentId: z.string().optional(),
        proposerNodeId: z.string().optional(),
        proposerPChainHeight: z.number().optional(),
        proposerTimestamp: z.number().optional(),
    });

/** @internal */
export type ProposerDetails$Outbound = {
    proposerId?: string | undefined;
    proposerParentId?: string | undefined;
    proposerNodeId?: string | undefined;
    proposerPChainHeight?: number | undefined;
    proposerTimestamp?: number | undefined;
};

/** @internal */
export const ProposerDetails$outboundSchema: z.ZodType<
    ProposerDetails$Outbound,
    z.ZodTypeDef,
    ProposerDetails
> = z.object({
    proposerId: z.string().optional(),
    proposerParentId: z.string().optional(),
    proposerNodeId: z.string().optional(),
    proposerPChainHeight: z.number().optional(),
    proposerTimestamp: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProposerDetails$ {
    /** @deprecated use `ProposerDetails$inboundSchema` instead. */
    export const inboundSchema = ProposerDetails$inboundSchema;
    /** @deprecated use `ProposerDetails$outboundSchema` instead. */
    export const outboundSchema = ProposerDetails$outboundSchema;
    /** @deprecated use `ProposerDetails$Outbound` instead. */
    export type Outbound = ProposerDetails$Outbound;
}
