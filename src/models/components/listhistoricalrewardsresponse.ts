/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    HistoricalReward,
    HistoricalReward$inboundSchema,
    HistoricalReward$Outbound,
    HistoricalReward$outboundSchema,
} from "./historicalreward.js";
import * as z from "zod";

export type ListHistoricalRewardsResponse = {
    /**
     * A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages.
     */
    nextPageToken?: string | undefined;
    historicalRewards: Array<HistoricalReward>;
};

/** @internal */
export const ListHistoricalRewardsResponse$inboundSchema: z.ZodType<
    ListHistoricalRewardsResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    nextPageToken: z.string().optional(),
    historicalRewards: z.array(HistoricalReward$inboundSchema),
});

/** @internal */
export type ListHistoricalRewardsResponse$Outbound = {
    nextPageToken?: string | undefined;
    historicalRewards: Array<HistoricalReward$Outbound>;
};

/** @internal */
export const ListHistoricalRewardsResponse$outboundSchema: z.ZodType<
    ListHistoricalRewardsResponse$Outbound,
    z.ZodTypeDef,
    ListHistoricalRewardsResponse
> = z.object({
    nextPageToken: z.string().optional(),
    historicalRewards: z.array(HistoricalReward$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListHistoricalRewardsResponse$ {
    /** @deprecated use `ListHistoricalRewardsResponse$inboundSchema` instead. */
    export const inboundSchema = ListHistoricalRewardsResponse$inboundSchema;
    /** @deprecated use `ListHistoricalRewardsResponse$outboundSchema` instead. */
    export const outboundSchema = ListHistoricalRewardsResponse$outboundSchema;
    /** @deprecated use `ListHistoricalRewardsResponse$Outbound` instead. */
    export type Outbound = ListHistoricalRewardsResponse$Outbound;
}
