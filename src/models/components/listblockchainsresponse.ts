/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  Blockchain,
  Blockchain$inboundSchema,
  Blockchain$Outbound,
  Blockchain$outboundSchema,
} from "./blockchain.js";

export type ListBlockchainsResponse = {
  /**
   * A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages.
   */
  nextPageToken?: string | undefined;
  blockchains: Array<Blockchain>;
};

/** @internal */
export const ListBlockchainsResponse$inboundSchema: z.ZodType<
  ListBlockchainsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  nextPageToken: z.string().optional(),
  blockchains: z.array(Blockchain$inboundSchema),
});

/** @internal */
export type ListBlockchainsResponse$Outbound = {
  nextPageToken?: string | undefined;
  blockchains: Array<Blockchain$Outbound>;
};

/** @internal */
export const ListBlockchainsResponse$outboundSchema: z.ZodType<
  ListBlockchainsResponse$Outbound,
  z.ZodTypeDef,
  ListBlockchainsResponse
> = z.object({
  nextPageToken: z.string().optional(),
  blockchains: z.array(Blockchain$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListBlockchainsResponse$ {
  /** @deprecated use `ListBlockchainsResponse$inboundSchema` instead. */
  export const inboundSchema = ListBlockchainsResponse$inboundSchema;
  /** @deprecated use `ListBlockchainsResponse$outboundSchema` instead. */
  export const outboundSchema = ListBlockchainsResponse$outboundSchema;
  /** @deprecated use `ListBlockchainsResponse$Outbound` instead. */
  export type Outbound = ListBlockchainsResponse$Outbound;
}
