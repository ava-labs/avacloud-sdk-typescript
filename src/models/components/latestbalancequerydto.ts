/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  LatestBalanceParams,
  LatestBalanceParams$inboundSchema,
  LatestBalanceParams$Outbound,
  LatestBalanceParams$outboundSchema,
} from "./latestbalanceparams.js";

export const LatestBalanceQueryDtoType = {
  LatestBalance: "LatestBalance",
} as const;
export type LatestBalanceQueryDtoType = ClosedEnum<
  typeof LatestBalanceQueryDtoType
>;

export type LatestBalanceQueryDto = {
  id: string;
  type: LatestBalanceQueryDtoType;
  params: LatestBalanceParams;
};

/** @internal */
export const LatestBalanceQueryDtoType$inboundSchema: z.ZodNativeEnum<
  typeof LatestBalanceQueryDtoType
> = z.nativeEnum(LatestBalanceQueryDtoType);

/** @internal */
export const LatestBalanceQueryDtoType$outboundSchema: z.ZodNativeEnum<
  typeof LatestBalanceQueryDtoType
> = LatestBalanceQueryDtoType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LatestBalanceQueryDtoType$ {
  /** @deprecated use `LatestBalanceQueryDtoType$inboundSchema` instead. */
  export const inboundSchema = LatestBalanceQueryDtoType$inboundSchema;
  /** @deprecated use `LatestBalanceQueryDtoType$outboundSchema` instead. */
  export const outboundSchema = LatestBalanceQueryDtoType$outboundSchema;
}

/** @internal */
export const LatestBalanceQueryDto$inboundSchema: z.ZodType<
  LatestBalanceQueryDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  type: LatestBalanceQueryDtoType$inboundSchema,
  params: LatestBalanceParams$inboundSchema,
});

/** @internal */
export type LatestBalanceQueryDto$Outbound = {
  id: string;
  type: string;
  params: LatestBalanceParams$Outbound;
};

/** @internal */
export const LatestBalanceQueryDto$outboundSchema: z.ZodType<
  LatestBalanceQueryDto$Outbound,
  z.ZodTypeDef,
  LatestBalanceQueryDto
> = z.object({
  id: z.string(),
  type: LatestBalanceQueryDtoType$outboundSchema,
  params: LatestBalanceParams$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LatestBalanceQueryDto$ {
  /** @deprecated use `LatestBalanceQueryDto$inboundSchema` instead. */
  export const inboundSchema = LatestBalanceQueryDto$inboundSchema;
  /** @deprecated use `LatestBalanceQueryDto$outboundSchema` instead. */
  export const outboundSchema = LatestBalanceQueryDto$outboundSchema;
  /** @deprecated use `LatestBalanceQueryDto$Outbound` instead. */
  export type Outbound = LatestBalanceQueryDto$Outbound;
}

export function latestBalanceQueryDtoToJSON(
  latestBalanceQueryDto: LatestBalanceQueryDto,
): string {
  return JSON.stringify(
    LatestBalanceQueryDto$outboundSchema.parse(latestBalanceQueryDto),
  );
}

export function latestBalanceQueryDtoFromJSON(
  jsonString: string,
): SafeParseResult<LatestBalanceQueryDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LatestBalanceQueryDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LatestBalanceQueryDto' from JSON`,
  );
}
