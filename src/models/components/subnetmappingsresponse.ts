/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    SubnetMapping,
    SubnetMapping$inboundSchema,
    SubnetMapping$Outbound,
    SubnetMapping$outboundSchema,
} from "./subnetmapping.js";
import * as z from "zod";

export type SubnetMappingsResponse = {
    nextPageStartKey?: string | undefined;
    lastRun?: number | undefined;
    status: number;
    results: Array<SubnetMapping>;
};

/** @internal */
export const SubnetMappingsResponse$inboundSchema: z.ZodType<
    SubnetMappingsResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    nextPageStartKey: z.string().optional(),
    lastRun: z.number().optional(),
    status: z.number(),
    results: z.array(SubnetMapping$inboundSchema),
});

/** @internal */
export type SubnetMappingsResponse$Outbound = {
    nextPageStartKey?: string | undefined;
    lastRun?: number | undefined;
    status: number;
    results: Array<SubnetMapping$Outbound>;
};

/** @internal */
export const SubnetMappingsResponse$outboundSchema: z.ZodType<
    SubnetMappingsResponse$Outbound,
    z.ZodTypeDef,
    SubnetMappingsResponse
> = z.object({
    nextPageStartKey: z.string().optional(),
    lastRun: z.number().optional(),
    status: z.number(),
    results: z.array(SubnetMapping$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SubnetMappingsResponse$ {
    /** @deprecated use `SubnetMappingsResponse$inboundSchema` instead. */
    export const inboundSchema = SubnetMappingsResponse$inboundSchema;
    /** @deprecated use `SubnetMappingsResponse$outboundSchema` instead. */
    export const outboundSchema = SubnetMappingsResponse$outboundSchema;
    /** @deprecated use `SubnetMappingsResponse$Outbound` instead. */
    export type Outbound = SubnetMappingsResponse$Outbound;
}
