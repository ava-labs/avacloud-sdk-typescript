/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.
 */
export const TransactionMethodType = {
  NativeTransfer: "NATIVE_TRANSFER",
  ContractCall: "CONTRACT_CALL",
  ContractCreation: "CONTRACT_CREATION",
} as const;
/**
 * The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.
 */
export type TransactionMethodType = ClosedEnum<typeof TransactionMethodType>;

/** @internal */
export const TransactionMethodType$inboundSchema: z.ZodNativeEnum<
  typeof TransactionMethodType
> = z.nativeEnum(TransactionMethodType);

/** @internal */
export const TransactionMethodType$outboundSchema: z.ZodNativeEnum<
  typeof TransactionMethodType
> = TransactionMethodType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransactionMethodType$ {
  /** @deprecated use `TransactionMethodType$inboundSchema` instead. */
  export const inboundSchema = TransactionMethodType$inboundSchema;
  /** @deprecated use `TransactionMethodType$outboundSchema` instead. */
  export const outboundSchema = TransactionMethodType$outboundSchema;
}
