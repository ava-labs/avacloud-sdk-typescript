/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Bad Gateway
 */
export type BadGatewayData = {
    /**
     * The error message describing the reason for the exception
     */
    message: Array<string>;
    /**
     * The HTTP status code of the response
     */
    statusCode: number;
    /**
     * The type of error
     */
    error: string;
};

/**
 * Bad Gateway
 */
export class BadGateway extends Error {
    /**
     * The HTTP status code of the response
     */
    statusCode: number;
    /**
     * The type of error
     */
    error: string;

    /** The original data that was passed to this error instance. */
    data$: BadGatewayData;

    constructor(err: BadGatewayData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.statusCode = err.statusCode;
        this.error = err.error;

        this.name = "BadGateway";
    }
}

/** @internal */
export const BadGateway$inboundSchema: z.ZodType<BadGateway, z.ZodTypeDef, unknown> = z
    .object({
        message: z.array(z.string()),
        statusCode: z.number(),
        error: z.string(),
    })
    .transform((v) => {
        return new BadGateway(v);
    });

/** @internal */
export type BadGateway$Outbound = {
    message: Array<string>;
    statusCode: number;
    error: string;
};

/** @internal */
export const BadGateway$outboundSchema: z.ZodType<BadGateway$Outbound, z.ZodTypeDef, BadGateway> = z
    .instanceof(BadGateway)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            message: z.array(z.string()),
            statusCode: z.number(),
            error: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadGateway$ {
    /** @deprecated use `BadGateway$inboundSchema` instead. */
    export const inboundSchema = BadGateway$inboundSchema;
    /** @deprecated use `BadGateway$outboundSchema` instead. */
    export const outboundSchema = BadGateway$outboundSchema;
    /** @deprecated use `BadGateway$Outbound` instead. */
    export type Outbound = BadGateway$Outbound;
}
